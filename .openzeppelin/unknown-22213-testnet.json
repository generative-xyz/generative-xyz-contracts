{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7D77b65e4E120368f19A46b4cc69e209fCac777",
    "txHash": "0xf18e9a75a162c32f148338c24422bb26e0b89bb69f0cb8b53c2a662de49355f6"
  },
  "proxies": [
    {
      "address": "0x12e20e3E5122bB9455544814A0e7e3D9df610cAA",
      "txHash": "0xd4806b0e621562c67080b182bf3350b66e121b3454faece96d0ca5d80d550205",
      "kind": "transparent"
    },
    {
      "address": "0x57D6Af38EfFEa4898afEa47A2A16F38eEeAdDfA9",
      "txHash": "0x10204575180390c5e9219ee96c0fa69ffed77975f08405cd22ad9f13025ee807",
      "kind": "transparent"
    },
    {
      "address": "0x29Ef8463378511C9DfBb0ae55C70B6DCfE72F301",
      "txHash": "0x4c24ea68a221f1222931075bf129c4f6f1892a2ba6b19f96e081f0e34b5ef9b9",
      "kind": "transparent"
    },
    {
      "address": "0x741BcE6205Ad58F35f4005D3C922A3D047c71Db6",
      "txHash": "0xc5749e9ff4200c3517a79ea17ca8c1aed641dc7671d9619983ce70991bcfc91e",
      "kind": "transparent"
    },
    {
      "address": "0xa434b6a535e4cf9E4F6C77dF4eec06ED666ab8F9",
      "txHash": "0x67f10bf0bbae2952ca7d1d63541d15814e5d59d4127ddffbe7015625004460ed",
      "kind": "transparent"
    },
    {
      "address": "0x9A5165cC547346a12052D76d99cfB8befBEE0516",
      "txHash": "0x85438c38e8a0dcd268ba07207fe1709c64adc301cea3196d126efa08bc0b615a",
      "kind": "transparent"
    },
    {
      "address": "0xe3AB0C1368A1D2DbAD1517a6FC48C3D44e01f4A9",
      "txHash": "0xf25e0ed9686d46f8e53d0aba3aa0b99998e6c0844576045acad1aa8867f0c7f8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9897d998a72387a4e80e16ad68575f30e57116ddc5f37e19a5ada2d95b28e9cc": {
      "address": "0xc53e26981176b4AD119F032C539E8037434FBB6b",
      "txHash": "0x5e9ab81ed61bff81b0d6699367f949be58832faa670ca454b450f367dad1d15f",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)1927_storage",
            "contract": "ERC721Drive",
            "src": "contracts/nfts/ERC721Drive.sol:14"
          },
          {
            "label": "_bfsAddr",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "ERC721Drive",
            "src": "contracts/nfts/ERC721Drive.sol:15"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "ERC721Drive",
            "src": "contracts/nfts/ERC721Drive.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1927_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ffbb36e3a584e36afa63ceeb199bb6b74db6d358b466f701819a1443d67fa35d": {
      "address": "0x79705F45d59BcC665C45b9b670a086b5Da35b454",
      "txHash": "0xb371f48402ecd3a64d224d7aceb1c6a50cf36c30d9c5a7688aaadbf010d47402",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)1927_storage",
            "contract": "ERC721Drive",
            "src": "contracts/nfts/ERC721Drive.sol:14"
          },
          {
            "label": "_bfsAddr",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "ERC721Drive",
            "src": "contracts/nfts/ERC721Drive.sol:15"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "ERC721Drive",
            "src": "contracts/nfts/ERC721Drive.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1927_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d9978b0533584defc82598af7d169ef764983dca92fe85bb081f4d2c2448006d": {
      "address": "0x811dBd2756b2de0cEeA83FC951f524B9A3Ac86B2",
      "txHash": "0xdf86e29c36813295f09d9c4ac1514eaf83feef6e85e71b294352122c8a96073a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)1927_storage",
            "contract": "ERC721Drive",
            "src": "contracts/nfts/ERC721Drive.sol:14"
          },
          {
            "label": "_bfsAddr",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "ERC721Drive",
            "src": "contracts/nfts/ERC721Drive.sol:15"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "ERC721Drive",
            "src": "contracts/nfts/ERC721Drive.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1927_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8e675d26eba909e9f0353ad5dffe91743a6dbf909e991cac5afd1a27ae4101d1": {
      "address": "0x802a1144A60Ad6B60C6e07074936307361204A98",
      "txHash": "0xf1a7807921fcfc9a17377899e74c28e2600802d1f719f3ad83edaff405482f11",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:14"
          },
          {
            "label": "_parameterAddr",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:15"
          },
          {
            "label": "_bfsAddr",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:16"
          },
          {
            "label": "_index",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:17"
          },
          {
            "label": "ownedPhotos",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:18"
          },
          {
            "label": "albumPhotos",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage))",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:19"
          },
          {
            "label": "ownedAlbums",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(string => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(string => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e785ed10f34606a57159b81b97bff752fb1aa73aa369b99507f841f784baf78f": {
      "address": "0x5a62c387Af5CAf4807D6BA5339982038F34a0453",
      "txHash": "0x08c0d7702e57a0da4bcdf43f1e0c0d02ecd67d1788a8799fd70e36b5485351ad",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:14"
          },
          {
            "label": "_parameterAddr",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:15"
          },
          {
            "label": "_bfsAddr",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:16"
          },
          {
            "label": "_index",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:17"
          },
          {
            "label": "ownedPhotos",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:18"
          },
          {
            "label": "albumPhotos",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage))",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:19"
          },
          {
            "label": "ownedAlbums",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(string => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(string => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8196ca7867ec796e8a83ce39efbf242b6f2aaeb2fd0f76c816f739584112d80c": {
      "address": "0xeDd45C6E552b18c3888f3f888A16b0aA05c75255",
      "txHash": "0xd8db4de57aafe0f37f7129685394ef5da7b252e56e8a39db3ec9cf383691dabc",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)3644_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)2079_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_struct(Checkpoint)2079_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:284"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20VotesCompUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:58"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "GENToken",
            "src": "contracts/erc20/GENToken.sol:19"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "555",
            "type": "t_address",
            "contract": "GENToken",
            "src": "contracts/erc20/GENToken.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2079_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)2079_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3644_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2079_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3644_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "662045ee1a78bedee5ec3c82550f7967c7dcb585d3fd1b95e5949903a0c62fb0": {
      "address": "0x648B7e1BeeA83492234bd2405466930b5E538D8d",
      "txHash": "0x21a909a56753a0f9df25f924e76f72dcf2312388e044828424c9426da7fe7132",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "decimals",
            "offset": 0,
            "slot": "101",
            "type": "t_uint8",
            "contract": "WTC",
            "src": "contracts/erc20/WTC.sol:7"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "WTC",
            "src": "contracts/erc20/WTC.sol:8"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WTC",
            "src": "contracts/erc20/WTC.sol:15"
          },
          {
            "label": "allowance",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "WTC",
            "src": "contracts/erc20/WTC.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "27578c05e81fb481b903f43ad0c41dc1f1579de6dbfc31c31b940ebc5403ec7f": {
      "address": "0xfc32eD4770f04da0756aC0527a4b9eE645E0e1F1",
      "txHash": "0xdf4cb704477323057a1596fc73b3f6a5d7bb5e0fda47b27e19bd973f24c9635f",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:21"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:23"
          },
          {
            "label": "_parameterAddr",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:24"
          },
          {
            "label": "_listingTokens",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:26"
          },
          {
            "label": "_arrayListingId",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:27"
          },
          {
            "label": "_makeOfferTokens",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:29"
          },
          {
            "label": "_arrayMakeOfferId",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:30"
          },
          {
            "label": "_listingTokenDataMapping",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:8"
          },
          {
            "label": "_listingTokenIds",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:10"
          },
          {
            "label": "_makeOfferDataMapping",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:12"
          },
          {
            "label": "_makeOfferTokenIds",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:14"
          },
          {
            "label": "_allowableERC20MakeOffer",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:16"
          },
          {
            "label": "_allowableERC20MakeListToken",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ListingTokenData)4424_storage)dyn_storage": {
            "label": "struct Marketplace.ListingTokenData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MakeOfferData)4439_storage)dyn_storage": {
            "label": "struct Marketplace.MakeOfferData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.ListingTokenData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.MakeOfferData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.ListingTokenData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.MakeOfferData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.ListingTokenData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.MakeOfferData[])",
            "numberOfBytes": "32"
          },
          "t_struct(ListingTokenData)4424_storage": {
            "label": "struct Marketplace.ListingTokenData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_seller",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(MakeOfferData)4439_storage": {
            "label": "struct Marketplace.MakeOfferData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_buyer",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6fc0677fb2e3e6ab138f13ae530bb73c7b5a56f075f1a764c735a79b2927bbaf": {
      "address": "0x07846BEDc0a4585126496ac7d017a9A6a1Ab9E62",
      "txHash": "0xe6a6f5b566415dbeebc0ac160784e9b2f68ea7e59d84348164a04cf33f2357fe",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:21"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:23"
          },
          {
            "label": "_parameterAddr",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:24"
          },
          {
            "label": "_listingTokens",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:26"
          },
          {
            "label": "_arrayListingId",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:27"
          },
          {
            "label": "_makeOfferTokens",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:29"
          },
          {
            "label": "_arrayMakeOfferId",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:30"
          },
          {
            "label": "_listingTokenDataMapping",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:8"
          },
          {
            "label": "_listingTokenIds",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:10"
          },
          {
            "label": "_makeOfferDataMapping",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:12"
          },
          {
            "label": "_makeOfferTokenIds",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:14"
          },
          {
            "label": "_allowableERC20MakeOffer",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:16"
          },
          {
            "label": "_allowableERC20MakeListToken",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ListingTokenData)4424_storage)dyn_storage": {
            "label": "struct Marketplace.ListingTokenData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MakeOfferData)4439_storage)dyn_storage": {
            "label": "struct Marketplace.MakeOfferData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.ListingTokenData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.MakeOfferData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.ListingTokenData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.MakeOfferData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.ListingTokenData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.MakeOfferData[])",
            "numberOfBytes": "32"
          },
          "t_struct(ListingTokenData)4424_storage": {
            "label": "struct Marketplace.ListingTokenData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_seller",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(MakeOfferData)4439_storage": {
            "label": "struct Marketplace.MakeOfferData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_buyer",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
