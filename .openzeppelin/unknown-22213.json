{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xC0F64fB56f003966457Bc4cEe25186B514206B14",
    "txHash": "0x2f9460821a235c1abf4b5cf3dee7fe529b0c03b1e3622f23c1a6aefa2b06206d"
  },
  "proxies": [
    {
      "address": "0xa36035E366176Ad0a0f67ba1852Aa73170C57bc1",
      "txHash": "0xe2a85b67789a6da23e30ee0c855bfe940aee192caae4845235d88726784552a2",
      "kind": "transparent"
    },
    {
      "address": "0xe08811c6AB1B27526fA9F889907D65f441ADF124",
      "txHash": "0x0b25e09a815353804ec9114ec95a1381c3acdb02a1cdb28ea84eb436c2c29b5d",
      "kind": "transparent"
    },
    {
      "address": "0xf8920245CAD422925586DfDA0Bb9A5F4AcBe1A39",
      "txHash": "0xafb47d191fbca9c73422945a4632ec437925d3271125cd38a86209a7e6a7c00b",
      "kind": "transparent"
    },
    {
      "address": "0xFc900DD0B937A05742a8765a0eD4AB5F06a14a06",
      "txHash": "0x79992604d55960ada32b0a859cdb5237acad8e52445e6a8f5f124f3badfc8307",
      "kind": "transparent"
    },
    {
      "address": "0xccd760F40783786415F7380FB23F1af0E746804B",
      "txHash": "0x30d7e62f2fbf3e48588275acffaeaa754c9aaf485325d3ba2e78832ebc04b60a",
      "kind": "transparent"
    },
    {
      "address": "0xF3368Ba95164A9dFbd8E1F7D33F222D565C10bf6",
      "txHash": "0x6d0cd792c742ba78166680bd3d5341d94e3fb0c40809e937a09d1b5cdf40885a",
      "kind": "transparent"
    },
    {
      "address": "0x16EfDc6D3F977E39DAc0Eb0E123FefFeD4320Bc0",
      "txHash": "0x70b8540bc1dde74f40816768f7ae4763019df33121541a0073047d0ad0a339fb",
      "kind": "transparent"
    },
    {
      "address": "0xbf9D16BE3318A93dedE61505B243562509989840",
      "txHash": "0x7bda8f68730999b8d7b8d17a52bea5ed5c720340913ca242e6143920a6b9d399",
      "kind": "transparent"
    },
    {
      "address": "0xF5CF648B47916eF8e0033c7F023366c4BE05f7C7",
      "txHash": "0x00817cab043f434134a8f3294cee5a8aff5764e6bb04eb8fb59396ece8c5aee8",
      "kind": "transparent"
    },
    {
      "address": "0x3f6372fDeFbf7b0510ec48E8cdD639c979f2a959",
      "txHash": "0x544cf410e4bfe77f479db0c230846a9e358b800fc63def02078d4a65190ea3f7",
      "kind": "transparent"
    },
    {
      "address": "0xDa00b6A8B521113501BB98fD0A7fFCfe756d9962",
      "txHash": "0x9da4b6b18fb16e9cc9c61fc1b56d318a5fa69132df4234fde3306161a5de55cf",
      "kind": "transparent"
    },
    {
      "address": "0x75F241E41Ad34076c4482823b1f31434bDd00ede",
      "txHash": "0x14b89c2aceb20a4b09799d6f58b51c91d4f23610d8bc5af35416970a536a11ea",
      "kind": "transparent"
    },
    {
      "address": "0x05F1D43050754fDd4cEf95c88567ac51709238A9",
      "txHash": "0x7277f906575ca383dd8d5248ed8dd90efde1beadf829bb975921d2cc9ce13186",
      "kind": "transparent"
    },
    {
      "address": "0xe54A45fbE9F2CDa96704Dd3CA876388907B5662a",
      "txHash": "0xf8d3b6d72232e67aabc3219272269bfdd77f184b767669b844c5154a9fa3b48f",
      "kind": "transparent"
    },
    {
      "address": "0x184E659113f48Df353FcE5DfDC62f107571623D5",
      "txHash": "0x859ddf89ac67fb62ede2d6f03c74a340ed7d0cd9cf0cf8d853e0eb94b54da6fe",
      "kind": "transparent"
    },
    {
      "address": "0xab566C459f0e8067c842e4c74Bd47E7A7ca8fb2d",
      "txHash": "0x0821d60f87cc78c56e765e678f93eb98dab844c18398474503fa54039ce0a15e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "eb86a0f21733a1d99c5f4665edfc4043d3b185d0aaaf340a0e3b04482d8ebd13": {
      "address": "0x6b34779CE1FdE83e242bebcF97fdfB347f971681",
      "txHash": "0x8e7db712f64b71740ea9b6e5453e57e0bb4502e9c425f59ad9137aca8a8910ac",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:28"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:30"
          },
          {
            "label": "_projectDataContextAddr",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:32"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:35"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(Project)27720_storage)",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)27720_storage)": {
            "label": "mapping(uint256 => struct NFTProject.Project)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Project)27720_storage": {
            "label": "struct NFTProject.Project",
            "members": [
              {
                "label": "_maxSupply",
                "type": "t_uint24",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_limit",
                "type": "t_uint24",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "_mintPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintPriceAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_creatorAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_license",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_social",
                "type": "t_struct(ProjectSocial)27731_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_scriptType",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "_scripts",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "_styles",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "_completeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "_genNFTAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "18"
              },
              {
                "label": "_itemDesc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "19"
              },
              {
                "label": "_reserves",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "20"
              },
              {
                "label": "_royalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "21"
              }
            ],
            "numberOfBytes": "704"
          },
          "t_struct(ProjectSocial)27731_storage": {
            "label": "struct NFTProject.ProjectSocial",
            "members": [
              {
                "label": "_web",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_twitter",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_discord",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_medium",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_instagram",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b00fc1d5f531feab34f8065d48e9dd088b07d880c56ed954bad2bb4de54f8831": {
      "address": "0xFAF61Ed8Ab309673BAc89bA9456407819D1d10b2",
      "txHash": "0x780ec4146fe9e55cf6cd34624b37cff12abd0d3f06a5372e66d6459a0c934ae5",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "be4e0c1182efb89b4a86e7a9afb5aae0195d7bedb1f4036146a26c7e54ad9e48": {
      "address": "0x3F9A393e25FC24E01174bBEED7DF678A30bADd13",
      "txHash": "0xdb188ef52554ee6371a4c099f855c0cc03407149c6823bda0563a7e3fb1a96e8",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "GenDAOTreasury",
            "src": "contracts/governance/GenDAOTreasury.sol:16"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "GenDAOTreasury",
            "src": "contracts/governance/GenDAOTreasury.sol:17"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "GenDAOTreasury",
            "src": "contracts/governance/GenDAOTreasury.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7d053b492cee559a7c5935a168b207f2eb66c6788edc95f71a0aa391c617eaf8": {
      "address": "0x8b6F6AB83823f02232DA2Ee50c4f7BC7F4CC9BeD",
      "txHash": "0x4f34e80d8821c36e94b9ed20d5ee83c0d515ece9f09604600d50264866d72be6",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "RoyaltyFinanceSecondSale",
            "src": "contracts/services/RoyaltyFinanceSecondSale.sol:25"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "RoyaltyFinanceSecondSale",
            "src": "contracts/services/RoyaltyFinanceSecondSale.sol:27"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "RoyaltyFinanceSecondSale",
            "src": "contracts/services/RoyaltyFinanceSecondSale.sol:28"
          },
          {
            "label": "_proxyRoyaltySecondSales",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RoyaltyFinanceSecondSale",
            "src": "contracts/services/RoyaltyFinanceSecondSale.sol:29"
          },
          {
            "label": "_royaltySecondSaleAdmin",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RoyaltyFinanceSecondSale",
            "src": "contracts/services/RoyaltyFinanceSecondSale.sol:32"
          },
          {
            "label": "_royaltySecondSale",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "contract": "RoyaltyFinanceSecondSale",
            "src": "contracts/services/RoyaltyFinanceSecondSale.sol:33"
          },
          {
            "label": "_royaltySecondSaleAdminWithdrawn",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RoyaltyFinanceSecondSale",
            "src": "contracts/services/RoyaltyFinanceSecondSale.sol:36"
          },
          {
            "label": "_royaltySecondSaleWithdrawn",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "contract": "RoyaltyFinanceSecondSale",
            "src": "contracts/services/RoyaltyFinanceSecondSale.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "748606f0cde43409a2278178e8096a7ab50f9570020d42939ee529b9f0bb488c": {
      "address": "0xd9Fc2c7F5FB095c861eFF57e8E06cB825cEDBdeA",
      "txHash": "0xfaf77daeca7657bf16336e262e43bf887217cfb577b4cda0dd6b0ce423a5e199",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)4823_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)2098_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_struct(Checkpoint)2098_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:284"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20VotesCompUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:58"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "GENToken",
            "src": "contracts/erc20/GENToken.sol:19"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "555",
            "type": "t_address",
            "contract": "GENToken",
            "src": "contracts/erc20/GENToken.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2098_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)2098_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4823_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2098_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4823_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ec186f05b80cea512d6c66673279c55b9fac7035f1ea59019187ddebb9239c54": {
      "address": "0xF04dB0D714648Ef3d39a55Dc9b352c4A8354BE30",
      "txHash": "0x142a6fd7fca87cc87a22f1bf03e1ff6985b8dbb1dabeb5c68c659790cff4617a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_bfsAddr",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Artifacts",
            "src": "contracts/nfts/Artifacts.sol:14"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "Artifacts",
            "src": "contracts/nfts/Artifacts.sol:15"
          },
          {
            "label": "_index",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "Artifacts",
            "src": "contracts/nfts/Artifacts.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8196ca7867ec796e8a83ce39efbf242b6f2aaeb2fd0f76c816f739584112d80c": {
      "address": "0xb54d57416600BD40FF4285D17407CC137A1F00de",
      "txHash": "0xbfc062f4fcd8003f09680b2cecbbd1748283da75664eabe754f8612ac6ec4aa6",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)3644_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)2079_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_struct(Checkpoint)2079_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:284"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20VotesCompUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:58"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "GENToken",
            "src": "contracts/erc20/GENToken.sol:19"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "555",
            "type": "t_address",
            "contract": "GENToken",
            "src": "contracts/erc20/GENToken.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2079_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)2079_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3644_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2079_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3644_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f1eef207e940cf42324fc068eeacae6f95ae35bebaca7aa48d8a8980d0717b79": {
      "address": "0x1CdE823fB2f194EdD50D5Bf286Fc95E6351600Fe",
      "txHash": "0x0d7d2bdf1088c1bbdf8dccd5957a076362becc1ab17717bce29cc3c9038c28ec",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e119687e63c16f7675ce3a6417f3730f72087eb086bf892fbbd5f7e1d04e1539": {
      "address": "0xac96f543D9c3a5b664De058E20D9b9e63389DD68",
      "txHash": "0x14e81b4d35bb31c827640f1ad7b3cf93f5244ab71a8acecd55fe849e9918354f",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b1be5d956556bbc6e41aa186b941b21fa96fd805cb2a23201cdc3a5562a6ae59": {
      "address": "0x25c24059F8f89B932Bb0a402E9E119549e93630B",
      "txHash": "0xb2e4f11058c5955b55f9b7e7f6cecd48fa95a683dc5ef25f1f522298ba292e9d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "894f25b780feafa0fce9b8c97ef154301a35456c520c88d0ad5a62989362217d": {
      "address": "0x2Ca5014f9E79a5E5ABFb910FD8ef9Bf15971726D",
      "txHash": "0x20eeb5bede44db9e0f7acfea48898fec0d30f0dde6d7d27ecfe2700d0e172bbc",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:21"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:23"
          },
          {
            "label": "_parameterAddr",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:24"
          },
          {
            "label": "_listingTokens",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:26"
          },
          {
            "label": "_arrayListingId",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:27"
          },
          {
            "label": "_makeOfferTokens",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:29"
          },
          {
            "label": "_arrayMakeOfferId",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:30"
          },
          {
            "label": "_listingTokenDataMapping",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:8"
          },
          {
            "label": "_listingTokenIds",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:10"
          },
          {
            "label": "_makeOfferDataMapping",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:12"
          },
          {
            "label": "_makeOfferTokenIds",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:14"
          },
          {
            "label": "_allowableERC20MakeOffer",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:16"
          },
          {
            "label": "_allowableERC20MakeListToken",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ListingTokenData)4424_storage)dyn_storage": {
            "label": "struct Marketplace.ListingTokenData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MakeOfferData)4439_storage)dyn_storage": {
            "label": "struct Marketplace.MakeOfferData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.ListingTokenData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.MakeOfferData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.ListingTokenData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.MakeOfferData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.ListingTokenData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.MakeOfferData[])",
            "numberOfBytes": "32"
          },
          "t_struct(ListingTokenData)4424_storage": {
            "label": "struct Marketplace.ListingTokenData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_seller",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(MakeOfferData)4439_storage": {
            "label": "struct Marketplace.MakeOfferData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_buyer",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "662045ee1a78bedee5ec3c82550f7967c7dcb585d3fd1b95e5949903a0c62fb0": {
      "address": "0x6096eDD4DE1fFd38f791a1a8DB59AD24341F876E",
      "txHash": "0x1fd25c9bfd457ca6b1b142ff0ede97dcf461d6c7330ada6f79c8e79438645a25",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "decimals",
            "offset": 0,
            "slot": "101",
            "type": "t_uint8",
            "contract": "WTC",
            "src": "contracts/erc20/WTC.sol:7"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "WTC",
            "src": "contracts/erc20/WTC.sol:8"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WTC",
            "src": "contracts/erc20/WTC.sol:15"
          },
          {
            "label": "allowance",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "WTC",
            "src": "contracts/erc20/WTC.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "27578c05e81fb481b903f43ad0c41dc1f1579de6dbfc31c31b940ebc5403ec7f": {
      "address": "0x06d41a136311cC7742BEa1805d6724F4007FdD20",
      "txHash": "0x9af51280d3d8bd40ba5f2be6d72e4d62e0be361db308d7b4b2106e017ea3130a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:21"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:23"
          },
          {
            "label": "_parameterAddr",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:24"
          },
          {
            "label": "_listingTokens",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:26"
          },
          {
            "label": "_arrayListingId",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:27"
          },
          {
            "label": "_makeOfferTokens",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:29"
          },
          {
            "label": "_arrayMakeOfferId",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:30"
          },
          {
            "label": "_listingTokenDataMapping",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:8"
          },
          {
            "label": "_listingTokenIds",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:10"
          },
          {
            "label": "_makeOfferDataMapping",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:12"
          },
          {
            "label": "_makeOfferTokenIds",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:14"
          },
          {
            "label": "_allowableERC20MakeOffer",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:16"
          },
          {
            "label": "_allowableERC20MakeListToken",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ListingTokenData)4424_storage)dyn_storage": {
            "label": "struct Marketplace.ListingTokenData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MakeOfferData)4439_storage)dyn_storage": {
            "label": "struct Marketplace.MakeOfferData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.ListingTokenData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.MakeOfferData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.ListingTokenData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.MakeOfferData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.ListingTokenData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.MakeOfferData[])",
            "numberOfBytes": "32"
          },
          "t_struct(ListingTokenData)4424_storage": {
            "label": "struct Marketplace.ListingTokenData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_seller",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(MakeOfferData)4439_storage": {
            "label": "struct Marketplace.MakeOfferData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_buyer",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e785ed10f34606a57159b81b97bff752fb1aa73aa369b99507f841f784baf78f": {
      "address": "0x185e7Ff1e442DDD273b383f2b2d04c9eBC3cbBC5",
      "txHash": "0xb7aa33f4b73c287c4d1ad73d75d6e010a0f2c423b8a0ac88a98e857473e6bfc4",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:14"
          },
          {
            "label": "_parameterAddr",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:15"
          },
          {
            "label": "_bfsAddr",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:16"
          },
          {
            "label": "_index",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:17"
          },
          {
            "label": "ownedPhotos",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:18"
          },
          {
            "label": "albumPhotos",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage))",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:19"
          },
          {
            "label": "ownedAlbums",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
            "contract": "TrustlessPhotos",
            "src": "contracts/services/TrustlessPhotos.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(address => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(string => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(string => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3519729e4449979f67786284d2992a929f329ceacd593661c19716a2ba87eec0": {
      "address": "0xf0c1f8F0A4277877a672dD626ea1c99a54e42422",
      "txHash": "0xd883c08d2f62cbcc9c71a58c5dcee2ce418052f725723bf0c24e27f93c6d608e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_bfsAddr",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Artifacts",
            "src": "contracts/nfts/Artifacts.sol:14"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "Artifacts",
            "src": "contracts/nfts/Artifacts.sol:15"
          },
          {
            "label": "_index",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "Artifacts",
            "src": "contracts/nfts/Artifacts.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2c7071783f114cae71151dbe211cad179e32b7226404fd063cce41ad1de5755f": {
      "address": "0xcCd18E582c6a4b53A028B5579207cFF9E26cd0F5",
      "txHash": "0x9464db6c543c38b8ba0ea4741325797fe5fb62943f7b57cc0bec51e6079a4f1c",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:21"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:23"
          },
          {
            "label": "_parameterAddr",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:24"
          },
          {
            "label": "_listingTokens",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:26"
          },
          {
            "label": "_arrayListingId",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:27"
          },
          {
            "label": "_makeOfferTokens",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:29"
          },
          {
            "label": "_arrayMakeOfferId",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "SimpleMarketplaceService",
            "src": "contracts/services/SimpleMarketplaceService.sol:30"
          },
          {
            "label": "_listingTokenDataMapping",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:8"
          },
          {
            "label": "_listingTokenIds",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:10"
          },
          {
            "label": "_makeOfferDataMapping",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:12"
          },
          {
            "label": "_makeOfferTokenIds",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:14"
          },
          {
            "label": "_allowableERC20MakeOffer",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:16"
          },
          {
            "label": "_allowableERC20MakeListToken",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AdvanceMarketplaceService",
            "src": "contracts/services/AdvanceMarketplaceService.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ListingTokenData)4424_storage)dyn_storage": {
            "label": "struct Marketplace.ListingTokenData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MakeOfferData)4439_storage)dyn_storage": {
            "label": "struct Marketplace.MakeOfferData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.ListingTokenData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.MakeOfferData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ListingTokenData)4424_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.ListingTokenData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(MakeOfferData)4439_storage)": {
            "label": "mapping(bytes32 => struct Marketplace.MakeOfferData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(ListingTokenData)4424_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.ListingTokenData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(MakeOfferData)4439_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Marketplace.MakeOfferData[])",
            "numberOfBytes": "32"
          },
          "t_struct(ListingTokenData)4424_storage": {
            "label": "struct Marketplace.ListingTokenData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_seller",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(MakeOfferData)4439_storage": {
            "label": "struct Marketplace.MakeOfferData",
            "members": [
              {
                "label": "_collectionContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_buyer",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_closed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_durationTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "42d30321c0abb34c55aa536952117b08dcf5e392ae5dd5c7277c1149a3cf1525": {
      "address": "0xe08d1B78C68BBE32bBA90293A7fAE2372Aac2694",
      "txHash": "0x2c949ac1820efc63510c103f9b1941ff98e707c4897f7cf86af9a4d52859876f",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:30"
          },
          {
            "label": "_brc20Token",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:31"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:32"
          },
          {
            "label": "_reservations",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)7499_storage)",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:35"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)7499_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(OwnerSeed)7499_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dc4a185a6f601f69d97f91559d2b73bf395f1ca15ffc732fc819f9554ca6a2be": {
      "address": "0x62740ABA7183EcFE65d6B3Cdd6eD56d317a6D2A0",
      "txHash": "0x7143e2717e0f94d49646a484956025bf5af76bd6e8906f531cc88900d174a948",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:30"
          },
          {
            "label": "_brc20Token",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:31"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:32"
          },
          {
            "label": "_reservations",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)7499_storage)",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:35"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)7499_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(OwnerSeed)7499_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e7392a2b76452029f8d760388a1d93af7f854cd491af441a7c38d694ff221987": {
      "address": "0x25ccdFf71d234351eDff9a9678B3a23e741C85e9",
      "txHash": "0xcab417c112487c0d97a18a9762b8caf20f869561245a905869a37afebf6cbcd6",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:30"
          },
          {
            "label": "_brc20Token",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:31"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:32"
          },
          {
            "label": "_reservations",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)7499_storage)",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:35"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)7499_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(OwnerSeed)7499_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "054a2c5f5f36a3f2d60a0bea8189ffcbec3d80b5ba9adc05fbcd76698cede5ba": {
      "address": "0xB9b786F7BF01B919C5519906734E779FD13a3A99",
      "txHash": "0x0a8dc8c2a2139a9abe3cc1f9cc122c4b81d85cf4efaae071bc6a3f5f9ed63633",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:30"
          },
          {
            "label": "_brc20Token",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:31"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:32"
          },
          {
            "label": "_reservations",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)7499_storage)",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:35"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "Solaris",
            "src": "contracts/nfts/Solaris.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)7499_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(OwnerSeed)7499_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "636a41dfbe9b27309fae8b18438ecd45b8ec34ecd33cfd79074ad6e780c26d89": {
      "address": "0x3fFe8De74D082Bf66DAc50D7D0ab84869cf0f5C0",
      "txHash": "0x6edd0754dc8e5eac5c2f6c7a290c03d0c1572a4fbcfbc8071a296d60d31b6f75",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:28"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:29"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)7949_storage)",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:31"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:32"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)7949_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(OwnerSeed)7949_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e7674279f7ccb31059d053be4e707af985cf46eb6f1113848942c17c482e9704": {
      "address": "0x9700b515c4642f889E184e832759fB4476d78e2e",
      "txHash": "0xb4f7956fee99e04dc38c5285f351c70f15389d80b5db15c9a5eb035d93b6746a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "SOULGMDAOTreasury",
            "src": "contracts/governance/SOULGMDAOTreasury.sol:16"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "SOULGMDAOTreasury",
            "src": "contracts/governance/SOULGMDAOTreasury.sol:17"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "SOULGMDAOTreasury",
            "src": "contracts/governance/SOULGMDAOTreasury.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b1e0f19e2994e5db31d0f2827eeb1bc75bf7abfb9f440901a3cafc58d2ad1a99": {
      "address": "0x185524f78b323757E69DB970bc6CEc6F5b122a04",
      "txHash": "0x1b881268bd7d93e6ce983aad0d0e063e4da2d94699cc8c5dc287b17d18a8b642",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d41e2e5cdcc75ecb4da2117a6d389a80d703ddbd7f4dfe40fefa73a1eda95dec": {
      "address": "0x9D12beF46dE1428eA0CBf5802DE3b90463909070",
      "txHash": "0xdda7c9363e3b71040079b6f49f5dab6bf6ff0a04606bfe459cddb27aca897bdb",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)16674_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)16666_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)16666_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:56"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)16666_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)16666_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)16674_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)16666_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)16674_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d9def6bac25db6971afaf9fb26a3cefa0fda9374f6089dc9746e308ff1f92474": {
      "address": "0x0FFB1C3d7569b71E8d6954dD66BeAa3ddf46234D",
      "txHash": "0x8fb07efc85a6feea6b587ae7a8b02260122e78202f6774003fd8353521d7f2c6",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)20466_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)20458_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)20458_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:56"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)20458_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)20458_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)20466_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)20458_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)20466_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "56adf66574365cdae958dbdfb513acc54d816d634aa42542c166d8de13ebf451": {
      "address": "0x4ea3e418DADc4c2d1CD9f0c1a3c8682308736034",
      "txHash": "0x8d7df68a2189268d10eef2a90f8848fbbeac7c58c6d25f8858644a2b7690803e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:28"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:30"
          },
          {
            "label": "_projectDataContextAddr",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:32"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:35"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(Project)6032_storage)",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)6032_storage)": {
            "label": "mapping(uint256 => struct NFTProject.Project)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Project)6032_storage": {
            "label": "struct NFTProject.Project",
            "members": [
              {
                "label": "_maxSupply",
                "type": "t_uint24",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_limit",
                "type": "t_uint24",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "_mintPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintPriceAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_creatorAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_license",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_social",
                "type": "t_struct(ProjectSocial)6043_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_scriptType",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "_scripts",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "_styles",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "_completeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "_genNFTAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "18"
              },
              {
                "label": "_itemDesc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "19"
              },
              {
                "label": "_reserves",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "20"
              },
              {
                "label": "_royalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "21"
              }
            ],
            "numberOfBytes": "704"
          },
          "t_struct(ProjectSocial)6043_storage": {
            "label": "struct NFTProject.ProjectSocial",
            "members": [
              {
                "label": "_web",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_twitter",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_discord",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_medium",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_instagram",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4d6845bc7af6035e87d4cc504d6ff6ac96ef929c12d9c4c5f7c336f7dd31dd65": {
      "address": "0x787aEFBC34d1D0eb63ad8b3097BeE00aF23Ee691",
      "txHash": "0xb807b0d1ed2f2f29e2d8b3723459ca5034835a1e67eaf724310cde8c474c3e38",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "372",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:60"
          },
          {
            "label": "_daoBlockReserve",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:61"
          },
          {
            "label": "_daoGMThreshold",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "698475e5c66f6c90cec0d412151a07c5cca409026059cbb8da2ba14c43538d8f": {
      "address": "0x024C7A841105585eA6F1CBA74f5Ce7A495d92F25",
      "txHash": "0x46486dc72165d10e719688a5a4219e964e94a6e60ea35aa31ad99c4469d89fa0",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "372",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:60"
          },
          {
            "label": "_daoBlockReserve",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:61"
          },
          {
            "label": "_daoGMThreshold",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:62"
          },
          {
            "label": "_lastSettle",
            "offset": 0,
            "slot": "375",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9def185b3f5d4e363aebaa37ddf6ccc73b32ba63f275fe6cd29418c2781e3339": {
      "address": "0x0B4f47B5d9b9338fC91a50B12c9DFDDcd8f2b0d1",
      "txHash": "0x003d0f636090c1b3308a7dc8922f7ffdf026a91e09147d2c1d65e5b9eb03e84d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:28"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:32"
          },
          {
            "label": "_projectDataContextAddr",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:34"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:37"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(Project)6152_storage)",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:39"
          },
          {
            "label": "_projectImplementation",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)6152_storage)": {
            "label": "mapping(uint256 => struct NFTProject.Project)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Project)6152_storage": {
            "label": "struct NFTProject.Project",
            "members": [
              {
                "label": "_maxSupply",
                "type": "t_uint24",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_limit",
                "type": "t_uint24",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "_mintPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintPriceAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_creatorAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_license",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_social",
                "type": "t_struct(ProjectSocial)6163_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_scriptType",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "_scripts",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "_styles",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "_completeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "_genNFTAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "18"
              },
              {
                "label": "_itemDesc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "19"
              },
              {
                "label": "_reserves",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "20"
              },
              {
                "label": "_royalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "21"
              }
            ],
            "numberOfBytes": "704"
          },
          "t_struct(ProjectSocial)6163_storage": {
            "label": "struct NFTProject.ProjectSocial",
            "members": [
              {
                "label": "_web",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_twitter",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_discord",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_medium",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_instagram",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "21396de0b2c052199c5956d0d258b564ab2b8b2587524b0fe7e15353c0bdc72d": {
      "address": "0xd5b2c5D435c1E29832Daa341B895565fB1587f4d",
      "txHash": "0x3f9552d236dde39e67985b1b406b128d750015914ace851ec4dc0806ae14f0b8",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
