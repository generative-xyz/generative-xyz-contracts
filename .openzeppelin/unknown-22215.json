{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xA03e00359677Df7f03d94DA2902dc4bCF360fB84",
    "txHash": "0x1d6e6481936f2246256cfda8bbdd74e19e125300af342dc5eaef2071eca4e5ef"
  },
  "proxies": [
    {
      "address": "0x039489F7465DdCfd54bE18907790873269Dc7c55",
      "txHash": "0x0c6cdde8179a4b36191a903d4f86dca6e0e23b169727274c4799dc9c22cc8942",
      "kind": "transparent"
    },
    {
      "address": "0xb0E2efCc77eff1C05cFaCc2f55FC56A6ECB9498c",
      "txHash": "0x5d0affffb46e53abffdb5ce91cf932fb9f2b12c5ab550a329d35d2ea6248ab16",
      "kind": "transparent"
    },
    {
      "address": "0x54C746662C77340717Fe487Bcd5732a9Bd8bF8Ee",
      "txHash": "0xef281bdd9ed4048e94d77422200b71c47a66d0310793fa518fb80fb573915cfa",
      "kind": "transparent"
    },
    {
      "address": "0x39613Fa9510c1E53CA42Cbbf57F0c9119b39Bdbe",
      "txHash": "0x84155fcf3e4a71db6b847236731e87d1ee6d49032a8dd22082184fbd6ba29bed",
      "kind": "transparent"
    },
    {
      "address": "0xcd301589DBe91F183aDDF8fEbFd043982Fb451A1",
      "txHash": "0x799e2c160608f7fc54856a592a9f4db34bc0fea28871a7337eb8024fa4a5fe1c",
      "kind": "transparent"
    },
    {
      "address": "0xE6E31de19F9fE0952B043752B32deC47767a1fdA",
      "txHash": "0x0b507a39ce9a15e4af5a654b081823dc2adee1b7282cb7cf2e4bb0444d0123bf",
      "kind": "transparent"
    },
    {
      "address": "0x85802F1f36F549334EeeEf6715Ed16555ed7178b",
      "txHash": "0x4e0ff7b44a61875a217226d294d8ecb2284b3d0ebae041ce2bf60676bf4f4e5f",
      "kind": "transparent"
    },
    {
      "address": "0xF8eCc7fACbA5dBa2E2dDAAc8F59B611B4D4B0955",
      "txHash": "0xccfe6ed36b6e0ebab92176973a2f20118286c675725fe030f86b9963d2427621",
      "kind": "transparent"
    },
    {
      "address": "0xabcc390352873B56f5342B0198ef27317D7a5721",
      "txHash": "0x23a9038c855c9fbfed329fe3dffec2e318fd3a9520977f677531afb7addddb9e",
      "kind": "transparent"
    },
    {
      "address": "0x1996D668c12d355612A8E2Ea4c6D9088afB37C4B",
      "txHash": "0x6875bc47c059aab73be764e7f412bd42400393b4d03da386e48224c888cb1ae6",
      "kind": "transparent"
    },
    {
      "address": "0x5E7aDaFFd0a79EBdC2A01D4D5A08695Fde667fC0",
      "txHash": "0x3702af0dbb16a5144cfbd8d770fe9a7688c1061603770471375dc6f74e6f167f",
      "kind": "transparent"
    },
    {
      "address": "0x4146075D3637d8C6f3E61425d9ccf782544FE49B",
      "txHash": "0x9ce477890f2ed763b90371d154797578cc8614f2c30be3fdd5403d63272abfd8",
      "kind": "transparent"
    },
    {
      "address": "0x10000Fa3d2af6706B1268a4B6BE7940C1f51e625",
      "txHash": "0x44add732ceb2bf386c2366021fd94a489aa2e1a217ac8bd9aacc2ef4cf2d9c97",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6ef0c4a1003f50c5c1bcb19010cad7ae6d08a935f53a2bc3d463f0899b19c059": {
      "address": "0x979aC806367604e13A921c72b95023dA1889a6Fd",
      "txHash": "0x971b63c006bed2c3637f39c21dc5d55ad009a06ab9d9f31d07f460236772a567",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "64cb1416360778e64ec2f66f5ccd5199f34a7a2d04be62759a15647c2480059e": {
      "address": "0xb537f09Ae5bF453fc881b25BCC8687f54ee70DB6",
      "txHash": "0x58c9cc67a34ee94af8ba94dc353411f1b9ac38335eac58df47883ad87f0655cd",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e0cc4a28d9f61c5ca6cd999ab54fc2f052e6d8cde65b22646e1d8f6a09d1e2f0": {
      "address": "0x761E2664A96a1981549D6E67803d548BaE734F8b",
      "txHash": "0x18f094237fab30dd994e54c6ae25cb4400d24cca122b15f579999343412000a9",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:28"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:29"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)7949_storage)",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:31"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:32"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)7949_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(OwnerSeed)7949_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "726c8bada0f372951c5dc4610217c802f0e643e7013996670ebfffa614ac127a": {
      "address": "0x12A7AB582EB5b7682a19D41dB86695e13eDFb87c",
      "txHash": "0x83fb745d47190861a49065c7e0041baef2d5893391d5d31192f26d9032355c15",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:28"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:29"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)7949_storage)",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:31"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:32"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)7949_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(OwnerSeed)7949_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d724041f2ecaca252ab4deb1605ec8edee3b4712fef2e814fbe874061460565": {
      "address": "0xcf76330eB24087041B480807a7ba78E2A1Ef385B",
      "txHash": "0x41e70f0b4e76463549ae20928572bf899fe26144750b65ce94288e98b863962a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:28"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:29"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)7949_storage)",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:31"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:32"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "Mempool",
            "src": "contracts/nfts/Mempool.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)7949_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(OwnerSeed)7949_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0ca1ebecba1f8d38a1acee60d392a072f2b65bb9e6ce906a77ff349d333ccdff": {
      "address": "0xa28a1C53eF5f36b4DCe5a2031B349487d9cF4328",
      "txHash": "0xa8ac2d0be1a15ee05982aa4f5fa7bd970af2ce2445c061d3794e8b70267f551e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b5f28791785617126431fc5dba17d336b5f051ac92622ff7c0d29e91cd67882f": {
      "address": "0x0E5C8418Ee91E5d03593E1DF481aBed9DD54e788",
      "txHash": "0x32ba62155969a1442afbc9262c047f40d9c76d6a8d6ca3fa1edbd72f711e93bb",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10b0a782b421ba4eb2ee75b49a918c5078aaf01838debbf0c8aee92075622635": {
      "address": "0x12A4465eA6009554300C798cEac77a7c6AcB4118",
      "txHash": "0x421de31b3ceb0a6bd90b814fa26cfd99be55cfa2f6ea9476933811fca91d0061",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "092a7bfcc92db235df15b5d295a65e6528308c6f2b13a14c3d5e64b9c2bfd946": {
      "address": "0x9f1cCf44dF0e2532a1336d6682C4E9f22e976AB9",
      "txHash": "0x32775bab78a73eea71b829ab253fbf0ef65170bf183679f1171de803df91658b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9eb579ea87fcf9a79f2817c36a64f0854f536392f434fbb32714c9e901ff2b9e": {
      "address": "0x6a1017A8Bcf1416Cb4b91b9AaCf7CBD77D40b008",
      "txHash": "0x61737d3357d9a6d8f82f3db6c1ecb9a75caa4a2034749b592d00e1c0e5427b56",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9103e620d76cfd49aecdd77e38a2474a60572d4d2bee4a09935aec4e1d8a6627": {
      "address": "0xEC9Fb83F75C46881B50105FfbD370C88251Cc3F7",
      "txHash": "0x8fdaf398b9a9a51f008c5946ab1d96eff1a091dbe37f3e9daa5705092e071053",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "234d2ab78dd2ff804fe7dc0638c6e5717af760045f8e0320d6f1121c2b0143ea": {
      "address": "0x1a97249412e939B59f81cEc116EC4F154Eb3D69D",
      "txHash": "0x43a947cb997269ca8f06c5615f3a67e417351227e79e5d58831cedf927f2e9d4",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fcc6d349af408936fada038f1dde036970f6e22f673a180adf9f8343bb2031f2": {
      "address": "0x55E0125FAB31a0629FfD1B1f1F68dB43E41aeC6f",
      "txHash": "0xc3a3b19130e1be22e7432d45ff2873ae07377ff7e1bd1cdaaf6509bb608db13d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0817a2f68307aa5dd11ab543f77545b301c3b37924c6f4ecf9bfc66e178eb037": {
      "address": "0x3162D74E624207A71CB9fb4A364FE4a6A2DB7b35",
      "txHash": "0xc13acfc027afecaebab59138518be8c4b7e5de581d59862e98c6091d259121bc",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8dc1f0e6ef703794c9a8026f057dcfcd62e22e6cafded1dd4fa410a32176d54e": {
      "address": "0x5DC8481DC34E145520C76ee20F5a36a1e8c7D6a3",
      "txHash": "0x7661a454087ae092d975c1e2aa87453f6208f0a4bff8189fd0e0d2e73370b553",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a1f29fb6cebc3b0c4d72c835f6947abe61214660dd04c7bed4ab69b82ad39e66": {
      "address": "0xFa2590Df1d3Ef298fc7626Fb6962F2AEA8ccb7B2",
      "txHash": "0xe4aa03f047427e62889283b91ebb101ed3b52aaa63d1fda4b12ae2c19798a6fb",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1533df8e919d9b40479a8a8a1c1f4a3519385b6412633d7424c6f15fb52352d0": {
      "address": "0x607432ce021ef95e19Da0f0347Ac9f916B6621c5",
      "txHash": "0x5ac491dae79ee53a07bd5cee88a76139ce028e074228f6282e8c5627ae9b8a76",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "88df751cf4948203a8ddce442f73dbd81c0ac6ffbc242f5db1727475a720307d": {
      "address": "0xf1319c98f9b0dfC5deADeD1f4F3d368762e97D40",
      "txHash": "0x924dad058e3c957dfce827cb6b7035e2efef5b01e27f01adc80c67a292384dc4",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "feac74451da7ddbe6adddea71897dcdc7ab8c187ca8e9a7bcdad0c69d842ba1c": {
      "address": "0xd34Fd21D97495a0cb2b8656487585e2Ca7bbc35F",
      "txHash": "0x079a16395df13ef8d768629795ac9c98d5147fe84e853c99c68bc6a359efa747",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f2c00e4cd32a7dcd316879d7f8f442c929f21a12d5a89fab1615d38230539fa9": {
      "address": "0x250647B418d281Ed6FEe35346E12747fb666228d",
      "txHash": "0x6b25a16b9cddfdfb170340a3c49d9b72603e67f167ac98cba5ecd832efb0c30a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0ba82f066fa8bb4d616ac432a3f9ebc758db39fa0eec84a0481d5cc7b9395c4a": {
      "address": "0x17029C39bD20eb345C760d3D939BeB8c0e657948",
      "txHash": "0xd139e147747cc145c8106d1b80df2b97d12efa9939d280e4ecb7e3fb5baff94b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "be4e0c1182efb89b4a86e7a9afb5aae0195d7bedb1f4036146a26c7e54ad9e48": {
      "address": "0x9B2096DdECA6a64C40b312681A1042546BF85a06",
      "txHash": "0x21e52ccef0d60f479825351fc58732c950c209f9b935342a03a0d0148912a187",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "SOULGMDAOTreasury",
            "src": "contracts/governance/SOULGMDAOTreasury.sol:16"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "SOULGMDAOTreasury",
            "src": "contracts/governance/SOULGMDAOTreasury.sol:17"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "SOULGMDAOTreasury",
            "src": "contracts/governance/SOULGMDAOTreasury.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aa3afa9894f70f9ddffe9270c219b8c3069eaad01b2124a4422c53c101fa8319": {
      "address": "0xaA00b93080147eF666927113Df7ee99267e1ECDa",
      "txHash": "0xac7111fb455b4e12262cfe542b632ce4360e244fa7780bcc68e29317914c7bb4",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8041_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8041_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8049_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8041_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(OwnerSeed)8049_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a51c12fc859acacc9549006aaa2d04f78cd77e7423fef6fe9f09388e21b7679d": {
      "address": "0x339e6B328C699947CD41f97d7e00f76686593DE6",
      "txHash": "0xc61e03ce170bb5651da2fb0b3582ea3a60e12c58c25ecb26d5b65c4b5526d060",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_bidders",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "886e57bee967152e951b3f3c2f6dd619a3e0e8d098c77c2042163ced000a2cb1": {
      "address": "0x5cD90eAdB69b66C2564f0e7D471CF05297401767",
      "txHash": "0xe26457bfedf5d45cd8f997a767b74dd2c5346d7f6448b80e2ecd26865e0028ce",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f5f6ca42703a0c7728c720b9924d7d2c5ed00497f4ef957b6476eaba9172f353": {
      "address": "0x419343B9F758Ff58e1E01cAfB6Ea2428dE071EA0",
      "txHash": "0x1857257c5ce8c2001e2889a7084721d5e98d1d51812f6088234bc40e98fe429d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c072eb59aaf2fc29c8b387b036223c465433d6e820a15b8af6f390cc68d92d71": {
      "address": "0x5839354B9207e96d92dACCEa298014028E55e69b",
      "txHash": "0x6c1de84744a4e27471eb5ab12d59d4b204a180212ffce81ab7d5a9e0f4d6d48c",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "484e8fb08b5e93c982982d6bbea8503f980df8fc289d5d27b49a09cb4a4ddb78": {
      "address": "0xc893F1a592D48556bcE0019Baf00989c741Eb0F0",
      "txHash": "0x5d343144a376081a928f32e8d615105d076d3442f7b87830c6d77dc1379c37f1",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "afc535689419b414c22bdbbbb9968bcaee85396b177fde3c2386eca74d9c7121": {
      "address": "0x7140C7047564d91FC3322158b8674f820AF34e7C",
      "txHash": "0x300fde029d44233228e95862ad3124bd5372a5fe9f74f7e036ad9dbf4a5fb1d2",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "63051cc51acbb1909c2c38334a6dd30e168fba58b0a06253c238ea14a4edc0c4": {
      "address": "0xCD6c481c9b968c826be6136e6D101D5D6f19e9c4",
      "txHash": "0x068f4ca206fb29dabd5c81515984031ad87b72682e79b581f069a2e0efa11b71",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "858c7192151f42890dc85957f5a829ed0b4b496286063fb3c6a51dbafd2ea57a": {
      "address": "0x5e06d3A9e84E8A5b21E930b116ccB39DEe0BE069",
      "txHash": "0x3fd258b07d7ed796f30bfb90851911d531f1557192706f1160a1c446793806a1",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e200e83d63030850e9d95cd195457f7659c750174977f48845169a5044d4f433": {
      "address": "0x54532D116f126690913da39dEa2DFD608a6f2D92",
      "txHash": "0x9d666061377486b5192ab733d77689f348d383d8ccdb4819ffa8efe0d1ba03da",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "390c7f98c3f6f6f6a0dbd284410678d5c315b9a289cb9b13584a7ea3955c4a7e": {
      "address": "0x948113c1ac7be00B520d9213f87Cb7dC14fe3Ae6",
      "txHash": "0x2cdc17a1cd0f566b0533b59c5f1d9f2ed928b10e38e21402465625391cbbeee1",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "78ad529b4b1173ea1f85757c963cf474fafd3c0de6fb012dc09741f518741284": {
      "address": "0xe7D77b65e4E120368f19A46b4cc69e209fCac777",
      "txHash": "0x6e37427d9ca4b2163abacdce1adef8ba2164511bd01751cf5fca8b5c9038660b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4e9142f8d2c82771b56d11bea5fba7545cad0a7bf750d5d36505808790d4b482": {
      "address": "0x295E6DcBcE443283decEAe7A1722B1e13D9d3657",
      "txHash": "0xa8a16728e16d683bcd8e995e4ddc565f2589b40892145cf4c6fc55c1e1067d62",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "42d0e1646d10b9ec69455a7b1b2f4466415a9adabc7353e8d5e8175b7b9d1e26": {
      "address": "0x4f97ff2CD1865ce65E79Dd8D0B48aB92d7241BCa",
      "txHash": "0x125457d60e35fd5271584481f3c7e7cff9cce29631ea9785e856abd186e2aca6",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "be3985354c6789ea27a146e60630a1e954886bc5dae2b563643601e92cfe5fd4": {
      "address": "0xcDE5054ef3ffb101F512F9D6f3A19DEB38263970",
      "txHash": "0x69fb72f801bb462c7e4ec80cd6255c3254f7db6b8a8b925ccad53f6c0e89777b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "13be570e67a9859ad6a8861e78b95ee459a37a7226d018a2d65bb589af2df8a4": {
      "address": "0x57D6Af38EfFEa4898afEa47A2A16F38eEeAdDfA9",
      "txHash": "0x1970532efa563940a1364d12e58f440327a481d96baaa5e4b7c61ded29139f1b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "521870b4bda8f46a865bc0bdeb990931d829d69e25d0f7d6a6e13b7168967a93": {
      "address": "0x811dBd2756b2de0cEeA83FC951f524B9A3Ac86B2",
      "txHash": "0xd8ef0b15781e16299fa875ae85c9f2f47761f8c4ec9a5196eb23b616d7adc13b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "99a3d35f260a588245253c6d7ea947339c353f5c3b400b0eb0630870f8e4deb4": {
      "address": "0xF1E91E8BC8cc70ebCeE31D6c6D7e42F3CD1B4992",
      "txHash": "0x0a04d908597902e90130f50ccc7c850f00e79562aa55738f40ef6c80873a6a6c",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8064_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8064_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8064_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8072_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8064_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8072_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "63267282a8b0bfaecd7d2f42923e2325c7d5b29a7ef874a7d9ad828ceffe5026": {
      "address": "0x3be3366c351Ffa04Ca89745A1f76025C214c885E",
      "txHash": "0xbc13c6c2a9d3baf1e44bfbc723bb5f2554fff0858dba49cacf3eb05e541aaab7",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "85de2e758e7f1b5f52fe9875c7f67e9c8b21d7106f2accf3c5657a3670a2d63c": {
      "address": "0x5BA89993ce68370578518eFBDcA9412eEc86CEb2",
      "txHash": "0x3e9aa1a4ab6855834a5bfa8c7ae3da5d4d8335bcd8610aa9039229ef7a3e28b7",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "855ba9841c650f2b2f0801d54b0ff65a59481b62e3d77395547c225859619781": {
      "address": "0xfB8e7da774F92dD562642B1a78E554c99AdBECC2",
      "txHash": "0x60b6d50bda46037815cc0fc31d78dea6bd6a2615b95605975983beaca5ffce00",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "67170c3255787033a92e851540ff613d2da41d970af96278a330c972397ec8b1": {
      "address": "0x2618E622A5D66FD8C03A42006e822836A062228b",
      "txHash": "0x9a11e03c0c51401e954d2a7c8ae9e98c1755e0b4304983254a996f1dd23cbf57",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "030a6ef9f8fe21125c322ef23b2f90739f0e456373ea1c0cc9347d543a03b1ad": {
      "address": "0x741BcE6205Ad58F35f4005D3C922A3D047c71Db6",
      "txHash": "0xa193bc92c2cc22b3c659d44f48e31431a11a78ec9ee544e219e79922336077a9",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f21f2cca2befc15e7fd60cdd0175548df2c81e275098945e8c1ef660a19e3109": {
      "address": "0x0383879002031A62F0c0Ea6CcAAa4a1d68F35f62",
      "txHash": "0xf2a33f30694c89290d8e3dd05616bc0437ae8f4fc53e39240304f02f591e6f33",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b1e0f19e2994e5db31d0f2827eeb1bc75bf7abfb9f440901a3cafc58d2ad1a99": {
      "address": "0xa434b6a535e4cf9E4F6C77dF4eec06ED666ab8F9",
      "txHash": "0x0a722c8de5ec262f033d1d7fbc904053cb7ecbf958497d5f42feb0d41cd268ea",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4aa1fe5b0c1c5c41fccf199ad44214b4d8cf022c06ee54b5648e6c5715253672": {
      "address": "0x823DE39558ae7563277ED0f698A85CC41C3BEc79",
      "txHash": "0xfc542ba5878752c4eb43b6aa73011cba33fc134e54f5c2e6086a16a5c496f37a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:43"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:45"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:47"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:49"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:51"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:53"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "14c49140415a03a8bbcf1f261079e996e8826347e1854ff56803c0789d36e081": {
      "address": "0x2C06a71D1289610801f46368c4F8134F23Db01AF",
      "txHash": "0x823a782725edb352196931e82bf66c6004f7736a0ccf490400e0e5bf2b6b674e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8057_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:56"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8057_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8057_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8065_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8057_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8065_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d41e2e5cdcc75ecb4da2117a6d389a80d703ddbd7f4dfe40fefa73a1eda95dec": {
      "address": "0x12960Afee3F653587B7360379ba17b02E9DEa88F",
      "txHash": "0xe173897ce464f7c02bdb49f3fbc30d3e4e420f26b0ec6305cb16703c5f993a66",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)16674_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)16666_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)16666_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:56"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)16666_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)16666_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)16674_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)16666_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)16674_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d9def6bac25db6971afaf9fb26a3cefa0fda9374f6089dc9746e308ff1f92474": {
      "address": "0xBfF2D136604fB30d8ed26711122f135af501fd75",
      "txHash": "0xf289e0221f21a47cf9d746b23e11a2e04b6f1418bb31f1674b2ddba6307dd367",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:39"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)20466_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:41"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)20458_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)20458_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:56"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)20458_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)20458_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)20466_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)20458_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)20466_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f22ec694cb66b9baa11a5795d5845254f2fc4ec0a443659aa07e9221ad7b979": {
      "address": "0xb162C9267a23f612A25999c4590cF514AeFFc9AC",
      "txHash": "0x8ab1964c5b331beab4c2c9964f8ec406781d933efa5ab6a172c625a90d17870e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)3528_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)2079_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_struct(Checkpoint)2079_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:284"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20VotesCompUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:58"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "SOULGMVotesCompToken",
            "src": "contracts/erc20/SOULGMVotesCompToken.sol:13"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "555",
            "type": "t_address",
            "contract": "SOULGMVotesCompToken",
            "src": "contracts/erc20/SOULGMVotesCompToken.sol:14"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "556",
            "type": "t_address",
            "contract": "SOULGMVotesCompToken",
            "src": "contracts/erc20/SOULGMVotesCompToken.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2079_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)2079_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3528_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2079_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3528_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6d4f9107f34e62d09d1a298800f4183b4889c4313931f9a93a406572cf8019ff": {
      "address": "0xA48d0dFb2ca6f5c670d845C6A116D417C27acE1F",
      "txHash": "0x9112fd0b5544cc0c25c261957c7fccf4c0df763ff09db8cd7b3bbb34fbdf457d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)11680_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)6530_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_struct(Checkpoint)6530_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:284"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20VotesCompUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:58"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "underlying",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(IERC20Upgradeable)6298",
            "contract": "ERC20WrapperUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20WrapperUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "555",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20WrapperUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20WrapperUpgradeable.sol:76"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "605",
            "type": "t_address",
            "contract": "SOULGMVotesCompToken",
            "src": "contracts/erc20/SOULGMVotesCompToken.sol:15"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "606",
            "type": "t_address",
            "contract": "SOULGMVotesCompToken",
            "src": "contracts/erc20/SOULGMVotesCompToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)6530_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)6298": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)6530_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)11680_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)6530_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)11680_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3047640eb368d0377c3956fc501f112772db8b32d6813ef313169bda00e42d6a": {
      "address": "0xf0C1A6150E17ed2c2DCc683f09921e0bBEF6A70e",
      "txHash": "0x612b610d9c47c1b67e8018052690667f7c6935209f39360dfd14357147be6a4a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorTimelockUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol:126"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "label": "_proposals",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)771_storage)",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "label": "_governanceCall",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Bytes32Deque)15129_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)46_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:609"
          },
          {
            "label": "_proposalDetails",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)3365_storage)",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:297"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "403",
            "type": "t_contract(IVotesUpgradeable)5099",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "label": "_quorumNumerator",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "label": "_quorumNumeratorHistory",
            "offset": 0,
            "slot": "455",
            "type": "t_struct(History)10274_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "504",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:15"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "505",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:16"
          },
          {
            "label": "_votingToken",
            "offset": 0,
            "slot": "506",
            "type": "t_contract(SOULGMVotesCompToken)18972",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:17"
          },
          {
            "label": "_soul",
            "offset": 0,
            "slot": "507",
            "type": "t_contract(SOUL)23156",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:18"
          },
          {
            "label": "_proposalThresholdPercent",
            "offset": 0,
            "slot": "508",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:20"
          },
          {
            "label": "_quorumVotePercent",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:21"
          },
          {
            "label": "_votingPeriods",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:23"
          },
          {
            "label": "_votingDelays",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)10279_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IVotesUpgradeable)5099": {
            "label": "contract IVotesUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(SOUL)23156": {
            "label": "contract SOUL",
            "numberOfBytes": "20"
          },
          "t_contract(SOULGMVotesCompToken)18972": {
            "label": "contract SOULGMVotesCompToken",
            "numberOfBytes": "20"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_struct(Receipt)4165_storage)": {
            "label": "mapping(address => struct IGovernorCompatibilityBravoUpgradeable.Receipt)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)771_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)3365_storage)": {
            "label": "mapping(uint256 => struct GovernorCompatibilityBravoUpgradeable.ProposalDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BlockNumber)12034_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)15129_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)10279_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)10274_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)10279_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)771_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)12034_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)12034_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalDetails)3365_storage": {
            "label": "struct GovernorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)4165_storage)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Receipt)4165_storage": {
            "label": "struct IGovernorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "support",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint96",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "f8110d92ccfa540b91d351706fee681528a4521e9d5aed32cc534b506bbe277b": {
      "address": "0xbC5D02d202124EaaD3da342A977F44f93155c1b4",
      "txHash": "0xbfe605b8e13fa8ba5d032c90431a2ebd16229f56e8b720140418c0e58eac4452",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorTimelockUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol:126"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "label": "_proposals",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)771_storage)",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "label": "_governanceCall",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Bytes32Deque)15129_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)46_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:609"
          },
          {
            "label": "_proposalDetails",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)3365_storage)",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:297"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "403",
            "type": "t_contract(IVotesUpgradeable)5099",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "label": "_quorumNumerator",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "label": "_quorumNumeratorHistory",
            "offset": 0,
            "slot": "455",
            "type": "t_struct(History)10274_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "504",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:15"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "505",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:16"
          },
          {
            "label": "_votingToken",
            "offset": 0,
            "slot": "506",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:17"
          },
          {
            "label": "_soul",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:18"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:19"
          },
          {
            "label": "_votingPeriods",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:21"
          },
          {
            "label": "_votingDelays",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:22"
          },
          {
            "label": "_proposalThresholdSoul",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:23"
          },
          {
            "label": "_proposalThresholdGM",
            "offset": 0,
            "slot": "512",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:24"
          },
          {
            "label": "_voteThresholdSoul",
            "offset": 0,
            "slot": "513",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:25"
          },
          {
            "label": "_voteThresholdGM",
            "offset": 0,
            "slot": "514",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)10279_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IVotesUpgradeable)5099": {
            "label": "contract IVotesUpgradeable",
            "numberOfBytes": "20"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_struct(Receipt)4165_storage)": {
            "label": "mapping(address => struct IGovernorCompatibilityBravoUpgradeable.Receipt)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)771_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)3365_storage)": {
            "label": "mapping(uint256 => struct GovernorCompatibilityBravoUpgradeable.ProposalDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BlockNumber)12034_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)15129_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)10279_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)10274_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)10279_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)771_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)12034_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)12034_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalDetails)3365_storage": {
            "label": "struct GovernorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)4165_storage)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Receipt)4165_storage": {
            "label": "struct IGovernorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "support",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint96",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "f985ce8e2e63c047e538900e0d92f3b5a263c1c200bcf66d9fed8d5c5acfd677": {
      "address": "0x12715ec144754DdB9E33dcFB417b03588e08b22B",
      "txHash": "0x93cf1f01bca82ba7b3464b0278bf5bf41c33d8dcab864dfcb32c14741f7f747d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorTimelockUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol:126"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "label": "_proposals",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)771_storage)",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "label": "_governanceCall",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Bytes32Deque)15129_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)46_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:609"
          },
          {
            "label": "_proposalDetails",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)3365_storage)",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:297"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "403",
            "type": "t_contract(IVotesUpgradeable)5099",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "label": "_quorumNumerator",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "label": "_quorumNumeratorHistory",
            "offset": 0,
            "slot": "455",
            "type": "t_struct(History)10274_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "504",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:15"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "505",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:16"
          },
          {
            "label": "_votingToken",
            "offset": 0,
            "slot": "506",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:17"
          },
          {
            "label": "_soul",
            "offset": 0,
            "slot": "507",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:18"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:19"
          },
          {
            "label": "_votingPeriods",
            "offset": 0,
            "slot": "509",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:21"
          },
          {
            "label": "_votingDelays",
            "offset": 0,
            "slot": "510",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:22"
          },
          {
            "label": "_proposalThresholdSoul",
            "offset": 0,
            "slot": "511",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:23"
          },
          {
            "label": "_proposalThresholdGM",
            "offset": 0,
            "slot": "512",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:24"
          },
          {
            "label": "_voteThresholdSoul",
            "offset": 0,
            "slot": "513",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:25"
          },
          {
            "label": "_voteThresholdGM",
            "offset": 0,
            "slot": "514",
            "type": "t_uint256",
            "contract": "SOULGMDAO",
            "src": "contracts/governance/SOULGMDAO.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)10279_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IVotesUpgradeable)5099": {
            "label": "contract IVotesUpgradeable",
            "numberOfBytes": "20"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_struct(Receipt)4165_storage)": {
            "label": "mapping(address => struct IGovernorCompatibilityBravoUpgradeable.Receipt)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)771_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)3365_storage)": {
            "label": "mapping(uint256 => struct GovernorCompatibilityBravoUpgradeable.ProposalDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BlockNumber)12034_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)15129_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)10279_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)10274_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)10279_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)771_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)12034_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)12034_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalDetails)3365_storage": {
            "label": "struct GovernorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)4165_storage)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Receipt)4165_storage": {
            "label": "struct IGovernorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "support",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint96",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "e7674279f7ccb31059d053be4e707af985cf46eb6f1113848942c17c482e9704": {
      "address": "0xeDd45C6E552b18c3888f3f888A16b0aA05c75255",
      "txHash": "0x759b568cbeb9fe1c1f97e391d2f2d46c665c593698d34ed3a9b189e4d9abe913",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "SOULGMDAOTreasury",
            "src": "contracts/governance/SOULGMDAOTreasury.sol:16"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "SOULGMDAOTreasury",
            "src": "contracts/governance/SOULGMDAOTreasury.sol:17"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "SOULGMDAOTreasury",
            "src": "contracts/governance/SOULGMDAOTreasury.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1cff90c74088153a285971e8fc84f72037ace8b34e0ed802cb00348f5551f437": {
      "address": "0xE0d7B4F01F80970D2167D7a5ee6d34988b7196E4",
      "txHash": "0x4a61c200ef6507f7a9e95931c5714a335526d6268817f95097bef707afa3b6b5",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)20454_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)20446_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)20446_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)20446_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)20446_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)20454_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)20446_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)20454_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b5060433029f7f1d490744a5055343f76e33fad4b977918dc9f00d7403971abf": {
      "address": "0x4E8bfBc68Ab9602A30f86Ba518dAbfEFE46022AE",
      "txHash": "0x75058b05e097d5f7995f3be9d3079b5851be5ee4557888fba36ffe77099c8a21",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "abb96166a37faf072cb29d28d78135c49c8177e3bfc6ff755f401be36f9a0973": {
      "address": "0x3FF9C4B30309b9cc3356189Ab1c58311822EC85B",
      "txHash": "0xa50865fe476ccbddea0751a55222be5f004c98b838fb91c5a18b0c88d1631a5f",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5fb7d0044a7f80929a041b833c5fbf084e8f6ac1fc8e88d783c114a9426019f7": {
      "address": "0x5C3b9a45D0DC63855f6abA393A9Cd524B3b0a8A2",
      "txHash": "0xe5940f6c60fb776137d56548dedd5eb2037331ff2bac9c60f4ad324709933933",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e2ae1696d26619906f7a89ac02a50cde94e11fac763ab0c9710d449473bcf062": {
      "address": "0xe6be7c43b4306f42975A3B90477aE995bD3d45F9",
      "txHash": "0xe1a5f95aeb11b8974990f48f984ec69211998aa971d6f4d036d859ca6144e4a5",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "723d6bcdfabf99d1a92853e2d7f5d4f6a712ad9fada4758c303bf00d5f79e796": {
      "address": "0x5Bd6892A76A1C3844D1f7b23438fC2B410cA6d65",
      "txHash": "0xea23e67c75a7d117a8f1c9e46ffeab67bffed73a0303cf674e72c3d2ad291836",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:24"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:25"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:33"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "281386e3b0e8ab65f328af554bd4f1eb823533bf6dffc50d631d3881ed7f1b5b": {
      "address": "0xeACa2c726ad43abd85AB274903D9FaC0c22df63E",
      "txHash": "0xf5504433dc09bc0825d18f80e017c308231c9c98e98276871b0020f8192ed502",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9c63355bcf5e00e030e71613569d6cf146133c96d5b82dc347b0b7de07b89d8e": {
      "address": "0x08A6A64EE0E33b60D17a46ccAF0004d83A7695D6",
      "txHash": "0xa1f37ce496349d5bbab86e80e7da1d057fb593ead076e1b2224ee84f4eea52f2",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "372",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6e0bc6f88afb187904f0e11530ffdbec48385c047c79f203fc776fb9af60d6b7": {
      "address": "0x842Bdd0d3d52051810E1f64F44bf11EDBd82E74B",
      "txHash": "0x3be0df5d1c704d558e0f06f700c878a9d53f82b6c45cb01bbc9d7be252c15811",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "372",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4d6845bc7af6035e87d4cc504d6ff6ac96ef929c12d9c4c5f7c336f7dd31dd65": {
      "address": "0xD205DFEA249C8C55D98233D4e590656397176092",
      "txHash": "0xb79580800402f10c9fa725c29caa471507bd20b780d5c350112023212420574c",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)8045_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "372",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:60"
          },
          {
            "label": "_daoBlockReserve",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:61"
          },
          {
            "label": "_daoGMThreshold",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)8045_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)8045_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)8053_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)8045_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)8053_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "698475e5c66f6c90cec0d412151a07c5cca409026059cbb8da2ba14c43538d8f": {
      "address": "0x28142fCE557eDE7c0B9258C0cf573214406099bb",
      "txHash": "0xc971072d95b2b5682efbbf3982c9fa701e502ca0ababdadd6d66cc808e2d08f2",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:27"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:28"
          },
          {
            "label": "_currentId",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:29"
          },
          {
            "label": "_script",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:30"
          },
          {
            "label": "_gmToken",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:31"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:32"
          },
          {
            "label": "_maxSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:34"
          },
          {
            "label": "_signerMint",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:35"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)20454_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:36"
          },
          {
            "label": "_mintAt",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:37"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:38"
          },
          {
            "label": "_counting",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:40"
          },
          {
            "label": "_biddingBalance",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:42"
          },
          {
            "label": "_auctions",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_uint256,t_struct(Auction)20446_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:44"
          },
          {
            "label": "_auctionsList",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_bytes32,t_struct(Auction)20446_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:46"
          },
          {
            "label": "_bidderAuctions",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:48"
          },
          {
            "label": "_coreTeamTreasury",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:50"
          },
          {
            "label": "_bidderAuctionsList",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:52"
          },
          {
            "label": "_names",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:54"
          },
          {
            "label": "_features",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:57"
          },
          {
            "label": "_dao",
            "offset": 0,
            "slot": "372",
            "type": "t_address",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:60"
          },
          {
            "label": "_daoBlockReserve",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:61"
          },
          {
            "label": "_daoGMThreshold",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:62"
          },
          {
            "label": "_lastSettle",
            "offset": 0,
            "slot": "375",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SOUL",
            "src": "contracts/nfts/SOUL.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(string => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Auction)20446_storage)": {
            "label": "mapping(bytes32 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(string => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Auction)20446_storage)": {
            "label": "mapping(uint256 => struct AuctionHouse.Auction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)20454_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Auction)20446_storage": {
            "label": "struct AuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "timeBuffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "minBidIncrementPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "auctionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(OwnerSeed)20454_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b02dee0601f0bf36cfd54031a5325d6ecd91cadc60e0270ed0c77e9cb4c1b2f8": {
      "address": "0x1c15A373741D55d5cEA1C41E46C2E196d1029763",
      "txHash": "0x42eb0df78f499ccb75c8c04c352f341c3cca20972a5430a3b1ca4864721acdd9",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:26"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:28"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:30"
          },
          {
            "label": "_projectDataContextAddr",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:32"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:35"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(Project)6037_storage)",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:37"
          },
          {
            "label": "_projectImplementation",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)6037_storage)": {
            "label": "mapping(uint256 => struct NFTProject.Project)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Project)6037_storage": {
            "label": "struct NFTProject.Project",
            "members": [
              {
                "label": "_maxSupply",
                "type": "t_uint24",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_limit",
                "type": "t_uint24",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "_mintPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintPriceAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_creatorAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_license",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_social",
                "type": "t_struct(ProjectSocial)6048_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_scriptType",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "_scripts",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "_styles",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "_completeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "_genNFTAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "18"
              },
              {
                "label": "_itemDesc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "19"
              },
              {
                "label": "_reserves",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "20"
              },
              {
                "label": "_royalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "21"
              }
            ],
            "numberOfBytes": "704"
          },
          "t_struct(ProjectSocial)6048_storage": {
            "label": "struct NFTProject.ProjectSocial",
            "members": [
              {
                "label": "_web",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_twitter",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_discord",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_medium",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_instagram",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3f153c4c727d86f53dce847a2a8b9071cfe1520a835c4ad6bd61d7bb699aa41a": {
      "address": "0x5844c7dD6945d1A8C1A9e9018E0371b0CdEe2E23",
      "txHash": "0xadbd6e481b3a4c0740ddeb4013a75da27723fed8da5f549928dcebb0ce1e162e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "43230176007f4eb107aa99d4e359c8c331c57077958bd99b5242a1c752dea016": {
      "address": "0xD295c06F092c7DA36b56723C85C5f8d8fa8Ea820",
      "txHash": "0x56aaa595dbc19ebef6be02e38508a1b11ffc7d84a1c81b90505a0b926ed7fa81",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_ownersAndHashSeeds",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(OwnerSeed)14385_storage)",
            "contract": "BaseERC721OwnerSeedUpgradeable",
            "src": "contracts/nfts/BaseERC721OwnerSeedUpgradeable.sol:17"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "BaseERC721OwnerSeedUpgradeable",
            "src": "contracts/nfts/BaseERC721OwnerSeedUpgradeable.sol:18"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "BaseERC721OwnerSeedUpgradeable",
            "src": "contracts/nfts/BaseERC721OwnerSeedUpgradeable.sol:19"
          },
          {
            "label": "_randomizer",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "BaseERC721OwnerSeedUpgradeable",
            "src": "contracts/nfts/BaseERC721OwnerSeedUpgradeable.sol:20"
          },
          {
            "label": "_projectDataContextAddr",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "BaseERC721OwnerSeedUpgradeable",
            "src": "contracts/nfts/BaseERC721OwnerSeedUpgradeable.sol:21"
          },
          {
            "label": "_nameCol",
            "offset": 0,
            "slot": "356",
            "type": "t_string_storage",
            "contract": "BaseERC721OwnerSeedUpgradeable",
            "src": "contracts/nfts/BaseERC721OwnerSeedUpgradeable.sol:22"
          },
          {
            "label": "_royalty",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "BaseERC721OwnerSeedUpgradeable",
            "src": "contracts/nfts/BaseERC721OwnerSeedUpgradeable.sol:23"
          },
          {
            "label": "_project",
            "offset": 0,
            "slot": "358",
            "type": "t_struct(ProjectMinting)14520_storage",
            "contract": "GenerativeNFTUpgradeable",
            "src": "contracts/nfts/GenerativeNFTUpgradeable.sol:30"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenerativeNFTUpgradeable",
            "src": "contracts/nfts/GenerativeNFTUpgradeable.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes12": {
            "label": "bytes12",
            "numberOfBytes": "12"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(OwnerSeed)14385_storage)": {
            "label": "mapping(uint256 => struct NFTCollection.OwnerSeed)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(OwnerSeed)14385_storage": {
            "label": "struct NFTCollection.OwnerSeed",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_seed",
                "type": "t_bytes12",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProjectMinting)14520_storage": {
            "label": "struct NFTProject.ProjectMinting",
            "members": [
              {
                "label": "_projectAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_projectId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_maxSupply",
                "type": "t_uint24",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_limit",
                "type": "t_uint24",
                "offset": 3,
                "slot": "2"
              },
              {
                "label": "_index",
                "type": "t_uint24",
                "offset": 6,
                "slot": "2"
              },
              {
                "label": "_indexReserve",
                "type": "t_uint24",
                "offset": 9,
                "slot": "2"
              },
              {
                "label": "_creator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_mintPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_mintPriceAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_mintingSchedule",
                "type": "t_struct(ProjectMintingSchedule)14525_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_reserves",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_royalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(ProjectMintingSchedule)14525_storage": {
            "label": "struct NFTProject.ProjectMintingSchedule",
            "members": [
              {
                "label": "_initBlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_openingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "94ba872d59f5c60a9ecf474ac6f9e201997a43005838ff46eb0a7abdb39cfdce": {
      "address": "0x2aBECe59d1b5D2de68663b9a411eC42CA7Edac41",
      "txHash": "0x07cdbc3fdd8d543618a944f0add59af02773ef10746c078931452bf57413e773",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:28"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:32"
          },
          {
            "label": "_projectDataContextAddr",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:34"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:37"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(Project)30859_storage)",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:39"
          },
          {
            "label": "_projectImplementation",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)30859_storage)": {
            "label": "mapping(uint256 => struct NFTProject.Project)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Project)30859_storage": {
            "label": "struct NFTProject.Project",
            "members": [
              {
                "label": "_maxSupply",
                "type": "t_uint24",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_limit",
                "type": "t_uint24",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "_mintPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintPriceAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_creatorAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_license",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_social",
                "type": "t_struct(ProjectSocial)30870_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_scriptType",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "_scripts",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "_styles",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "_completeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "_genNFTAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "18"
              },
              {
                "label": "_itemDesc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "19"
              },
              {
                "label": "_reserves",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "20"
              },
              {
                "label": "_royalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "21"
              }
            ],
            "numberOfBytes": "704"
          },
          "t_struct(ProjectSocial)30870_storage": {
            "label": "struct NFTProject.ProjectSocial",
            "members": [
              {
                "label": "_web",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_twitter",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_discord",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_medium",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_instagram",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9def185b3f5d4e363aebaa37ddf6ccc73b32ba63f275fe6cd29418c2781e3339": {
      "address": "0xEb499c89D92E93c3d4D7A656b2a78e9C2dCC39Ce",
      "txHash": "0xac675b990b118e2359aa6c3959d84fc96d5f126ebc7d19fef2fae5cebb4d771b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:47"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:28"
          },
          {
            "label": "_paramsAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:30"
          },
          {
            "label": "_randomizerAddr",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:32"
          },
          {
            "label": "_projectDataContextAddr",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:34"
          },
          {
            "label": "_currentProjectId",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:37"
          },
          {
            "label": "_projects",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(Project)14840_storage)",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:39"
          },
          {
            "label": "_projectImplementation",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "GenerativeProject",
            "src": "contracts/nfts/GenerativeProject.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)14840_storage)": {
            "label": "mapping(uint256 => struct NFTProject.Project)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Project)14840_storage": {
            "label": "struct NFTProject.Project",
            "members": [
              {
                "label": "_maxSupply",
                "type": "t_uint24",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_limit",
                "type": "t_uint24",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "_mintPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_mintPriceAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_creator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_creatorAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_license",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "_desc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "_image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "_social",
                "type": "t_struct(ProjectSocial)14851_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "_scriptType",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "_scripts",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "_styles",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "_completeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "_genNFTAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "18"
              },
              {
                "label": "_itemDesc",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "19"
              },
              {
                "label": "_reserves",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "20"
              },
              {
                "label": "_royalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "21"
              }
            ],
            "numberOfBytes": "704"
          },
          "t_struct(ProjectSocial)14851_storage": {
            "label": "struct NFTProject.ProjectSocial",
            "members": [
              {
                "label": "_web",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_twitter",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_discord",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_medium",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_instagram",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e9095167fd7fbededadfadf77d13b3281ac178348a4465d207205a72be908394": {
      "address": "0x82Cfa3Fb7e140b4Ac8A2E2463397164373622d41",
      "txHash": "0x95245489ca717d661d7619f6facaeff1b1c03d746378598a17a6e6a23a26e29e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6699b7a23038e1a558e0d8e65561ad5ec3b6748504d84a83740ce78f2148ca66": {
      "address": "0x16F1e6A97f4F44433E36adef45d3420CB64b7c82",
      "txHash": "0xb0d66a0d6a78d69deee835c81202d63b127cb0eae971986181d605faaafaf41a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2cc8d9b090ed4c1b084ff093edbcd3dff267921489cb19f6d2aec940f80fa7a1": {
      "address": "0xC88fd6Ee654494fFf76E6Ba4694523D1233Ba9d5",
      "txHash": "0x854a6af2e155e296d933523915c58cf33903110c42bf086df646b2b0be27fe06",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2dc1ee1ecf0d73866b4263ad6db581f8e01812f7a4dd774124f2ab89f1ea6149": {
      "address": "0xC483A04b121251cfEC2B542d616405Ce2A7769a8",
      "txHash": "0xe6ada7aeaf661bc04ae771c18b52fa7c353d21c3f15b5dfc51c31fbfebadde3d",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "21396de0b2c052199c5956d0d258b564ab2b8b2587524b0fe7e15353c0bdc72d": {
      "address": "0x95056d48b6DC390304e6d5c4638A413E7Bd931ce",
      "txHash": "0xd8aa43bda4086691d51e4a724850a22298a63d70952db274cd667d21d45c9835",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:22"
          },
          {
            "label": "_paramAddr",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:23"
          },
          {
            "label": "_generativeProjectAddr",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:24"
          },
          {
            "label": "_bfs",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "GenerativeProjectData",
            "src": "contracts/data/GenerativeProjectData.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
