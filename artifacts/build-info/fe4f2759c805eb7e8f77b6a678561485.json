{"id":"fe4f2759c805eb7e8f77b6a678561485","_format":"hh-sol-build-info-1","solcVersion":"0.8.12","solcLongVersion":"0.8.12+commit.f00d7308","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerableUpgradeable.sol\";\nimport \"./AccessControlUpgradeable.sol\";\nimport \"../utils/structs/EnumerableSetUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerableUpgradeable, AccessControlUpgradeable {\n    function __AccessControlEnumerable_init() internal onlyInitializing {\n    }\n\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\n    }\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n\n    mapping(bytes32 => EnumerableSetUpgradeable.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerableUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerableUpgradeable is IAccessControlUpgradeable {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotesUpgradeable {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20PermitUpgradeable.sol\";\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"../../../utils/cryptography/EIP712Upgradeable.sol\";\nimport \"../../../utils/CountersUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 51\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20PermitUpgradeable, EIP712Upgradeable {\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    mapping(address => CountersUpgradeable.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSAUpgradeable.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        CountersUpgradeable.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../security/PausableUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n */\nabstract contract ERC20PausableUpgradeable is Initializable, ERC20Upgradeable, PausableUpgradeable {\n    function __ERC20Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __ERC20Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20VotesComp.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20VotesUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound's voting and delegation. This version exactly matches Compound's\n * interface, with the drawback of only supporting supply up to (2^96^ - 1).\n *\n * NOTE: You should use this contract if you need exact compatibility with COMP (for example in order to use your token\n * with Governor Alpha or Bravo) and if you are sure the supply cap of 2^96^ is enough for you. Otherwise, use the\n * {ERC20Votes} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getCurrentVotes} and {getPriorVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20VotesCompUpgradeable is Initializable, ERC20VotesUpgradeable {\n    function __ERC20VotesComp_init() internal onlyInitializing {\n    }\n\n    function __ERC20VotesComp_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Comp version of the {getVotes} accessor, with `uint96` return type.\n     */\n    function getCurrentVotes(address account) external view virtual returns (uint96) {\n        return SafeCastUpgradeable.toUint96(getVotes(account));\n    }\n\n    /**\n     * @dev Comp version of the {getPastVotes} accessor, with `uint96` return type.\n     */\n    function getPriorVotes(address account, uint256 blockNumber) external view virtual returns (uint96) {\n        return SafeCastUpgradeable.toUint96(getPastVotes(account, blockNumber));\n    }\n\n    /**\n     * @dev Maximum token supply. Reduced to `type(uint96).max` (2^96^ - 1) to fit COMP interface.\n     */\n    function _maxSupply() internal view virtual override returns (uint224) {\n        return type(uint96).max;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-ERC20PermitUpgradeable.sol\";\nimport \"../../../utils/math/MathUpgradeable.sol\";\nimport \"../../../governance/utils/IVotesUpgradeable.sol\";\nimport \"../../../utils/math/SafeCastUpgradeable.sol\";\nimport \"../../../utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20VotesUpgradeable is Initializable, IVotesUpgradeable, ERC20PermitUpgradeable {\n    function __ERC20Votes_init() internal onlyInitializing {\n    }\n\n    function __ERC20Votes_init_unchained() internal onlyInitializing {\n    }\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCastUpgradeable.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_checkpoints[account], blockNumber);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n     * It is but NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, blockNumber);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {\n        // We run a binary search to look for the earliest checkpoint taken after `blockNumber`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `blockNumber`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `blockNumber`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `blockNumber`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `blockNumber`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - MathUpgradeable.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = MathUpgradeable.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSAUpgradeable.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(\n        address src,\n        address dst,\n        uint256 amount\n    ) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n        oldWeight = oldCkpt.votes;\n        newWeight = op(oldWeight, delta);\n\n        if (pos > 0 && oldCkpt.fromBlock == block.number) {\n            _unsafeAccess(ckpts, pos - 1).votes = SafeCastUpgradeable.toUint224(newWeight);\n        } else {\n            ckpts.push(Checkpoint({fromBlock: SafeCastUpgradeable.toUint32(block.number), votes: SafeCastUpgradeable.toUint224(newWeight)}));\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[47] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/presets/ERC20PresetMinterPauser.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../extensions/ERC20BurnableUpgradeable.sol\";\nimport \"../extensions/ERC20PausableUpgradeable.sol\";\nimport \"../../../access/AccessControlEnumerableUpgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev {ERC20} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n *\n * _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\n */\ncontract ERC20PresetMinterPauserUpgradeable is Initializable, ContextUpgradeable, AccessControlEnumerableUpgradeable, ERC20BurnableUpgradeable, ERC20PausableUpgradeable {\n    function initialize(string memory name, string memory symbol) public virtual initializer {\n        __ERC20PresetMinterPauser_init(name, symbol);\n    }\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * See {ERC20-constructor}.\n     */\n    function __ERC20PresetMinterPauser_init(string memory name, string memory symbol) internal onlyInitializing {\n        __ERC20_init_unchained(name, symbol);\n        __Pausable_init_unchained();\n        __ERC20PresetMinterPauser_init_unchained(name, symbol);\n    }\n\n    function __ERC20PresetMinterPauser_init_unchained(string memory, string memory) internal onlyInitializing {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override(ERC20Upgradeable, ERC20PausableUpgradeable) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../StringsUpgradeable.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSAUpgradeable {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", StringsUpgradeable.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSAUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 52\n */\nabstract contract EIP712Upgradeable is Initializable {\n    /* solhint-disable var-name-mixedcase */\n    bytes32 private _HASHED_NAME;\n    bytes32 private _HASHED_VERSION;\n    bytes32 private constant _TYPE_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator(_TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash());\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSAUpgradeable.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712NameHash() internal virtual view returns (bytes32) {\n        return _HASHED_NAME;\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712VersionHash() internal virtual view returns (bytes32) {\n        return _HASHED_VERSION;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCastUpgradeable {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/erc20/GENToken.sol":{"content":"pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\";\n\nimport \"../libs/helpers/Errors.sol\";\nimport \"../interfaces/IGENToken.sol\";\nimport \"../interfaces/IGenerativeProject.sol\";\nimport \"../interfaces/IGenerativeNFT.sol\";\n\ncontract GENToken is Initializable, ERC20PausableUpgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, IGENToken, ERC20VotesCompUpgradeable {\n    address public _admin;\n    address public _paramAddr;\n    mapping(address => mapping(address => uint256)) public _claimed;\n\n    // 70 % supply for creator\n    uint256 public _remainClaimSupply;\n\n\n    function initialize(\n        string memory name,\n        string memory symbol,\n        address admin,\n        address paramAddr\n    ) initializer public {\n        require(admin != Errors.ZERO_ADDR && paramAddr != Errors.ZERO_ADDR, Errors.INV_ADD);\n        _admin = admin;\n        _paramAddr = paramAddr;\n\n        uint256 totalSupply = 100 * (10 ** 6) * (10 ** decimals());\n        // 70% for artist\n        _remainClaimSupply = totalSupply * 70 / 100;\n        // 20% for team\n        uint256 _coreTeam = totalSupply * 20 / 100;\n        _mint(_admin, _coreTeam);\n        // 10% for testnet\n\n        __ERC20Pausable_init();\n        __ERC20_init(name, symbol);\n        __Ownable_init();\n    }\n\n    function changeAdmin(address newAdm) external {\n        require(msg.sender == _admin && newAdm != address(0), Errors.ONLY_ADMIN_ALLOWED);\n        // change admin\n        if (_admin != newAdm) {\n            _admin = newAdm;\n        }\n    }\n\n    function changeParamAddress(address newAddr) external {\n        require(msg.sender == _admin && newAddr != address(0), Errors.ONLY_ADMIN_ALLOWED);\n        // change param address\n        if (_paramAddr != newAddr) {\n            _admin = newAddr;\n        }\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view override(ERC20Upgradeable, IERC20Upgradeable) returns (uint256) {\n        return super.totalSupply();\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n    internal\n    override(ERC20Upgradeable, ERC20PausableUpgradeable)\n    {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    function _afterTokenTransfer(address from, address to, uint256 amount)\n    internal\n    override(ERC20Upgradeable, ERC20VotesUpgradeable)\n    {\n        super._afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address to, uint256 amount)\n    internal\n    override(ERC20Upgradeable, ERC20VotesUpgradeable)\n    {\n        super._mint(to, amount);\n    }\n\n    function _burn(address account, uint256 amount)\n    internal\n    override(ERC20Upgradeable, ERC20VotesUpgradeable)\n    {\n        super._burn(account, amount);\n    }\n\n    /*\n    * @Minting\n    */\n    function calculateAmountClaim(address genNFTAddr, uint256 mintPrice) public returns (uint256) {\n        IGenerativeNFT nft = IGenerativeNFT(genNFTAddr);\n        try nft.projectIndex() returns (uint24 index) {\n            return index * mintPrice - _claimed[msg.sender][genNFTAddr];\n        } catch {\n            emit NotSupportProjectIndex(genNFTAddr);\n        }\n        return 0;\n    }\n\n    /*\n    * Project creator call claim function to mint GENToken\n    */\n    function claim(address generativeProjectAddr, uint256 projectId) external whenNotPaused virtual {\n        require(_remainClaimSupply > 0, Errors.REACH_MAX);\n\n        IGenerativeProject projectContract = IGenerativeProject(generativeProjectAddr);\n        NFTProject.Project memory project = projectContract.projectDetails(projectId);\n        require(project._creatorAddr == msg.sender, Errors.INV_ADD);\n\n        uint256 amount = calculateAmountClaim(project._genNFTAddr, project._mintPrice);\n        if (amount > _remainClaimSupply) {\n            amount = _remainClaimSupply;\n        }\n        _claimed[msg.sender][project._genNFTAddr] += amount;\n        _mint(msg.sender, amount);\n        _remainClaimSupply -= amount;\n\n        emit IGENToken.ClaimToken(msg.sender, amount);\n    }\n}\n"},"contracts/interfaces/IBaseERC721OwnerSeed.sol":{"content":"pragma solidity ^0.8.0;\n\ninterface IBaseERC721OwnerSeed {\n    function getStatus() external view returns (bool);\n}\n"},"contracts/interfaces/IGenerativeNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport \"../libs/structs/NFTProject.sol\";\nimport \"./IBaseERC721OwnerSeed.sol\";\n\ninterface IGenerativeNFT is IBaseERC721OwnerSeed {\n    function init(NFTProject.ProjectMinting memory project, address admin, address paramsAddr, address randomizer, address projectDataContextAddr, bool disable) external;\n\n    function setStatus(bool enable) external;\n\n    function updatePrice(uint256 price) external;\n\n    function projectIndex() external view returns (uint24);\n}"},"contracts/interfaces/IGenerativeProject.sol":{"content":"pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\nimport \"../libs/structs/NFTProject.sol\";\n\ninterface IGenerativeProject is IERC721Upgradeable {\n    function projectDetails(uint256 _projectId) external view returns (NFTProject.Project memory project);\n\n    function completeProject(uint256 projectId) external;\n}"},"contracts/interfaces/IGENToken.sol":{"content":"pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\n\ninterface IGENToken is IVotesUpgradeable, IERC20Upgradeable {\n    event ClaimToken(address to, uint256 amount);\n    event NotSupportProjectIndex(address genNFT);\n}\n"},"contracts/libs/helpers/Errors.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.8.12;\n\nlibrary Errors {\n    enum ReturnCode {\n        SUCCESS,\n        FAILED\n    }\n\n    string public constant SUCCESS = \"0\";\n\n    address public constant ZERO_ADDR = address(0x0);\n    \n    // common errors\n    string public constant INV_ADD = \"100\";\n    string public constant ONLY_ADMIN_ALLOWED = \"101\";\n    string public constant ONLY_CREATOR = \"102\";\n\n    // validation error\n    string public constant MISSING_NAME = \"200\";\n    string public constant INV_FEE_PROJECT = \"201\";\n    string public constant INV_PROJECT = \"202\";\n    string public constant REACH_MAX = \"203\";\n    string public constant INV_PARAMS = \"204\";\n    string public constant TOO_HIGH = \"205\";\n    string public constant TOKEN_HAS_SEED = \"206\";\n    string public constant ZERO_SEED = \"207\";\n    string public constant OPENING_SCHEDULE = \"208\";\n    string public constant INV_TOKEN = \"209\";\n    string public constant FORBIDDEN_TRANSFER_PROJECT = \"210\";\n\n    // validator market error\n    string public constant INVALID_ERC721_OWNER = \"300\";\n    string public constant ERC_721_NOT_APPROVED = \"301\";\n    string public constant OFFERING_CLOSED = \"302\";\n    string public constant VALUE_INVALID = \"303\";\n    string public constant ERC20_BALANCE_INVALID = \"304\";\n    string public constant ERC20_NOT_APPROVED = \"305\";\n    string public constant TRANSFER_FAIL = \"306\";\n    string public constant ERC_20_NOT_ALLOW = \"307\";\n    string public constant ZERO_PRICE = \"308\";\n    string public constant ZERO_DURATION = \"309\";\n}"},"contracts/libs/structs/NFTProject.sol":{"content":"pragma solidity ^0.8.0;\n\nlibrary NFTProject {\n    event CompleteProject(uint256 indexed projectId, uint256 indexed time);\n    event UpdateProjectSocial(uint256 indexed projectId, ProjectSocial data);\n    event UpdateProjectName(uint256 indexed projectId, string indexed data);\n    event UpdateProjectLicense(uint256 indexed projectId, string indexed data);\n    event UpdateProjectCreatorName(uint256 indexed projectId, string indexed data);\n    event SetProjectStatus(uint256 indexed projectId, bool indexed enable);\n    event UpdateProjectPrice(uint256 indexed projectId, uint256 indexed price);\n\n    struct Project {\n        uint24 _maxSupply; // required\n        uint24 _limit;// required\n        uint256 _mintPrice;// not require\n        address _mintPriceAddr; // erc20 addr if possible, not require\n        string _name;// required\n        string _creator;// required\n        address _creatorAddr;// required\n        string _license;\n        string _desc;// not require\n        string _image;// base64 of image\n        ProjectSocial _social;// not require\n        string[] _scriptType;// not require\n        string[] _scripts;// required\n        string _styles;// not require\n        uint256 _completeTime;// init = 0\n        address _genNFTAddr; // init = 0x0\n        string _itemDesc; // not require\n        address[] _reserves;// list address for GenerativeNFT.reserveMint\n        uint256 _royalty;//% royalty second sale\n    }\n\n    struct ProjectSocial {\n        string _web;\n        string _twitter;\n        string _discord;\n        string _medium;\n        string _instagram;\n    }\n\n    struct ProjectMinting {\n        address _projectAddr;// parent project addr\n        uint256 _projectId;// parent project id\n        uint24 _maxSupply;// max\n        uint24 _limit; // limit for not reserve\n        uint24 _index;// index for not reserve\n        uint24 _indexReserve;// index for reserve\n        string _creator;\n        uint256 _mintPrice;\n        address _mintPriceAddr; // erc20 addr if possible\n        string _name;\n        ProjectMintingSchedule _mintingSchedule;\n        address[] _reserves;\n        uint256 _royalty;//% royalty second sale\n    }\n\n    struct ProjectMintingSchedule {\n        uint256 _initBlockTime; // current block.timestamp of project\n        uint256 _openingTime; // time for open minting\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/erc20/GENToken.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/erc20/GENToken.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IBaseERC721OwnerSeed.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IBaseERC721OwnerSeed.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IGENToken.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IGENToken.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IGenerativeProject.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IGenerativeProject.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/libs/structs/NFTProject.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/libs/structs/NFTProject.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/erc20/GENToken.sol:33:9:\n   |\n33 |         uint256 totalSupply = 100 * (10 ** 6) * (10 ** decimals());\n   |         ^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/erc20/GENToken.sol:66:5:\n   |\n66 |     function totalSupply() public view override(ERC20Upgradeable, IERC20Upgradeable) returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":2424,"file":"contracts/erc20/GENToken.sol","message":"The shadowed declaration is here:","start":2282}],"severity":"warning","sourceLocation":{"end":1319,"file":"contracts/erc20/GENToken.sol","start":1300},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[144],"AccessControlUpgradeable":[480],"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"ERC165Upgradeable":[4369],"EnumerableSetUpgradeable":[7400],"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578],"IERC165Upgradeable":[4381],"Initializable":[957],"MathUpgradeable":[5246],"StringsUpgradeable":[3814]},"id":145,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol","file":"./IAccessControlEnumerableUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":506,"src":"143:51:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"./AccessControlUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":481,"src":"195:40:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"../utils/structs/EnumerableSetUpgradeable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":7401,"src":"236:55:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":958,"src":"292:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"487:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"487:13:0"},{"baseName":{"id":9,"name":"IAccessControlEnumerableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":505,"src":"502:35:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"502:35:0"},{"baseName":{"id":11,"name":"AccessControlUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":480,"src":"539:24:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"539:24:0"}],"canonicalName":"AccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"336:94:0","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":144,"linearizedBaseContracts":[144,480,4369,4381,505,578,3565,957],"name":"AccessControlEnumerableUpgradeable","nameLocation":"449:34:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":17,"nodeType":"Block","src":"638:7:0","statements":[]},"id":18,"implemented":true,"kind":"function","modifiers":[{"id":15,"kind":"modifierInvocation","modifierName":{"id":14,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"621:16:0"},"nodeType":"ModifierInvocation","src":"621:16:0"}],"name":"__AccessControlEnumerable_init","nameLocation":"579:30:0","nodeType":"FunctionDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"609:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"638:0:0"},"scope":144,"src":"570:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":23,"nodeType":"Block","src":"729:7:0","statements":[]},"id":24,"implemented":true,"kind":"function","modifiers":[{"id":21,"kind":"modifierInvocation","modifierName":{"id":20,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"712:16:0"},"nodeType":"ModifierInvocation","src":"712:16:0"}],"name":"__AccessControlEnumerable_init_unchained","nameLocation":"660:40:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"700:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"729:0:0"},"scope":144,"src":"651:85:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":28,"libraryName":{"id":25,"name":"EnumerableSetUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":7400,"src":"747:24:0"},"nodeType":"UsingForDirective","src":"741:71:0","typeName":{"id":27,"nodeType":"UserDefinedTypeName","pathNode":{"id":26,"name":"EnumerableSetUpgradeable.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"776:35:0"},"referencedDeclaration":7113,"src":"776:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"constant":false,"id":33,"mutability":"mutable","name":"_roleMembers","nameLocation":"882:12:0","nodeType":"VariableDeclaration","scope":144,"src":"818:76:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7113_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"typeName":{"id":32,"keyType":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"826:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"818:55:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7113_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"valueType":{"id":31,"nodeType":"UserDefinedTypeName","pathNode":{"id":30,"name":"EnumerableSetUpgradeable.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"837:35:0"},"referencedDeclaration":7113,"src":"837:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},"visibility":"private"},{"baseFunctions":[220],"body":{"id":54,"nodeType":"Block","src":"1053:132:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":42,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1070:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":44,"name":"IAccessControlEnumerableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1090:35:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$505_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$505_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}],"id":43,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1085:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":45,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1085:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerableUpgradeable_$505","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1085:53:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1070:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1166:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":48,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1142:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$144_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":220,"src":"1142:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1142:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1070:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41,"id":53,"nodeType":"Return","src":"1063:115:0"}]},"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"901:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":55,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"971:17:0","nodeType":"FunctionDefinition","overrides":{"id":38,"nodeType":"OverrideSpecifier","overrides":[],"src":"1029:8:0"},"parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"interfaceId","nameLocation":"996:11:0","nodeType":"VariableDeclaration","scope":55,"src":"989:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":35,"name":"bytes4","nodeType":"ElementaryTypeName","src":"989:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"988:20:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55,"src":"1047:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39,"name":"bool","nodeType":"ElementaryTypeName","src":"1047:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1046:6:0"},"scope":144,"src":"962:223:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[496],"body":{"id":73,"nodeType":"Block","src":"1869:52:0","statements":[{"expression":{"arguments":[{"id":70,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1908:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":66,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1886:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7113_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":68,"indexExpression":{"id":67,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1899:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1886:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":69,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"1886:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7113_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$7113_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":65,"id":72,"nodeType":"Return","src":"1879:35:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1191:574:0","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1779:13:0","nodeType":"FunctionDefinition","overrides":{"id":62,"nodeType":"OverrideSpecifier","overrides":[],"src":"1842:8:0"},"parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"role","nameLocation":"1801:4:0","nodeType":"VariableDeclaration","scope":74,"src":"1793:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":57,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1793:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"index","nameLocation":"1815:5:0","nodeType":"VariableDeclaration","scope":74,"src":"1807:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1792:29:0"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"1860:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1859:9:0"},"scope":144,"src":"1770:151:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":89,"nodeType":"Block","src":"2178:51:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":83,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7113_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":85,"indexExpression":{"id":84,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2208:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2195:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":86,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7209,"src":"2195:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7113_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$7113_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2195:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":82,"id":88,"nodeType":"Return","src":"2188:34:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"1927:157:0","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":90,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"2098:18:0","nodeType":"FunctionDefinition","overrides":{"id":79,"nodeType":"OverrideSpecifier","overrides":[],"src":"2151:8:0"},"parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"role","nameLocation":"2125:4:0","nodeType":"VariableDeclaration","scope":90,"src":"2117:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":76,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2117:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2116:14:0"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"2169:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"2169:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2168:9:0"},"scope":144,"src":"2089:140:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[443],"body":{"id":113,"nodeType":"Block","src":"2394:89:0","statements":[{"expression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2421:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2427:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":99,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2404:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$144_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":443,"src":"2404:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2404:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105,"nodeType":"ExpressionStatement","src":"2404:31:0"},{"expression":{"arguments":[{"id":110,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":106,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2445:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7113_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":108,"indexExpression":{"id":107,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2458:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2445:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7140,"src":"2445:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7113_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$7113_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2445:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"ExpressionStatement","src":"2445:31:0"}]},"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"2235:77:0","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2326:10:0","nodeType":"FunctionDefinition","overrides":{"id":97,"nodeType":"OverrideSpecifier","overrides":[],"src":"2385:8:0"},"parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"role","nameLocation":"2345:4:0","nodeType":"VariableDeclaration","scope":114,"src":"2337:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":92,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"account","nameLocation":"2359:7:0","nodeType":"VariableDeclaration","scope":114,"src":"2351:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"2351:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2336:31:0"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[],"src":"2394:0:0"},"scope":144,"src":"2317:166:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[474],"body":{"id":137,"nodeType":"Block","src":"2650:93:0","statements":[{"expression":{"arguments":[{"id":126,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":127,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":123,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2660:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$144_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":474,"src":"2660:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2660:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"ExpressionStatement","src":"2660:32:0"},{"expression":{"arguments":[{"id":134,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2728:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":130,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2702:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7113_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":132,"indexExpression":{"id":131,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2702:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"2702:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7113_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$7113_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2702:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":136,"nodeType":"ExpressionStatement","src":"2702:34:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"2489:78:0","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":138,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2581:11:0","nodeType":"FunctionDefinition","overrides":{"id":121,"nodeType":"OverrideSpecifier","overrides":[],"src":"2641:8:0"},"parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"2601:4:0","nodeType":"VariableDeclaration","scope":138,"src":"2593:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2593:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"account","nameLocation":"2615:7:0","nodeType":"VariableDeclaration","scope":138,"src":"2607:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"2607:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2592:31:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[],"src":"2650:0:0"},"scope":144,"src":"2572:171:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2749:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":143,"mutability":"mutable","name":"__gap","nameLocation":"3028:5:0","nodeType":"VariableDeclaration","scope":144,"src":"3008:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":142,"length":{"hexValue":"3439","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3016:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3008:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":145,"src":"431:2605:0","usedErrors":[]}],"src":"118:2919:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[480],"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"ERC165Upgradeable":[4369],"IAccessControlUpgradeable":[578],"IERC165Upgradeable":[4381],"Initializable":[957],"MathUpgradeable":[5246],"StringsUpgradeable":[3814]},"id":481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":146,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":579,"src":"133:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":3566,"src":"175:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../utils/StringsUpgradeable.sol","id":149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":3815,"src":"217:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":4370,"src":"259:54:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":958,"src":"314:42:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":153,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"1939:13:1"},"id":154,"nodeType":"InheritanceSpecifier","src":"1939:13:1"},{"baseName":{"id":155,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3565,"src":"1954:18:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"1954:18:1"},{"baseName":{"id":157,"name":"IAccessControlUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":578,"src":"1974:25:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"1974:25:1"},{"baseName":{"id":159,"name":"ERC165Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":4369,"src":"2001:17:1"},"id":160,"nodeType":"InheritanceSpecifier","src":"2001:17:1"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"358:1534:1","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":480,"linearizedBaseContracts":[480,4369,4381,578,3565,957],"name":"AccessControlUpgradeable","nameLocation":"1911:24:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":165,"nodeType":"Block","src":"2083:7:1","statements":[]},"id":166,"implemented":true,"kind":"function","modifiers":[{"id":163,"kind":"modifierInvocation","modifierName":{"id":162,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2066:16:1"},"nodeType":"ModifierInvocation","src":"2066:16:1"}],"name":"__AccessControl_init","nameLocation":"2034:20:1","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"2054:2:1"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"2083:0:1"},"scope":480,"src":"2025:65:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":171,"nodeType":"Block","src":"2164:7:1","statements":[]},"id":172,"implemented":true,"kind":"function","modifiers":[{"id":169,"kind":"modifierInvocation","modifierName":{"id":168,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2147:16:1"},"nodeType":"ModifierInvocation","src":"2147:16:1"}],"name":"__AccessControl_init_unchained","nameLocation":"2105:30:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"2135:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"2164:0:1"},"scope":480,"src":"2096:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"AccessControlUpgradeable.RoleData","id":179,"members":[{"constant":false,"id":176,"mutability":"mutable","name":"members","nameLocation":"2227:7:1","nodeType":"VariableDeclaration","scope":179,"src":"2202:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":175,"keyType":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2221:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"adminRole","nameLocation":"2252:9:1","nodeType":"VariableDeclaration","scope":179,"src":"2244:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2244:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2183:8:1","nodeType":"StructDefinition","scope":480,"src":"2176:92:1","visibility":"public"},{"constant":false,"id":184,"mutability":"mutable","name":"_roles","nameLocation":"2311:6:1","nodeType":"VariableDeclaration","scope":480,"src":"2274:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":183,"keyType":{"id":180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2282:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2274:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueType":{"id":182,"nodeType":"UserDefinedTypeName","pathNode":{"id":181,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":179,"src":"2293:8:1"},"referencedDeclaration":179,"src":"2293:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":187,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2348:18:1","nodeType":"VariableDeclaration","scope":480,"src":"2324:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:4:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":197,"nodeType":"Block","src":"2792:44:1","statements":[{"expression":{"arguments":[{"id":193,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2813:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":192,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[252,291],"referencedDeclaration":252,"src":"2802:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2802:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"2802:16:1"},{"id":196,"nodeType":"PlaceholderStatement","src":"2828:1:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2380:375:1","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":198,"name":"onlyRole","nameLocation":"2769:8:1","nodeType":"ModifierDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"role","nameLocation":"2786:4:1","nodeType":"VariableDeclaration","scope":198,"src":"2778:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2778:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2777:14:1"},"src":"2760:76:1","virtual":false,"visibility":"internal"},{"baseFunctions":[4363],"body":{"id":219,"nodeType":"Block","src":"2994:122:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":207,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3011:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":209,"name":"IAccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3031:25:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$578_$","typeString":"type(contract IAccessControlUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$578_$","typeString":"type(contract IAccessControlUpgradeable)"}],"id":208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3026:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3026:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$578","typeString":"type(contract IAccessControlUpgradeable)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"3026:43:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3011:58:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":215,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3097:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":213,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3073:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$480_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4363,"src":"3073:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3073:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3011:98:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":206,"id":218,"nodeType":"Return","src":"3004:105:1"}]},"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"2842:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":220,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2912:17:1","nodeType":"FunctionDefinition","overrides":{"id":203,"nodeType":"OverrideSpecifier","overrides":[],"src":"2970:8:1"},"parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"interfaceId","nameLocation":"2937:11:1","nodeType":"VariableDeclaration","scope":220,"src":"2930:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":200,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2930:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2929:20:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"2988:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"2988:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2987:6:1"},"scope":480,"src":"2903:213:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[545],"body":{"id":238,"nodeType":"Block","src":"3295:53:1","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":231,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3312:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":233,"indexExpression":{"id":232,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3319:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3312:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":176,"src":"3312:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":236,"indexExpression":{"id":235,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"3333:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3312:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":230,"id":237,"nodeType":"Return","src":"3305:36:1"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"3122:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":239,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3212:7:1","nodeType":"FunctionDefinition","overrides":{"id":227,"nodeType":"OverrideSpecifier","overrides":[],"src":"3271:8:1"},"parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"role","nameLocation":"3228:4:1","nodeType":"VariableDeclaration","scope":239,"src":"3220:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3220:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"account","nameLocation":"3242:7:1","nodeType":"VariableDeclaration","scope":239,"src":"3234:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"3234:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3219:31:1"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":239,"src":"3289:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"3289:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3288:6:1"},"scope":480,"src":"3203:145:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":251,"nodeType":"Block","src":"3698:47:1","statements":[{"expression":{"arguments":[{"id":246,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3719:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":247,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"3725:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3725:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[252,291],"referencedDeclaration":291,"src":"3708:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3708:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"3708:30:1"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3354:283:1","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":252,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3651:10:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"role","nameLocation":"3670:4:1","nodeType":"VariableDeclaration","scope":252,"src":"3662:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3662:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3661:14:1"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"3698:0:1"},"scope":480,"src":"3642:103:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":290,"nodeType":"Block","src":"4099:428:1","statements":[{"condition":{"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4113:23:1","subExpression":{"arguments":[{"id":261,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4122:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":262,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4128:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":260,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4114:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4114:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":289,"nodeType":"IfStatement","src":"4109:412:1","trueBody":{"id":288,"nodeType":"Block","src":"4138:383:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4246:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":273,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4328:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":271,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"4297:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3814_$","typeString":"type(library StringsUpgradeable)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3813,"src":"4297:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4297:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4362:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4446:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4438:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4438:7:1","typeDescriptions":{}}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4438:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4453:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":276,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"4407:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3814_$","typeString":"type(library StringsUpgradeable)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3793,"src":"4407:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4407:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":268,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4204:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4204:274:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4176:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":266,"name":"string","nodeType":"ElementaryTypeName","src":"4176:6:1","typeDescriptions":{}}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4176:320:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":265,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4152:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4152:358:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"ExpressionStatement","src":"4152:358:1"}]}}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"3751:270:1","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":291,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4035:10:1","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"role","nameLocation":"4054:4:1","nodeType":"VariableDeclaration","scope":291,"src":"4046:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4046:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"account","nameLocation":"4068:7:1","nodeType":"VariableDeclaration","scope":291,"src":"4060:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4060:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4045:31:1"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"4099:0:1"},"scope":480,"src":"4026:501:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[553],"body":{"id":305,"nodeType":"Block","src":"4791:46:1","statements":[{"expression":{"expression":{"baseExpression":{"id":300,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"4808:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":302,"indexExpression":{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4815:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4808:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":178,"src":"4808:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":299,"id":304,"nodeType":"Return","src":"4801:29:1"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"4533:170:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":306,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4717:12:1","nodeType":"FunctionDefinition","overrides":{"id":296,"nodeType":"OverrideSpecifier","overrides":[],"src":"4764:8:1"},"parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"role","nameLocation":"4738:4:1","nodeType":"VariableDeclaration","scope":306,"src":"4730:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4730:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4729:14:1"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"4782:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4782:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4781:9:1"},"scope":480,"src":"4708:129:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[561],"body":{"id":325,"nodeType":"Block","src":"5236:42:1","statements":[{"expression":{"arguments":[{"id":321,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5257:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":322,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5263:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":320,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5246:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5246:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5246:25:1"}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"4843:285:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":326,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":316,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5229:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":315,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"5216:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5216:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":318,"kind":"modifierInvocation","modifierName":{"id":314,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":198,"src":"5207:8:1"},"nodeType":"ModifierInvocation","src":"5207:28:1"}],"name":"grantRole","nameLocation":"5142:9:1","nodeType":"FunctionDefinition","overrides":{"id":313,"nodeType":"OverrideSpecifier","overrides":[],"src":"5198:8:1"},"parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"role","nameLocation":"5160:4:1","nodeType":"VariableDeclaration","scope":326,"src":"5152:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5152:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"account","nameLocation":"5174:7:1","nodeType":"VariableDeclaration","scope":326,"src":"5166:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"5166:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5151:31:1"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"5236:0:1"},"scope":480,"src":"5133:145:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[569],"body":{"id":345,"nodeType":"Block","src":"5662:43:1","statements":[{"expression":{"arguments":[{"id":341,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5684:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":342,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"5690:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":340,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"5672:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5672:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"5672:26:1"}]},"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"5284:269:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":346,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":336,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5655:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":335,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"5642:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5642:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":338,"kind":"modifierInvocation","modifierName":{"id":334,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":198,"src":"5633:8:1"},"nodeType":"ModifierInvocation","src":"5633:28:1"}],"name":"revokeRole","nameLocation":"5567:10:1","nodeType":"FunctionDefinition","overrides":{"id":333,"nodeType":"OverrideSpecifier","overrides":[],"src":"5624:8:1"},"parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"role","nameLocation":"5586:4:1","nodeType":"VariableDeclaration","scope":346,"src":"5578:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5578:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"account","nameLocation":"5600:7:1","nodeType":"VariableDeclaration","scope":346,"src":"5592:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"5592:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5577:31:1"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"5662:0:1"},"scope":480,"src":"5558:147:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[577],"body":{"id":368,"nodeType":"Block","src":"6319:137:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6337:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":357,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"6348:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6348:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6337:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6362:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6329:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6329:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"6329:83:1"},{"expression":{"arguments":[{"id":364,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6435:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":365,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6441:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":363,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6423:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6423:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"6423:26:1"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"5711:526:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":369,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6251:12:1","nodeType":"FunctionDefinition","overrides":{"id":353,"nodeType":"OverrideSpecifier","overrides":[],"src":"6310:8:1"},"parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"6272:4:1","nodeType":"VariableDeclaration","scope":369,"src":"6264:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6264:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"account","nameLocation":"6286:7:1","nodeType":"VariableDeclaration","scope":369,"src":"6278:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"6278:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6263:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"6319:0:1"},"scope":480,"src":"6242:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":382,"nodeType":"Block","src":"7209:42:1","statements":[{"expression":{"arguments":[{"id":378,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"7230:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":379,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7236:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":377,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"7219:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7219:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"7219:25:1"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"6462:674:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":383,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"7150:10:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"7169:4:1","nodeType":"VariableDeclaration","scope":383,"src":"7161:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7161:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"account","nameLocation":"7183:7:1","nodeType":"VariableDeclaration","scope":383,"src":"7175:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"7175:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7160:31:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"7209:0:1"},"scope":480,"src":"7141:110:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":410,"nodeType":"Block","src":"7449:174:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7467:17:1","nodeType":"VariableDeclaration","scope":410,"src":"7459:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7459:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":396,"initialValue":{"arguments":[{"id":394,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7500:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":393,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7487:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7487:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7459:46:1"},{"expression":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":397,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"7515:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":399,"indexExpression":{"id":398,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7522:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7515:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":178,"src":"7515:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":401,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7540:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7515:34:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":403,"nodeType":"ExpressionStatement","src":"7515:34:1"},{"eventCall":{"arguments":[{"id":405,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7581:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":406,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"7587:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":407,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7606:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":404,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"7564:16:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7564:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"EmitStatement","src":"7559:57:1"}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"7257:114:1","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":411,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7385:13:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"role","nameLocation":"7407:4:1","nodeType":"VariableDeclaration","scope":411,"src":"7399:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7399:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"adminRole","nameLocation":"7421:9:1","nodeType":"VariableDeclaration","scope":411,"src":"7413:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7413:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7398:33:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"7449:0:1"},"scope":480,"src":"7376:247:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":442,"nodeType":"Block","src":"7859:165:1","statements":[{"condition":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7873:23:1","subExpression":{"arguments":[{"id":420,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7882:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":421,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"7888:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":419,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7874:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7874:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"IfStatement","src":"7869:149:1","trueBody":{"id":440,"nodeType":"Block","src":"7898:120:1","statements":[{"expression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":424,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"7912:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":426,"indexExpression":{"id":425,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7919:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7912:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":176,"src":"7912:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":429,"indexExpression":{"id":428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"7933:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7912:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7944:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7912:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":432,"nodeType":"ExpressionStatement","src":"7912:36:1"},{"eventCall":{"arguments":[{"id":434,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7979:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":435,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"7985:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"7994:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7994:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":433,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"7967:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7967:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":439,"nodeType":"EmitStatement","src":"7962:45:1"}]}}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"7629:157:1","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7800:10:1","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"role","nameLocation":"7819:4:1","nodeType":"VariableDeclaration","scope":443,"src":"7811:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7811:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"account","nameLocation":"7833:7:1","nodeType":"VariableDeclaration","scope":443,"src":"7825:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"7825:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7810:31:1"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"7859:0:1"},"scope":480,"src":"7791:233:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":473,"nodeType":"Block","src":"8264:165:1","statements":[{"condition":{"arguments":[{"id":452,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8286:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":453,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8292:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":451,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"8278:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8278:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":472,"nodeType":"IfStatement","src":"8274:149:1","trueBody":{"id":471,"nodeType":"Block","src":"8302:121:1","statements":[{"expression":{"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":455,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"8316:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":457,"indexExpression":{"id":456,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8323:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8316:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":176,"src":"8316:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":460,"indexExpression":{"id":459,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8337:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8316:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8348:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8316:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"ExpressionStatement","src":"8316:37:1"},{"eventCall":{"arguments":[{"id":465,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8384:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8390:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":467,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"8399:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":464,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"8372:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8372:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":470,"nodeType":"EmitStatement","src":"8367:45:1"}]}}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"8030:160:1","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":474,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8204:11:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"role","nameLocation":"8224:4:1","nodeType":"VariableDeclaration","scope":474,"src":"8216:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8216:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"account","nameLocation":"8238:7:1","nodeType":"VariableDeclaration","scope":474,"src":"8230:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"8230:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8215:31:1"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"8264:0:1"},"scope":480,"src":"8195:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"8435:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":479,"mutability":"mutable","name":"__gap","nameLocation":"8714:5:1","nodeType":"VariableDeclaration","scope":480,"src":"8694:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"8694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":478,"length":{"hexValue":"3439","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8702:2:1","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8694:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":481,"src":"1893:6829:1","usedErrors":[]}],"src":"108:8615:1"},"id":1},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol","exportedSymbols":{"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578]},"id":506,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":482,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":483,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":506,"sourceUnit":579,"src":"129:41:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":485,"name":"IAccessControlUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":578,"src":"321:25:2"},"id":486,"nodeType":"InheritanceSpecifier","src":"321:25:2"}],"canonicalName":"IAccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"172:99:2","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":505,"linearizedBaseContracts":[505,578],"name":"IAccessControlEnumerableUpgradeable","nameLocation":"282:35:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"353:574:2","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"941:13:2","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"role","nameLocation":"963:4:2","nodeType":"VariableDeclaration","scope":496,"src":"955:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"955:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"index","nameLocation":"977:5:2","nodeType":"VariableDeclaration","scope":496,"src":"969:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"954:29:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":496,"src":"1007:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1006:9:2"},"scope":505,"src":"932:84:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"1022:157:2","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1193:18:2","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"role","nameLocation":"1220:4:2","nodeType":"VariableDeclaration","scope":504,"src":"1212:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1211:14:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"1249:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1248:9:2"},"scope":505,"src":"1184:74:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":506,"src":"272:988:2","usedErrors":[]}],"src":"104:1157:2"},"id":2},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","exportedSymbols":{"IAccessControlUpgradeable":[578]},"id":579,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":507,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"119:89:3","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":578,"linearizedBaseContracts":[578],"name":"IAccessControlUpgradeable","nameLocation":"219:25:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"251:292:3","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":517,"name":"RoleAdminChanged","nameLocation":"554:16:3","nodeType":"EventDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"587:4:3","nodeType":"VariableDeclaration","scope":517,"src":"571:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"609:17:3","nodeType":"VariableDeclaration","scope":517,"src":"593:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":515,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"644:12:3","nodeType":"VariableDeclaration","scope":517,"src":"628:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"570:87:3"},"src":"548:110:3"},{"anonymous":false,"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"664:212:3","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":526,"name":"RoleGranted","nameLocation":"887:11:3","nodeType":"EventDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"915:4:3","nodeType":"VariableDeclaration","scope":526,"src":"899:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":522,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:3","nodeType":"VariableDeclaration","scope":526,"src":"921:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"962:6:3","nodeType":"VariableDeclaration","scope":526,"src":"946:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:71:3"},"src":"881:89:3"},{"anonymous":false,"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"976:275:3","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":535,"name":"RoleRevoked","nameLocation":"1262:11:3","nodeType":"EventDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1290:4:3","nodeType":"VariableDeclaration","scope":535,"src":"1274:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":531,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1312:7:3","nodeType":"VariableDeclaration","scope":535,"src":"1296:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1337:6:3","nodeType":"VariableDeclaration","scope":535,"src":"1321:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:71:3"},"src":"1256:89:3"},{"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"1351:76:3","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":545,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1441:7:3","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"role","nameLocation":"1457:4:3","nodeType":"VariableDeclaration","scope":545,"src":"1449:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"account","nameLocation":"1471:7:3","nodeType":"VariableDeclaration","scope":545,"src":"1463:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1448:31:3"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"1503:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":542,"name":"bool","nodeType":"ElementaryTypeName","src":"1503:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1502:6:3"},"scope":578,"src":"1432:77:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"1515:184:3","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":553,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1713:12:3","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"role","nameLocation":"1734:4:3","nodeType":"VariableDeclaration","scope":553,"src":"1726:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1726:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:14:3"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"1763:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:9:3"},"scope":578,"src":"1704:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1778:239:3","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2031:9:3","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"role","nameLocation":"2049:4:3","nodeType":"VariableDeclaration","scope":561,"src":"2041:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"account","nameLocation":"2063:7:3","nodeType":"VariableDeclaration","scope":561,"src":"2055:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:31:3"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"2080:0:3"},"scope":578,"src":"2022:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"2087:223:3","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":569,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2324:10:3","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"role","nameLocation":"2343:4:3","nodeType":"VariableDeclaration","scope":569,"src":"2335:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"account","nameLocation":"2357:7:3","nodeType":"VariableDeclaration","scope":569,"src":"2349:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:31:3"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"2374:0:3"},"scope":578,"src":"2315:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"2381:480:3","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":577,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2875:12:3","nodeType":"FunctionDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"role","nameLocation":"2896:4:3","nodeType":"VariableDeclaration","scope":577,"src":"2888:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2888:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"account","nameLocation":"2910:7:3","nodeType":"VariableDeclaration","scope":577,"src":"2902:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2887:31:3"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"2927:0:3"},"scope":578,"src":"2866:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":579,"src":"209:2721:3","usedErrors":[]}],"src":"94:2837:3"},"id":3},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"Initializable":[957],"OwnableUpgradeable":[710]},"id":711,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":580,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":711,"sourceUnit":3566,"src":"127:41:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":711,"sourceUnit":958,"src":"169:42:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":584,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"748:13:4"},"id":585,"nodeType":"InheritanceSpecifier","src":"748:13:4"},{"baseName":{"id":586,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3565,"src":"763:18:4"},"id":587,"nodeType":"InheritanceSpecifier","src":"763:18:4"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"213:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":710,"linearizedBaseContracts":[710,3565,957],"name":"OwnableUpgradeable","nameLocation":"726:18:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":589,"mutability":"mutable","name":"_owner","nameLocation":"804:6:4","nodeType":"VariableDeclaration","scope":710,"src":"788:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":595,"name":"OwnershipTransferred","nameLocation":"823:20:4","nodeType":"EventDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:4","nodeType":"VariableDeclaration","scope":595,"src":"844:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:4","nodeType":"VariableDeclaration","scope":595,"src":"875:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:4"},"src":"817:84:4"},{"body":{"id":604,"nodeType":"Block","src":"1055:43:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1065:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"1065:26:4"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"907:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":605,"implemented":true,"kind":"function","modifiers":[{"id":599,"kind":"modifierInvocation","modifierName":{"id":598,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1038:16:4"},"nodeType":"ModifierInvocation","src":"1038:16:4"}],"name":"__Ownable_init","nameLocation":"1012:14:4","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"1026:2:4"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"1055:0:4"},"scope":710,"src":"1003:95:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"1166:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":611,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"1195:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":610,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"1176:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":614,"nodeType":"ExpressionStatement","src":"1176:32:4"}]},"id":616,"implemented":true,"kind":"function","modifiers":[{"id":608,"kind":"modifierInvocation","modifierName":{"id":607,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1149:16:4"},"nodeType":"ModifierInvocation","src":"1149:16:4"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:4","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"1137:2:4"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"1166:0:4"},"scope":710,"src":"1104:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":623,"nodeType":"Block","src":"1324:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":619,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"1334:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"ExpressionStatement","src":"1334:13:4"},{"id":622,"nodeType":"PlaceholderStatement","src":"1357:1:4"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"1221:77:4","text":" @dev Throws if called by any account other than the owner."},"id":624,"name":"onlyOwner","nameLocation":"1312:9:4","nodeType":"ModifierDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"1321:2:4"},"src":"1303:62:4","virtual":false,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"1496:30:4","statements":[{"expression":{"id":630,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1513:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":629,"id":631,"nodeType":"Return","src":"1506:13:4"}]},"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"1371:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":633,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:4","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"1455:2:4"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":633,"src":"1487:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:4"},"scope":710,"src":"1441:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":646,"nodeType":"Block","src":"1644:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1662:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"1673:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"1654:68:4"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"1532:62:4","text":" @dev Throws if the sender is not the owner."},"id":647,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:4","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"1619:2:4"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"1644:0:4"},"scope":710,"src":"1599:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":660,"nodeType":"Block","src":"2125:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:4","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"2135:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"ExpressionStatement","src":"2135:30:4"}]},"documentation":{"id":648,"nodeType":"StructuredDocumentation","src":"1735:331:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":661,"implemented":true,"kind":"function","modifiers":[{"id":651,"kind":"modifierInvocation","modifierName":{"id":650,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":624,"src":"2115:9:4"},"nodeType":"ModifierInvocation","src":"2115:9:4"}],"name":"renounceOwnership","nameLocation":"2080:17:4","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"2097:2:4"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[],"src":"2125:0:4"},"scope":710,"src":"2071:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":683,"nodeType":"Block","src":"2391:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":670,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2409:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:4","typeDescriptions":{}}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2421:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":669,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"2401:73:4"},{"expression":{"arguments":[{"id":680,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2503:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":679,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"2484:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2484:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"ExpressionStatement","src":"2484:28:4"}]},"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"2178:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":684,"implemented":true,"kind":"function","modifiers":[{"id":667,"kind":"modifierInvocation","modifierName":{"id":666,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":624,"src":"2381:9:4"},"nodeType":"ModifierInvocation","src":"2381:9:4"}],"name":"transferOwnership","nameLocation":"2330:17:4","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:4","nodeType":"VariableDeclaration","scope":684,"src":"2348:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:4"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"2391:0:4"},"scope":710,"src":"2321:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":703,"nodeType":"Block","src":"2736:124:4","statements":[{"assignments":[691],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:4","nodeType":"VariableDeclaration","scope":703,"src":"2746:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":693,"initialValue":{"id":692,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2765:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:4"},{"expression":{"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":694,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2781:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":695,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2790:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":697,"nodeType":"ExpressionStatement","src":"2781:17:4"},{"eventCall":{"arguments":[{"id":699,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"2834:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2844:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":698,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"2813:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2813:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"EmitStatement","src":"2808:45:4"}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"2525:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":704,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:4","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:4","nodeType":"VariableDeclaration","scope":704,"src":"2701:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:4"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"2736:0:4"},"scope":710,"src":"2673:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"2866:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":709,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:4","nodeType":"VariableDeclaration","scope":710,"src":"3125:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":708,"length":{"hexValue":"3439","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":711,"src":"708:2445:4","usedErrors":[]}],"src":"102:3052:4"},"id":4},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","exportedSymbols":{"IVotesUpgradeable":[788]},"id":789,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":712,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotesUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"135:132:5","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":788,"linearizedBaseContracts":[788],"name":"IVotesUpgradeable","nameLocation":"278:17:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"302:71:5","text":" @dev Emitted when an account changes their delegate."},"id":722,"name":"DelegateChanged","nameLocation":"384:15:5","nodeType":"EventDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"416:9:5","nodeType":"VariableDeclaration","scope":722,"src":"400:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"443:12:5","nodeType":"VariableDeclaration","scope":722,"src":"427:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"473:10:5","nodeType":"VariableDeclaration","scope":722,"src":"457:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"399:85:5"},"src":"378:107:5"},{"anonymous":false,"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"491:124:5","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":731,"name":"DelegateVotesChanged","nameLocation":"626:20:5","nodeType":"EventDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"663:8:5","nodeType":"VariableDeclaration","scope":731,"src":"647:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"681:15:5","nodeType":"VariableDeclaration","scope":731,"src":"673:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":729,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"706:10:5","nodeType":"VariableDeclaration","scope":731,"src":"698:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:71:5"},"src":"620:98:5"},{"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"724:79:5","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":739,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"817:8:5","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"account","nameLocation":"834:7:5","nodeType":"VariableDeclaration","scope":739,"src":"826:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"825:17:5"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"866:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"865:9:5"},"scope":788,"src":"808:67:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"881:114:5","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":749,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1009:12:5","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"account","nameLocation":"1030:7:5","nodeType":"VariableDeclaration","scope":749,"src":"1022:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"blockNumber","nameLocation":"1047:11:5","nodeType":"VariableDeclaration","scope":749,"src":"1039:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1021:38:5"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"1083:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:5"},"scope":788,"src":"1000:92:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1098:365:5","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":757,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1477:18:5","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"blockNumber","nameLocation":"1504:11:5","nodeType":"VariableDeclaration","scope":757,"src":"1496:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:21:5"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"1540:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1540:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1539:9:5"},"scope":788,"src":"1468:81:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"1555:71:5","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":765,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1640:9:5","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"account","nameLocation":"1658:7:5","nodeType":"VariableDeclaration","scope":765,"src":"1650:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1649:17:5"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":765,"src":"1690:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"1690:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1689:9:5"},"scope":788,"src":"1631:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"1705:71:5","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":771,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1790:8:5","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"delegatee","nameLocation":"1807:9:5","nodeType":"VariableDeclaration","scope":771,"src":"1799:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1798:19:5"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[],"src":"1826:0:5"},"scope":788,"src":"1781:46:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"1833:67:5","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":787,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1914:13:5","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"delegatee","nameLocation":"1945:9:5","nodeType":"VariableDeclaration","scope":787,"src":"1937:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"1937:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"nonce","nameLocation":"1972:5:5","nodeType":"VariableDeclaration","scope":787,"src":"1964:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"expiry","nameLocation":"1995:6:5","nodeType":"VariableDeclaration","scope":787,"src":"1987:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1987:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"v","nameLocation":"2017:1:5","nodeType":"VariableDeclaration","scope":787,"src":"2011:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":779,"name":"uint8","nodeType":"ElementaryTypeName","src":"2011:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"r","nameLocation":"2036:1:5","nodeType":"VariableDeclaration","scope":787,"src":"2028:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"s","nameLocation":"2055:1:5","nodeType":"VariableDeclaration","scope":787,"src":"2047:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2047:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1927:135:5"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[],"src":"2071:0:5"},"scope":788,"src":"1905:167:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":789,"src":"268:1806:5","usedErrors":[]}],"src":"110:1965:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"Initializable":[957]},"id":958,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":790,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":791,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":958,"sourceUnit":3524,"src":"138:44:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"184:2198:6","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":957,"linearizedBaseContracts":[957],"name":"Initializable","nameLocation":"2401:13:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"2421:109:6","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":795,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:6","nodeType":"VariableDeclaration","scope":957,"src":"2535:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":794,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"2568:91:6","text":" @dev Indicates that the contract is in the process of being initialized."},"id":798,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:6","nodeType":"VariableDeclaration","scope":957,"src":"2664:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":797,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"2697:90:6","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":803,"name":"Initialized","nameLocation":"2798:11:6","nodeType":"EventDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:6","nodeType":"VariableDeclaration","scope":803,"src":"2810:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":800,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:6"},"src":"2792:33:6"},{"body":{"id":858,"nodeType":"Block","src":"3258:483:6","statements":[{"assignments":[807],"declarations":[{"constant":false,"id":807,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:6","nodeType":"VariableDeclaration","scope":858,"src":"3268:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":806,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":810,"initialValue":{"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:6","subExpression":{"id":808,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3291:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":812,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3336:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3354:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:45:6","subExpression":{"arguments":[{"arguments":[{"id":822,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3415:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$957","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$957","typeString":"contract Initializable"}],"id":821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3407:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"3407:7:6","typeDescriptions":{}}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3407:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":818,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"3377:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$3523_$","typeString":"type(library AddressUpgradeable)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3257,"src":"3377:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3377:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":826,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3425:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:66:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:68:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:108:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3457:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3314:201:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":834,"nodeType":"ExpressionStatement","src":"3314:201:6"},{"expression":{"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":835,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3525:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3525:16:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":838,"nodeType":"ExpressionStatement","src":"3525:16:6"},{"condition":{"id":839,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3555:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":845,"nodeType":"IfStatement","src":"3551:65:6","trueBody":{"id":844,"nodeType":"Block","src":"3571:45:6","statements":[{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":840,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3585:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3601:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3585:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"nodeType":"ExpressionStatement","src":"3585:20:6"}]}},{"id":846,"nodeType":"PlaceholderStatement","src":"3625:1:6"},{"condition":{"id":847,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3640:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":857,"nodeType":"IfStatement","src":"3636:99:6","trueBody":{"id":856,"nodeType":"Block","src":"3656:79:6","statements":[{"expression":{"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":848,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3670:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3686:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3670:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":851,"nodeType":"ExpressionStatement","src":"3670:21:6"},{"eventCall":{"arguments":[{"hexValue":"31","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":852,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3710:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"EmitStatement","src":"3705:19:6"}]}}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"2831:399:6","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":859,"name":"initializer","nameLocation":"3244:11:6","nodeType":"ModifierDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"3255:2:6"},"src":"3235:506:6","virtual":false,"visibility":"internal"},{"body":{"id":891,"nodeType":"Block","src":"4852:255:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:14:6","subExpression":{"id":865,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4871:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"4888:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":868,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4903:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4888:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4870:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4862:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4862:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"4862:99:6"},{"expression":{"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":874,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"4971:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":875,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4986:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4971:22:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":877,"nodeType":"ExpressionStatement","src":"4971:22:6"},{"expression":{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":878,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5003:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5003:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":881,"nodeType":"ExpressionStatement","src":"5003:20:6"},{"id":882,"nodeType":"PlaceholderStatement","src":"5033:1:6"},{"expression":{"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":883,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5044:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5060:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5044:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"nodeType":"ExpressionStatement","src":"5044:21:6"},{"eventCall":{"arguments":[{"id":888,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5092:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":887,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5080:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5080:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"EmitStatement","src":"5075:25:6"}]},"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"3747:1062:6","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":892,"name":"reinitializer","nameLocation":"4823:13:6","nodeType":"ModifierDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"version","nameLocation":"4843:7:6","nodeType":"VariableDeclaration","scope":892,"src":"4837:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":861,"name":"uint8","nodeType":"ElementaryTypeName","src":"4837:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4836:15:6"},"src":"4814:293:6","virtual":false,"visibility":"internal"},{"body":{"id":901,"nodeType":"Block","src":"5345:97:6","statements":[{"expression":{"arguments":[{"id":896,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5363:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:45:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5355:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"ExpressionStatement","src":"5355:69:6"},{"id":900,"nodeType":"PlaceholderStatement","src":"5434:1:6"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"5113:199:6","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":902,"name":"onlyInitializing","nameLocation":"5326:16:6","nodeType":"ModifierDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"5342:2:6"},"src":"5317:125:6","virtual":false,"visibility":"internal"},{"body":{"id":937,"nodeType":"Block","src":"5977:230:6","statements":[{"expression":{"arguments":[{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5995:14:6","subExpression":{"id":907,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5996:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6011:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5987:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5987:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":911,"nodeType":"ExpressionStatement","src":"5987:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"6067:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":914,"name":"uint8","nodeType":"ElementaryTypeName","src":"6087:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":913,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6082:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6082:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6082:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6067:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":936,"nodeType":"IfStatement","src":"6063:138:6","trueBody":{"id":935,"nodeType":"Block","src":"6099:102:6","statements":[{"expression":{"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":919,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"6113:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":921,"name":"uint8","nodeType":"ElementaryTypeName","src":"6133:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6128:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6128:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6128:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6113:30:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":926,"nodeType":"ExpressionStatement","src":"6113:30:6"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6179:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":929,"name":"uint8","nodeType":"ElementaryTypeName","src":"6179:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6174:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6174:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":927,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"6162:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6162:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"EmitStatement","src":"6157:33:6"}]}}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"5448:475:6","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":938,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5937:20:6","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"5957:2:6"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[],"src":"5977:0:6"},"scope":957,"src":"5928:279:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"6384:36:6","statements":[{"expression":{"id":944,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"6401:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":943,"id":945,"nodeType":"Return","src":"6394:19:6"}]},"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"6213:102:6","text":" @dev Internal function that returns the initialized version. Returns `_initialized`"},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6329:22:6","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"6351:2:6"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"6377:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":941,"name":"uint8","nodeType":"ElementaryTypeName","src":"6377:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6376:7:6"},"scope":957,"src":"6320:100:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":955,"nodeType":"Block","src":"6590:37:6","statements":[{"expression":{"id":953,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"6607:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":952,"id":954,"nodeType":"Return","src":"6600:20:6"}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"6426:103:6","text":" @dev Internal function that returns the initialized version. Returns `_initializing`"},"id":956,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6543:15:6","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"6558:2:6"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"6584:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":950,"name":"bool","nodeType":"ElementaryTypeName","src":"6584:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6583:6:6"},"scope":957,"src":"6534:93:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":958,"src":"2383:4246:6","usedErrors":[]}],"src":"113:6517:6"},"id":6},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"Initializable":[957],"PausableUpgradeable":[1084]},"id":1085,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":959,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":960,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1085,"sourceUnit":3566,"src":"130:41:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":961,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1085,"sourceUnit":958,"src":"172:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":963,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"697:13:7"},"id":964,"nodeType":"InheritanceSpecifier","src":"697:13:7"},{"baseName":{"id":965,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3565,"src":"712:18:7"},"id":966,"nodeType":"InheritanceSpecifier","src":"712:18:7"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"216:439:7","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1084,"linearizedBaseContracts":[1084,3565,957],"name":"PausableUpgradeable","nameLocation":"674:19:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"737:73:7","text":" @dev Emitted when the pause is triggered by `account`."},"id":971,"name":"Paused","nameLocation":"821:6:7","nodeType":"EventDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:7","nodeType":"VariableDeclaration","scope":971,"src":"828:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:7"},"src":"815:30:7"},{"anonymous":false,"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"851:70:7","text":" @dev Emitted when the pause is lifted by `account`."},"id":976,"name":"Unpaused","nameLocation":"932:8:7","nodeType":"EventDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:7","nodeType":"VariableDeclaration","scope":976,"src":"941:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:7"},"src":"926:32:7"},{"constant":false,"id":978,"mutability":"mutable","name":"_paused","nameLocation":"977:7:7","nodeType":"VariableDeclaration","scope":1084,"src":"964:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":977,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":987,"nodeType":"Block","src":"1116:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":984,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"1126:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"ExpressionStatement","src":"1126:27:7"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"991:67:7","text":" @dev Initializes the contract in unpaused state."},"id":988,"implemented":true,"kind":"function","modifiers":[{"id":982,"kind":"modifierInvocation","modifierName":{"id":981,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1099:16:7"},"nodeType":"ModifierInvocation","src":"1099:16:7"}],"name":"__Pausable_init","nameLocation":"1072:15:7","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"1087:2:7"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"1116:0:7"},"scope":1084,"src":"1063:97:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"1229:32:7","statements":[{"expression":{"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":993,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"1239:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":996,"nodeType":"ExpressionStatement","src":"1239:15:7"}]},"id":998,"implemented":true,"kind":"function","modifiers":[{"id":991,"kind":"modifierInvocation","modifierName":{"id":990,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1212:16:7"},"nodeType":"ModifierInvocation","src":"1212:16:7"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:7","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[],"src":"1200:2:7"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"1229:0:7"},"scope":1084,"src":"1166:95:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"1472:47:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1001,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"1482:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"ExpressionStatement","src":"1482:19:7"},{"id":1004,"nodeType":"PlaceholderStatement","src":"1511:1:7"}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"1267:175:7","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1006,"name":"whenNotPaused","nameLocation":"1456:13:7","nodeType":"ModifierDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"1469:2:7"},"src":"1447:72:7","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"1719:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1009,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"1729:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"ExpressionStatement","src":"1729:16:7"},{"id":1012,"nodeType":"PlaceholderStatement","src":"1755:1:7"}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"1525:167:7","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1014,"name":"whenPaused","nameLocation":"1706:10:7","nodeType":"ModifierDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"1716:2:7"},"src":"1697:66:7","virtual":false,"visibility":"internal"},{"body":{"id":1022,"nodeType":"Block","src":"1911:31:7","statements":[{"expression":{"id":1020,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"1928:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1019,"id":1021,"nodeType":"Return","src":"1921:14:7"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"1769:84:7","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1023,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:7","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"1873:2:7"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1023,"src":"1905:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1017,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:7"},"scope":1084,"src":"1858:84:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1034,"nodeType":"Block","src":"2061:55:7","statements":[{"expression":{"arguments":[{"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:7","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1028,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2080:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":1027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1033,"nodeType":"ExpressionStatement","src":"2071:38:7"}]},"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"1948:57:7","text":" @dev Throws if the contract is paused."},"id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:7","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[],"src":"2036:2:7"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[],"src":"2061:0:7"},"scope":1084,"src":"2010:106:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"2236:58:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1040,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2254:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":1039,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"ExpressionStatement","src":"2246:41:7"}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"2122:61:7","text":" @dev Throws if the contract is not paused."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:7","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"2211:2:7"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"2236:0:7"},"scope":1084,"src":"2188:106:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1061,"nodeType":"Block","src":"2478:66:7","statements":[{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1052,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"2488:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1055,"nodeType":"ExpressionStatement","src":"2488:14:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1057,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2524:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1056,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"2517:6:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"EmitStatement","src":"2512:25:7"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"2300:124:7","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1062,"implemented":true,"kind":"function","modifiers":[{"id":1050,"kind":"modifierInvocation","modifierName":{"id":1049,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"2464:13:7"},"nodeType":"ModifierInvocation","src":"2464:13:7"}],"name":"_pause","nameLocation":"2438:6:7","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"2444:2:7"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"2478:0:7"},"scope":1084,"src":"2429:115:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"2724:69:7","statements":[{"expression":{"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1068,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"2734:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"ExpressionStatement","src":"2734:15:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1073,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2773:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1072,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"2764:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2764:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"EmitStatement","src":"2759:27:7"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"2550:121:7","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1078,"implemented":true,"kind":"function","modifiers":[{"id":1066,"kind":"modifierInvocation","modifierName":{"id":1065,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":1014,"src":"2713:10:7"},"nodeType":"ModifierInvocation","src":"2713:10:7"}],"name":"_unpause","nameLocation":"2685:8:7","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"2693:2:7"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"2724:0:7"},"scope":1084,"src":"2676:117:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"2799:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1083,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:7","nodeType":"VariableDeclaration","scope":1084,"src":"3058:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1082,"length":{"hexValue":"3439","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1085,"src":"656:2430:7","usedErrors":[]}],"src":"105:2982:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"ERC20Upgradeable":[1696],"IERC20MetadataUpgradeable":[2716],"IERC20Upgradeable":[1774],"Initializable":[957]},"id":1697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1086,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":1087,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":1775,"src":"130:33:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":1088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":2717,"src":"164:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":3566,"src":"217:44:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1090,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":958,"src":"262:45:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1092,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"1509:13:8"},"id":1093,"nodeType":"InheritanceSpecifier","src":"1509:13:8"},{"baseName":{"id":1094,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3565,"src":"1524:18:8"},"id":1095,"nodeType":"InheritanceSpecifier","src":"1524:18:8"},{"baseName":{"id":1096,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"1544:17:8"},"id":1097,"nodeType":"InheritanceSpecifier","src":"1544:17:8"},{"baseName":{"id":1098,"name":"IERC20MetadataUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"1563:25:8"},"id":1099,"nodeType":"InheritanceSpecifier","src":"1563:25:8"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"309:1170:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1696,"linearizedBaseContracts":[1696,2716,1774,3565,957],"name":"ERC20Upgradeable","nameLocation":"1489:16:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1103,"mutability":"mutable","name":"_balances","nameLocation":"1631:9:8","nodeType":"VariableDeclaration","scope":1696,"src":"1595:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1102,"keyType":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"1603:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1595:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1109,"mutability":"mutable","name":"_allowances","nameLocation":"1703:11:8","nodeType":"VariableDeclaration","scope":1696,"src":"1647:67:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1108,"keyType":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"1655:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1647:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1107,"keyType":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"1674:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1666:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1685:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1111,"mutability":"mutable","name":"_totalSupply","nameLocation":"1737:12:8","nodeType":"VariableDeclaration","scope":1696,"src":"1721:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1113,"mutability":"mutable","name":"_name","nameLocation":"1771:5:8","nodeType":"VariableDeclaration","scope":1696,"src":"1756:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1112,"name":"string","nodeType":"ElementaryTypeName","src":"1756:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1115,"mutability":"mutable","name":"_symbol","nameLocation":"1797:7:8","nodeType":"VariableDeclaration","scope":1696,"src":"1782:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1114,"name":"string","nodeType":"ElementaryTypeName","src":"1782:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1130,"nodeType":"Block","src":"2206:55:8","statements":[{"expression":{"arguments":[{"id":1126,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"2239:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1127,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"2246:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1125,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2216:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2216:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"ExpressionStatement","src":"2216:38:8"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"1811:298:8","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1131,"implemented":true,"kind":"function","modifiers":[{"id":1123,"kind":"modifierInvocation","modifierName":{"id":1122,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2189:16:8"},"nodeType":"ModifierInvocation","src":"2189:16:8"}],"name":"__ERC20_init","nameLocation":"2123:12:8","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"name_","nameLocation":"2150:5:8","nodeType":"VariableDeclaration","scope":1131,"src":"2136:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1117,"name":"string","nodeType":"ElementaryTypeName","src":"2136:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"symbol_","nameLocation":"2171:7:8","nodeType":"VariableDeclaration","scope":1131,"src":"2157:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1119,"name":"string","nodeType":"ElementaryTypeName","src":"2157:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2135:44:8"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[],"src":"2206:0:8"},"scope":1696,"src":"2114:147:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1148,"nodeType":"Block","src":"2369:57:8","statements":[{"expression":{"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1140,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2379:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1141,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"2387:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2379:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1143,"nodeType":"ExpressionStatement","src":"2379:13:8"},{"expression":{"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1144,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"2402:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1145,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2412:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2402:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1147,"nodeType":"ExpressionStatement","src":"2402:17:8"}]},"id":1149,"implemented":true,"kind":"function","modifiers":[{"id":1138,"kind":"modifierInvocation","modifierName":{"id":1137,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2352:16:8"},"nodeType":"ModifierInvocation","src":"2352:16:8"}],"name":"__ERC20_init_unchained","nameLocation":"2276:22:8","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"name_","nameLocation":"2313:5:8","nodeType":"VariableDeclaration","scope":1149,"src":"2299:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1132,"name":"string","nodeType":"ElementaryTypeName","src":"2299:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"symbol_","nameLocation":"2334:7:8","nodeType":"VariableDeclaration","scope":1149,"src":"2320:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1134,"name":"string","nodeType":"ElementaryTypeName","src":"2320:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2298:44:8"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[],"src":"2369:0:8"},"scope":1696,"src":"2267:159:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2703],"body":{"id":1158,"nodeType":"Block","src":"2560:29:8","statements":[{"expression":{"id":1156,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2577:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1155,"id":1157,"nodeType":"Return","src":"2570:12:8"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"2432:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2500:4:8","nodeType":"FunctionDefinition","overrides":{"id":1152,"nodeType":"OverrideSpecifier","overrides":[],"src":"2527:8:8"},"parameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"2504:2:8"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"2545:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1153,"name":"string","nodeType":"ElementaryTypeName","src":"2545:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2544:15:8"},"scope":1696,"src":"2491:98:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2709],"body":{"id":1168,"nodeType":"Block","src":"2773:31:8","statements":[{"expression":{"id":1166,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"2790:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1165,"id":1167,"nodeType":"Return","src":"2783:14:8"}]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"2595:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2711:6:8","nodeType":"FunctionDefinition","overrides":{"id":1162,"nodeType":"OverrideSpecifier","overrides":[],"src":"2740:8:8"},"parameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"2717:2:8"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1169,"src":"2758:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1163,"name":"string","nodeType":"ElementaryTypeName","src":"2758:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2757:15:8"},"scope":1696,"src":"2702:102:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2715],"body":{"id":1178,"nodeType":"Block","src":"3493:26:8","statements":[{"expression":{"hexValue":"3138","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3510:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1175,"id":1177,"nodeType":"Return","src":"3503:9:8"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"2810:613:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1179,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3437:8:8","nodeType":"FunctionDefinition","overrides":{"id":1172,"nodeType":"OverrideSpecifier","overrides":[],"src":"3468:8:8"},"parameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"3445:2:8"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1179,"src":"3486:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1173,"name":"uint8","nodeType":"ElementaryTypeName","src":"3486:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3485:7:8"},"scope":1696,"src":"3428:91:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1723],"body":{"id":1188,"nodeType":"Block","src":"3649:36:8","statements":[{"expression":{"id":1186,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"3666:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1185,"id":1187,"nodeType":"Return","src":"3659:19:8"}]},"documentation":{"id":1180,"nodeType":"StructuredDocumentation","src":"3525:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1189,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3588:11:8","nodeType":"FunctionDefinition","overrides":{"id":1182,"nodeType":"OverrideSpecifier","overrides":[],"src":"3622:8:8"},"parameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"3599:2:8"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1189,"src":"3640:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3639:9:8"},"scope":1696,"src":"3579:106:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1731],"body":{"id":1202,"nodeType":"Block","src":"3826:42:8","statements":[{"expression":{"baseExpression":{"id":1198,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"3843:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1200,"indexExpression":{"id":1199,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"3853:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3843:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1197,"id":1201,"nodeType":"Return","src":"3836:25:8"}]},"documentation":{"id":1190,"nodeType":"StructuredDocumentation","src":"3691:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1203,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3752:9:8","nodeType":"FunctionDefinition","overrides":{"id":1194,"nodeType":"OverrideSpecifier","overrides":[],"src":"3799:8:8"},"parameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"account","nameLocation":"3770:7:8","nodeType":"VariableDeclaration","scope":1203,"src":"3762:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"3762:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3761:17:8"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1203,"src":"3817:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1195,"name":"uint256","nodeType":"ElementaryTypeName","src":"3817:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3816:9:8"},"scope":1696,"src":"3743:125:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1741],"body":{"id":1227,"nodeType":"Block","src":"4149:104:8","statements":[{"assignments":[1215],"declarations":[{"constant":false,"id":1215,"mutability":"mutable","name":"owner","nameLocation":"4167:5:8","nodeType":"VariableDeclaration","scope":1227,"src":"4159:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"4159:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1218,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1216,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"4175:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4175:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4159:28:8"},{"expression":{"arguments":[{"id":1220,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"4207:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1221,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4214:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1222,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"4218:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1219,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"4197:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4197:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1224,"nodeType":"ExpressionStatement","src":"4197:28:8"},{"expression":{"hexValue":"74727565","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4242:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1213,"id":1226,"nodeType":"Return","src":"4235:11:8"}]},"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"3874:185:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4073:8:8","nodeType":"FunctionDefinition","overrides":{"id":1210,"nodeType":"OverrideSpecifier","overrides":[],"src":"4125:8:8"},"parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"to","nameLocation":"4090:2:8","nodeType":"VariableDeclaration","scope":1228,"src":"4082:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"amount","nameLocation":"4102:6:8","nodeType":"VariableDeclaration","scope":1228,"src":"4094:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4081:28:8"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1228,"src":"4143:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1211,"name":"bool","nodeType":"ElementaryTypeName","src":"4143:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4142:6:8"},"scope":1696,"src":"4064:189:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1751],"body":{"id":1245,"nodeType":"Block","src":"4409:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1239,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"4426:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1241,"indexExpression":{"id":1240,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4438:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4426:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1243,"indexExpression":{"id":1242,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4445:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4426:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1238,"id":1244,"nodeType":"Return","src":"4419:34:8"}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"4259:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4320:9:8","nodeType":"FunctionDefinition","overrides":{"id":1235,"nodeType":"OverrideSpecifier","overrides":[],"src":"4382:8:8"},"parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"owner","nameLocation":"4338:5:8","nodeType":"VariableDeclaration","scope":1246,"src":"4330:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"4330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"spender","nameLocation":"4353:7:8","nodeType":"VariableDeclaration","scope":1246,"src":"4345:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"4345:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4329:32:8"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"4400:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"4400:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4399:9:8"},"scope":1696,"src":"4311:149:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1761],"body":{"id":1270,"nodeType":"Block","src":"4857:108:8","statements":[{"assignments":[1258],"declarations":[{"constant":false,"id":1258,"mutability":"mutable","name":"owner","nameLocation":"4875:5:8","nodeType":"VariableDeclaration","scope":1270,"src":"4867:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"4867:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1261,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1259,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"4883:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4883:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4867:28:8"},{"expression":{"arguments":[{"id":1263,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"4914:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4921:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"4930:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1262,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4905:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4905:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1267,"nodeType":"ExpressionStatement","src":"4905:32:8"},{"expression":{"hexValue":"74727565","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4954:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1256,"id":1269,"nodeType":"Return","src":"4947:11:8"}]},"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"4466:297:8","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4777:7:8","nodeType":"FunctionDefinition","overrides":{"id":1253,"nodeType":"OverrideSpecifier","overrides":[],"src":"4833:8:8"},"parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"spender","nameLocation":"4793:7:8","nodeType":"VariableDeclaration","scope":1271,"src":"4785:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"amount","nameLocation":"4810:6:8","nodeType":"VariableDeclaration","scope":1271,"src":"4802:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:33:8"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1271,"src":"4851:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1254,"name":"bool","nodeType":"ElementaryTypeName","src":"4851:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4850:6:8"},"scope":1696,"src":"4768:197:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1773],"body":{"id":1303,"nodeType":"Block","src":"5660:153:8","statements":[{"assignments":[1285],"declarations":[{"constant":false,"id":1285,"mutability":"mutable","name":"spender","nameLocation":"5678:7:8","nodeType":"VariableDeclaration","scope":1303,"src":"5670:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"5670:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1288,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1286,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"5688:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5688:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5670:30:8"},{"expression":{"arguments":[{"id":1290,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"5726:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1291,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"5732:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1292,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"5741:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1289,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"5710:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5710:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"5710:38:8"},{"expression":{"arguments":[{"id":1296,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"5768:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1297,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5774:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"5778:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1295,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"5758:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5758:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1300,"nodeType":"ExpressionStatement","src":"5758:27:8"},{"expression":{"hexValue":"74727565","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5802:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1283,"id":1302,"nodeType":"Return","src":"5795:11:8"}]},"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"4971:551:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1304,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5536:12:8","nodeType":"FunctionDefinition","overrides":{"id":1280,"nodeType":"OverrideSpecifier","overrides":[],"src":"5636:8:8"},"parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"from","nameLocation":"5566:4:8","nodeType":"VariableDeclaration","scope":1304,"src":"5558:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"to","nameLocation":"5588:2:8","nodeType":"VariableDeclaration","scope":1304,"src":"5580:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"5580:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"amount","nameLocation":"5608:6:8","nodeType":"VariableDeclaration","scope":1304,"src":"5600:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"5600:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5548:72:8"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1304,"src":"5654:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1281,"name":"bool","nodeType":"ElementaryTypeName","src":"5654:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5653:6:8"},"scope":1696,"src":"5527:286:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1332,"nodeType":"Block","src":"6302:140:8","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"owner","nameLocation":"6320:5:8","nodeType":"VariableDeclaration","scope":1332,"src":"6312:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"6312:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"6328:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6328:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6312:28:8"},{"expression":{"arguments":[{"id":1320,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"6359:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"6366:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1323,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"6385:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1324,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"6392:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1322,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6375:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6375:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1326,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6403:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"6350:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6350:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"6350:64:8"},{"expression":{"hexValue":"74727565","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1313,"id":1331,"nodeType":"Return","src":"6424:11:8"}]},"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"5819:384:8","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1333,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6217:17:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"spender","nameLocation":"6243:7:8","nodeType":"VariableDeclaration","scope":1333,"src":"6235:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"6235:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"addedValue","nameLocation":"6260:10:8","nodeType":"VariableDeclaration","scope":1333,"src":"6252:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"6252:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6234:37:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1333,"src":"6296:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6295:6:8"},"scope":1696,"src":"6208:234:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1373,"nodeType":"Block","src":"7028:328:8","statements":[{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"owner","nameLocation":"7046:5:8","nodeType":"VariableDeclaration","scope":1373,"src":"7038:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"7038:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1347,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1345,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"7054:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7054:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7038:28:8"},{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"currentAllowance","nameLocation":"7084:16:8","nodeType":"VariableDeclaration","scope":1373,"src":"7076:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"7076:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1354,"initialValue":{"arguments":[{"id":1351,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"7113:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1352,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"7120:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1350,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"7103:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7103:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7076:52:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1356,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"7146:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1357,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"7166:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7146:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7183:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7138:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7138:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"ExpressionStatement","src":"7138:85:8"},{"id":1370,"nodeType":"UncheckedBlock","src":"7233:95:8","statements":[{"expression":{"arguments":[{"id":1363,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"7266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1364,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"7273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"7282:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1366,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"7301:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7282:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1362,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"7257:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7257:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"ExpressionStatement","src":"7257:60:8"}]},{"expression":{"hexValue":"74727565","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7345:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1342,"id":1372,"nodeType":"Return","src":"7338:11:8"}]},"documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"6448:476:8","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6938:17:8","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"spender","nameLocation":"6964:7:8","nodeType":"VariableDeclaration","scope":1374,"src":"6956:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"6956:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"subtractedValue","nameLocation":"6981:15:8","nodeType":"VariableDeclaration","scope":1374,"src":"6973:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"6973:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6955:42:8"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1374,"src":"7022:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1340,"name":"bool","nodeType":"ElementaryTypeName","src":"7022:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7021:6:8"},"scope":1696,"src":"6929:427:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1450,"nodeType":"Block","src":"7918:710:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"7936:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7944:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"7944:7:8","typeDescriptions":{}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7944:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7936:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7956:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7928:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7928:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1393,"nodeType":"ExpressionStatement","src":"7928:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"8014:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8028:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8020:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"8020:7:8","typeDescriptions":{}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8020:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8014:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8032:37:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1394,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8006:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8006:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"ExpressionStatement","src":"8006:64:8"},{"expression":{"arguments":[{"id":1405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"8102:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"8108:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1407,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8112:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1404,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8081:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8081:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"8081:38:8"},{"assignments":[1411],"declarations":[{"constant":false,"id":1411,"mutability":"mutable","name":"fromBalance","nameLocation":"8138:11:8","nodeType":"VariableDeclaration","scope":1450,"src":"8130:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"8130:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1415,"initialValue":{"baseExpression":{"id":1412,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"8152:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1414,"indexExpression":{"id":1413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"8162:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8152:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8130:37:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"8185:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1418,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8200:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8185:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8208:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8177:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8177:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"ExpressionStatement","src":"8177:72:8"},{"id":1437,"nodeType":"UncheckedBlock","src":"8259:273:8","statements":[{"expression":{"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1423,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"8283:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1425,"indexExpression":{"id":1424,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"8293:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8283:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1426,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"8301:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8315:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8301:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8283:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1430,"nodeType":"ExpressionStatement","src":"8283:38:8"},{"expression":{"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1431,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"8498:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1433,"indexExpression":{"id":1432,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"8508:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8498:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1434,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8515:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8498:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1436,"nodeType":"ExpressionStatement","src":"8498:23:8"}]},{"eventCall":{"arguments":[{"id":1439,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"8556:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"8562:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1441,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8566:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1438,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"8547:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8547:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1443,"nodeType":"EmitStatement","src":"8542:31:8"},{"expression":{"arguments":[{"id":1445,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"8604:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"8610:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8614:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1444,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"8584:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1449,"nodeType":"ExpressionStatement","src":"8584:37:8"}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"7362:443:8","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7819:9:8","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"from","nameLocation":"7846:4:8","nodeType":"VariableDeclaration","scope":1451,"src":"7838:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"7838:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"to","nameLocation":"7868:2:8","nodeType":"VariableDeclaration","scope":1451,"src":"7860:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"7860:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"amount","nameLocation":"7888:6:8","nodeType":"VariableDeclaration","scope":1451,"src":"7880:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"7880:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7828:72:8"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"7918:0:8"},"scope":1696,"src":"7810:818:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1507,"nodeType":"Block","src":"8969:470:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"8987:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8998:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"8998:7:8","typeDescriptions":{}}},"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8998:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8987:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9010:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8979:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8979:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1468,"nodeType":"ExpressionStatement","src":"8979:65:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9084:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9076:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"9076:7:8","typeDescriptions":{}}},"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9076:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1474,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9088:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1475,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"9097:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1469,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9055:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9055:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1477,"nodeType":"ExpressionStatement","src":"9055:49:8"},{"expression":{"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1478,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"9115:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1479,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"9131:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9115:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1481,"nodeType":"ExpressionStatement","src":"9115:22:8"},{"id":1488,"nodeType":"UncheckedBlock","src":"9147:175:8","statements":[{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1482,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"9283:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1484,"indexExpression":{"id":1483,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9293:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9283:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1485,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"9305:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9283:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"9283:28:8"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9353:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9345:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"9345:7:8","typeDescriptions":{}}},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9345:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1494,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9357:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1495,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"9366:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1489,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"9336:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9336:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1497,"nodeType":"EmitStatement","src":"9331:42:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9404:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1499,"name":"address","nodeType":"ElementaryTypeName","src":"9404:7:8","typeDescriptions":{}}},"id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9404:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1503,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9416:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1504,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"9425:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1498,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"9384:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9384:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"9384:48:8"}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"8634:265:8","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8913:5:8","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"account","nameLocation":"8927:7:8","nodeType":"VariableDeclaration","scope":1508,"src":"8919:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"8919:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"amount","nameLocation":"8944:6:8","nodeType":"VariableDeclaration","scope":1508,"src":"8936:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"8936:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8918:33:8"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"8969:0:8"},"scope":1696,"src":"8904:535:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1579,"nodeType":"Block","src":"9824:594:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"9842:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9861:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"9853:7:8","typeDescriptions":{}}},"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9853:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9842:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9865:35:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1516,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9834:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9834:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1525,"nodeType":"ExpressionStatement","src":"9834:67:8"},{"expression":{"arguments":[{"id":1527,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"9933:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9950:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9942:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9942:7:8","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9942:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1532,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"9954:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1526,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9912:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9912:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1534,"nodeType":"ExpressionStatement","src":"9912:49:8"},{"assignments":[1536],"declarations":[{"constant":false,"id":1536,"mutability":"mutable","name":"accountBalance","nameLocation":"9980:14:8","nodeType":"VariableDeclaration","scope":1579,"src":"9972:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"9972:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1540,"initialValue":{"baseExpression":{"id":1537,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"9997:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1539,"indexExpression":{"id":1538,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"10007:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9997:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9972:43:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1542,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"10033:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1543,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"10051:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10059:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1541,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10025:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10025:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1547,"nodeType":"ExpressionStatement","src":"10025:71:8"},{"id":1560,"nodeType":"UncheckedBlock","src":"10106:194:8","statements":[{"expression":{"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1548,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"10130:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1550,"indexExpression":{"id":1549,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"10140:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10130:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"10151:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1552,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"10168:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10151:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10130:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1555,"nodeType":"ExpressionStatement","src":"10130:44:8"},{"expression":{"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1556,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"10267:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1557,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"10283:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10267:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1559,"nodeType":"ExpressionStatement","src":"10267:22:8"}]},{"eventCall":{"arguments":[{"id":1562,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"10324:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10341:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10333:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:8","typeDescriptions":{}}},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10333:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1567,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"10345:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1561,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"10315:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10315:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1569,"nodeType":"EmitStatement","src":"10310:42:8"},{"expression":{"arguments":[{"id":1571,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"10383:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10392:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1572,"name":"address","nodeType":"ElementaryTypeName","src":"10392:7:8","typeDescriptions":{}}},"id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10392:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1576,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"10404:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1570,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"10363:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10363:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1578,"nodeType":"ExpressionStatement","src":"10363:48:8"}]},"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"9445:309:8","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1580,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9768:5:8","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"account","nameLocation":"9782:7:8","nodeType":"VariableDeclaration","scope":1580,"src":"9774:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"9774:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"amount","nameLocation":"9799:6:8","nodeType":"VariableDeclaration","scope":1580,"src":"9791:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"9791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9773:33:8"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[],"src":"9824:0:8"},"scope":1696,"src":"9759:659:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1624,"nodeType":"Block","src":"10954:257:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"10972:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10989:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10981:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"10981:7:8","typeDescriptions":{}}},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10981:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10972:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10993:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10964:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10964:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1599,"nodeType":"ExpressionStatement","src":"10964:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1601,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"11050:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11069:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11061:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1602,"name":"address","nodeType":"ElementaryTypeName","src":"11061:7:8","typeDescriptions":{}}},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11061:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11050:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11073:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11042:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"ExpressionStatement","src":"11042:68:8"},{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1610,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"11121:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1613,"indexExpression":{"id":1611,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"11133:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11121:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1614,"indexExpression":{"id":1612,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"11140:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11121:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1615,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"11151:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11121:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1617,"nodeType":"ExpressionStatement","src":"11121:36:8"},{"eventCall":{"arguments":[{"id":1619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"11181:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"11188:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1621,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"11197:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1618,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"11172:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11172:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"EmitStatement","src":"11167:37:8"}]},"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"10424:412:8","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1625,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10850:8:8","nodeType":"FunctionDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"owner","nameLocation":"10876:5:8","nodeType":"VariableDeclaration","scope":1625,"src":"10868:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"10868:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"spender","nameLocation":"10899:7:8","nodeType":"VariableDeclaration","scope":1625,"src":"10891:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"10891:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"amount","nameLocation":"10924:6:8","nodeType":"VariableDeclaration","scope":1625,"src":"10916:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"10916:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10858:78:8"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[],"src":"10954:0:8"},"scope":1696,"src":"10841:370:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1667,"nodeType":"Block","src":"11612:321:8","statements":[{"assignments":[1636],"declarations":[{"constant":false,"id":1636,"mutability":"mutable","name":"currentAllowance","nameLocation":"11630:16:8","nodeType":"VariableDeclaration","scope":1667,"src":"11622:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"11622:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1641,"initialValue":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"11659:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"11666:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1637,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"11649:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11649:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11622:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1642,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"11688:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11713:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"11713:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1643,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11708:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11708:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11708:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11688:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1666,"nodeType":"IfStatement","src":"11684:243:8","trueBody":{"id":1665,"nodeType":"Block","src":"11727:200:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"11749:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1651,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11769:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11749:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11777:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11741:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11741:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"ExpressionStatement","src":"11741:68:8"},{"id":1664,"nodeType":"UncheckedBlock","src":"11823:94:8","statements":[{"expression":{"arguments":[{"id":1657,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"11860:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"11867:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1659,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"11876:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1660,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11895:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11876:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1656,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"11851:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1663,"nodeType":"ExpressionStatement","src":"11851:51:8"}]}]}}]},"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"11217:270:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11501:15:8","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"owner","nameLocation":"11534:5:8","nodeType":"VariableDeclaration","scope":1668,"src":"11526:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"11526:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"spender","nameLocation":"11557:7:8","nodeType":"VariableDeclaration","scope":1668,"src":"11549:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"11549:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"amount","nameLocation":"11582:6:8","nodeType":"VariableDeclaration","scope":1668,"src":"11574:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"11574:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11516:78:8"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[],"src":"11612:0:8"},"scope":1696,"src":"11492:441:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1678,"nodeType":"Block","src":"12636:2:8","statements":[]},"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"11939:573:8","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1679,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12526:20:8","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"from","nameLocation":"12564:4:8","nodeType":"VariableDeclaration","scope":1679,"src":"12556:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"12556:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"to","nameLocation":"12586:2:8","nodeType":"VariableDeclaration","scope":1679,"src":"12578:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"12578:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"amount","nameLocation":"12606:6:8","nodeType":"VariableDeclaration","scope":1679,"src":"12598:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"12598:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12546:72:8"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"12636:0:8"},"scope":1696,"src":"12517:121:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1689,"nodeType":"Block","src":"13344:2:8","statements":[]},"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"12644:577:8","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1690,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13235:19:8","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"from","nameLocation":"13272:4:8","nodeType":"VariableDeclaration","scope":1690,"src":"13264:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1681,"name":"address","nodeType":"ElementaryTypeName","src":"13264:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"to","nameLocation":"13294:2:8","nodeType":"VariableDeclaration","scope":1690,"src":"13286:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"13286:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"amount","nameLocation":"13314:6:8","nodeType":"VariableDeclaration","scope":1690,"src":"13306:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"13306:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13254:72:8"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[],"src":"13344:0:8"},"scope":1696,"src":"13226:120:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"13352:254:8","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1695,"mutability":"mutable","name":"__gap","nameLocation":"13631:5:8","nodeType":"VariableDeclaration","scope":1696,"src":"13611:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"13611:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1694,"length":{"hexValue":"3435","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13619:2:8","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13611:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":1697,"src":"1480:12159:8","usedErrors":[]}],"src":"105:13535:8"},"id":8},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[1774]},"id":1775,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1698,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"131:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1774,"linearizedBaseContracts":[1774],"name":"IERC20Upgradeable","nameLocation":"212:17:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"236:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1708,"name":"Transfer","nameLocation":"405:8:9","nodeType":"EventDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:9","nodeType":"VariableDeclaration","scope":1708,"src":"414:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:9","nodeType":"VariableDeclaration","scope":1708,"src":"436:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1706,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:9","nodeType":"VariableDeclaration","scope":1708,"src":"456:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:9"},"src":"399:72:9"},{"anonymous":false,"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"477:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1717,"name":"Approval","nameLocation":"636:8:9","nodeType":"EventDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:9","nodeType":"VariableDeclaration","scope":1717,"src":"645:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1713,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:9","nodeType":"VariableDeclaration","scope":1717,"src":"668:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1715,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:9","nodeType":"VariableDeclaration","scope":1717,"src":"693:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:9"},"src":"630:78:9"},{"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"714:66:9","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1723,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:9","nodeType":"FunctionDefinition","parameters":{"id":1719,"nodeType":"ParameterList","parameters":[],"src":"805:2:9"},"returnParameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1723,"src":"831:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:9"},"scope":1774,"src":"785:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"846:72:9","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1731,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:9","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"account","nameLocation":"950:7:9","nodeType":"VariableDeclaration","scope":1731,"src":"942:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:9"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1731,"src":"982:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:9"},"scope":1774,"src":"923:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"997:202:9","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1741,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:9","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"to","nameLocation":"1230:2:9","nodeType":"VariableDeclaration","scope":1741,"src":"1222:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"amount","nameLocation":"1242:6:9","nodeType":"VariableDeclaration","scope":1741,"src":"1234:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:9"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"1268:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1738,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:9"},"scope":1774,"src":"1204:70:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"1280:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1751,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:9","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"owner","nameLocation":"1576:5:9","nodeType":"VariableDeclaration","scope":1751,"src":"1568:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"spender","nameLocation":"1591:7:9","nodeType":"VariableDeclaration","scope":1751,"src":"1583:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:9"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"1623:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:9"},"scope":1774,"src":"1549:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"1638:642:9","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1761,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:9","nodeType":"FunctionDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"spender","nameLocation":"2310:7:9","nodeType":"VariableDeclaration","scope":1761,"src":"2302:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1753,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"amount","nameLocation":"2327:6:9","nodeType":"VariableDeclaration","scope":1761,"src":"2319:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:9"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1761,"src":"2353:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1758,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:9"},"scope":1774,"src":"2285:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"2365:287:9","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1773,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:9","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"from","nameLocation":"2696:4:9","nodeType":"VariableDeclaration","scope":1773,"src":"2688:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"to","nameLocation":"2718:2:9","nodeType":"VariableDeclaration","scope":1773,"src":"2710:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"amount","nameLocation":"2738:6:9","nodeType":"VariableDeclaration","scope":1773,"src":"2730:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:72:9"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"2769:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1770,"name":"bool","nodeType":"ElementaryTypeName","src":"2769:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2768:6:9"},"scope":1774,"src":"2657:118:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1775,"src":"202:2575:9","usedErrors":[]}],"src":"106:2672:9"},"id":9},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"ERC20BurnableUpgradeable":[1838],"ERC20Upgradeable":[1696],"IERC20MetadataUpgradeable":[2716],"IERC20Upgradeable":[1774],"Initializable":[957]},"id":1839,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1776,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1839,"sourceUnit":1697,"src":"149:33:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":1778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1839,"sourceUnit":3566,"src":"183:47:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1839,"sourceUnit":958,"src":"231:48:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1781,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"536:13:10"},"id":1782,"nodeType":"InheritanceSpecifier","src":"536:13:10"},{"baseName":{"id":1783,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3565,"src":"551:18:10"},"id":1784,"nodeType":"InheritanceSpecifier","src":"551:18:10"},{"baseName":{"id":1785,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"571:16:10"},"id":1786,"nodeType":"InheritanceSpecifier","src":"571:16:10"}],"canonicalName":"ERC20BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"281:208:10","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1838,"linearizedBaseContracts":[1838,1696,2716,1774,3565,957],"name":"ERC20BurnableUpgradeable","nameLocation":"508:24:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1791,"nodeType":"Block","src":"652:7:10","statements":[]},"id":1792,"implemented":true,"kind":"function","modifiers":[{"id":1789,"kind":"modifierInvocation","modifierName":{"id":1788,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"635:16:10"},"nodeType":"ModifierInvocation","src":"635:16:10"}],"name":"__ERC20Burnable_init","nameLocation":"603:20:10","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[],"src":"623:2:10"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[],"src":"652:0:10"},"scope":1838,"src":"594:65:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1797,"nodeType":"Block","src":"733:7:10","statements":[]},"id":1798,"implemented":true,"kind":"function","modifiers":[{"id":1795,"kind":"modifierInvocation","modifierName":{"id":1794,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"716:16:10"},"nodeType":"ModifierInvocation","src":"716:16:10"}],"name":"__ERC20Burnable_init_unchained","nameLocation":"674:30:10","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[],"src":"704:2:10"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[],"src":"733:0:10"},"scope":1838,"src":"665:75:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1810,"nodeType":"Block","src":"893:44:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1805,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"909:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"909:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1807,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"923:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1804,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"903:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"ExpressionStatement","src":"903:27:10"}]},"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"745:98:10","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"857:4:10","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"amount","nameLocation":"870:6:10","nodeType":"VariableDeclaration","scope":1811,"src":"862:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"861:16:10"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[],"src":"893:0:10"},"scope":1838,"src":"848:89:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1831,"nodeType":"Block","src":"1309:95:10","statements":[{"expression":{"arguments":[{"id":1820,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1335:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1821,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"1344:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1344:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1823,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"1358:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1819,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1319:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1319:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1825,"nodeType":"ExpressionStatement","src":"1319:46:10"},{"expression":{"arguments":[{"id":1827,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1381:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1828,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"1390:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1826,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"1375:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1375:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"1375:22:10"}]},"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"943:295:10","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1832,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1252:8:10","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"account","nameLocation":"1269:7:10","nodeType":"VariableDeclaration","scope":1832,"src":"1261:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"amount","nameLocation":"1286:6:10","nodeType":"VariableDeclaration","scope":1832,"src":"1278:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1260:33:10"},"returnParameters":{"id":1818,"nodeType":"ParameterList","parameters":[],"src":"1309:0:10"},"scope":1838,"src":"1243:161:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"1410:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1837,"mutability":"mutable","name":"__gap","nameLocation":"1689:5:10","nodeType":"VariableDeclaration","scope":1838,"src":"1669:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1669:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1836,"length":{"hexValue":"3530","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:2:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1669:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1839,"src":"490:1207:10","usedErrors":[]}],"src":"124:1574:10"},"id":10},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"ERC20PausableUpgradeable":[1898],"ERC20Upgradeable":[1696],"IERC20MetadataUpgradeable":[2716],"IERC20Upgradeable":[1774],"Initializable":[957],"PausableUpgradeable":[1084]},"id":1899,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1840,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1899,"sourceUnit":1697,"src":"134:33:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"../../../security/PausableUpgradeable.sol","id":1842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1899,"sourceUnit":1085,"src":"168:51:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1899,"sourceUnit":958,"src":"220:48:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1845,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"586:13:11"},"id":1846,"nodeType":"InheritanceSpecifier","src":"586:13:11"},{"baseName":{"id":1847,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"601:16:11"},"id":1848,"nodeType":"InheritanceSpecifier","src":"601:16:11"},{"baseName":{"id":1849,"name":"PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1084,"src":"619:19:11"},"id":1850,"nodeType":"InheritanceSpecifier","src":"619:19:11"}],"canonicalName":"ERC20PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"270:269:11","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug."},"fullyImplemented":true,"id":1898,"linearizedBaseContracts":[1898,1084,1696,2716,1774,3565,957],"name":"ERC20PausableUpgradeable","nameLocation":"558:24:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1858,"nodeType":"Block","src":"703:44:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1855,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"713:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"713:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1857,"nodeType":"ExpressionStatement","src":"713:27:11"}]},"id":1859,"implemented":true,"kind":"function","modifiers":[{"id":1853,"kind":"modifierInvocation","modifierName":{"id":1852,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"686:16:11"},"nodeType":"ModifierInvocation","src":"686:16:11"}],"name":"__ERC20Pausable_init","nameLocation":"654:20:11","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"674:2:11"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"703:0:11"},"scope":1898,"src":"645:102:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1864,"nodeType":"Block","src":"821:7:11","statements":[]},"id":1865,"implemented":true,"kind":"function","modifiers":[{"id":1862,"kind":"modifierInvocation","modifierName":{"id":1861,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"804:16:11"},"nodeType":"ModifierInvocation","src":"804:16:11"}],"name":"__ERC20Pausable_init_unchained","nameLocation":"762:30:11","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"792:2:11"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[],"src":"821:0:11"},"scope":1898,"src":"753:75:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1679],"body":{"id":1891,"nodeType":"Block","src":"1100:136:11","statements":[{"expression":{"arguments":[{"id":1879,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"1137:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1143:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1881,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1147:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1876,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1110:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PausableUpgradeable_$1898_$","typeString":"type(contract super ERC20PausableUpgradeable)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1679,"src":"1110:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1110:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1883,"nodeType":"ExpressionStatement","src":"1110:44:11"},{"expression":{"arguments":[{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1173:9:11","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1885,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1174:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1174:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1184:44:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""},"value":"ERC20Pausable: token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""}],"id":1884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1165:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1165:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"ExpressionStatement","src":"1165:64:11"}]},"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"833:134:11","text":" @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."},"id":1892,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"981:20:11","nodeType":"FunctionDefinition","overrides":{"id":1874,"nodeType":"OverrideSpecifier","overrides":[],"src":"1091:8:11"},"parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"from","nameLocation":"1019:4:11","nodeType":"VariableDeclaration","scope":1892,"src":"1011:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"to","nameLocation":"1041:2:11","nodeType":"VariableDeclaration","scope":1892,"src":"1033:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"amount","nameLocation":"1061:6:11","nodeType":"VariableDeclaration","scope":1892,"src":"1053:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1053:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:72:11"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[],"src":"1100:0:11"},"scope":1898,"src":"972:264:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"1242:254:11","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1897,"mutability":"mutable","name":"__gap","nameLocation":"1521:5:11","nodeType":"VariableDeclaration","scope":1898,"src":"1501:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1896,"length":{"hexValue":"3530","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1509:2:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1501:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1899,"src":"540:989:11","usedErrors":[]}],"src":"109:1421:11"},"id":11},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"CountersUpgradeable":[3639],"ECDSAUpgradeable":[4175],"EIP712Upgradeable":[4325],"ERC20PermitUpgradeable":[2907],"ERC20Upgradeable":[1696],"ERC20VotesCompUpgradeable":[1974],"ERC20VotesUpgradeable":[2691],"IERC20MetadataUpgradeable":[2716],"IERC20PermitUpgradeable":[2943],"IERC20Upgradeable":[1774],"IVotesUpgradeable":[788],"Initializable":[957],"MathUpgradeable":[5246],"SafeCastUpgradeable":[6787],"StringsUpgradeable":[3814]},"id":1975,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1900,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"125:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","file":"./ERC20VotesUpgradeable.sol","id":1901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1975,"sourceUnit":2692,"src":"150:37:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1975,"sourceUnit":958,"src":"188:48:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1904,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"1349:13:12"},"id":1905,"nodeType":"InheritanceSpecifier","src":"1349:13:12"},{"baseName":{"id":1906,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2691,"src":"1364:21:12"},"id":1907,"nodeType":"InheritanceSpecifier","src":"1364:21:12"}],"canonicalName":"ERC20VotesCompUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"238:1063:12","text":" @dev Extension of ERC20 to support Compound's voting and delegation. This version exactly matches Compound's\n interface, with the drawback of only supporting supply up to (2^96^ - 1).\n NOTE: You should use this contract if you need exact compatibility with COMP (for example in order to use your token\n with Governor Alpha or Bravo) and if you are sure the supply cap of 2^96^ is enough for you. Otherwise, use the\n {ERC20Votes} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getCurrentVotes} and {getPriorVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":true,"id":1974,"linearizedBaseContracts":[1974,2691,2907,4325,2943,1696,2716,1774,3565,788,957],"name":"ERC20VotesCompUpgradeable","nameLocation":"1320:25:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1912,"nodeType":"Block","src":"1451:7:12","statements":[]},"id":1913,"implemented":true,"kind":"function","modifiers":[{"id":1910,"kind":"modifierInvocation","modifierName":{"id":1909,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1434:16:12"},"nodeType":"ModifierInvocation","src":"1434:16:12"}],"name":"__ERC20VotesComp_init","nameLocation":"1401:21:12","nodeType":"FunctionDefinition","parameters":{"id":1908,"nodeType":"ParameterList","parameters":[],"src":"1422:2:12"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[],"src":"1451:0:12"},"scope":1974,"src":"1392:66:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1918,"nodeType":"Block","src":"1533:7:12","statements":[]},"id":1919,"implemented":true,"kind":"function","modifiers":[{"id":1916,"kind":"modifierInvocation","modifierName":{"id":1915,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1516:16:12"},"nodeType":"ModifierInvocation","src":"1516:16:12"}],"name":"__ERC20VotesComp_init_unchained","nameLocation":"1473:31:12","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[],"src":"1504:2:12"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[],"src":"1533:0:12"},"scope":1974,"src":"1464:76:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1934,"nodeType":"Block","src":"1722:71:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1930,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"1777:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1929,"name":"getVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"1768:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1768:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1927,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"1739:19:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6787_$","typeString":"type(library SafeCastUpgradeable)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint96","nodeType":"MemberAccess","referencedDeclaration":5749,"src":"1739:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint96_$","typeString":"function (uint256) pure returns (uint96)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1739:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1926,"id":1933,"nodeType":"Return","src":"1732:54:12"}]},"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"1545:91:12","text":" @dev Comp version of the {getVotes} accessor, with `uint96` return type."},"functionSelector":"b4b5ea57","id":1935,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentVotes","nameLocation":"1650:15:12","nodeType":"FunctionDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"account","nameLocation":"1674:7:12","nodeType":"VariableDeclaration","scope":1935,"src":"1666:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"1666:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1665:17:12"},"returnParameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"1714:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1924,"name":"uint96","nodeType":"ElementaryTypeName","src":"1714:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1713:8:12"},"scope":1974,"src":"1641:152:12","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1953,"nodeType":"Block","src":"1999:88:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1948,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2058:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1949,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"2067:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1947,"name":"getPastVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2045:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2045:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1945,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"2016:19:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6787_$","typeString":"type(library SafeCastUpgradeable)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint96","nodeType":"MemberAccess","referencedDeclaration":5749,"src":"2016:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint96_$","typeString":"function (uint256) pure returns (uint96)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2016:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1944,"id":1952,"nodeType":"Return","src":"2009:71:12"}]},"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"1799:95:12","text":" @dev Comp version of the {getPastVotes} accessor, with `uint96` return type."},"functionSelector":"782d6fe1","id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"getPriorVotes","nameLocation":"1908:13:12","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"account","nameLocation":"1930:7:12","nodeType":"VariableDeclaration","scope":1954,"src":"1922:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"1922:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"blockNumber","nameLocation":"1947:11:12","nodeType":"VariableDeclaration","scope":1954,"src":"1939:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1921:38:12"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1954,"src":"1991:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1942,"name":"uint96","nodeType":"ElementaryTypeName","src":"1991:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1990:8:12"},"scope":1974,"src":"1899:188:12","stateMutability":"view","virtual":true,"visibility":"external"},{"baseFunctions":[2348],"body":{"id":1967,"nodeType":"Block","src":"2279:40:12","statements":[{"expression":{"expression":{"arguments":[{"id":1963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2301:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1962,"name":"uint96","nodeType":"ElementaryTypeName","src":"2301:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":1961,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2296:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2296:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2296:16:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1960,"id":1966,"nodeType":"Return","src":"2289:23:12"}]},"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"2093:110:12","text":" @dev Maximum token supply. Reduced to `type(uint96).max` (2^96^ - 1) to fit COMP interface."},"id":1968,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2217:10:12","nodeType":"FunctionDefinition","overrides":{"id":1957,"nodeType":"OverrideSpecifier","overrides":[],"src":"2252:8:12"},"parameters":{"id":1956,"nodeType":"ParameterList","parameters":[],"src":"2227:2:12"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1968,"src":"2270:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1958,"name":"uint224","nodeType":"ElementaryTypeName","src":"2270:7:12","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2269:9:12"},"scope":1974,"src":"2208:111:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1969,"nodeType":"StructuredDocumentation","src":"2325:254:12","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1973,"mutability":"mutable","name":"__gap","nameLocation":"2604:5:12","nodeType":"VariableDeclaration","scope":1974,"src":"2584:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"length":{"hexValue":"3530","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2592:2:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"2584:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1975,"src":"1302:1310:12","usedErrors":[]}],"src":"125:2488:12"},"id":12},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"CountersUpgradeable":[3639],"ECDSAUpgradeable":[4175],"EIP712Upgradeable":[4325],"ERC20PermitUpgradeable":[2907],"ERC20Upgradeable":[1696],"ERC20VotesUpgradeable":[2691],"IERC20MetadataUpgradeable":[2716],"IERC20PermitUpgradeable":[2943],"IERC20Upgradeable":[1774],"IVotesUpgradeable":[788],"Initializable":[957],"MathUpgradeable":[5246],"SafeCastUpgradeable":[6787],"StringsUpgradeable":[3814]},"id":2692,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1976,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:13"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","file":"./draft-ERC20PermitUpgradeable.sol","id":1977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2692,"sourceUnit":2908,"src":"146:44:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"../../../utils/math/MathUpgradeable.sol","id":1978,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2692,"sourceUnit":5247,"src":"191:49:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","file":"../../../governance/utils/IVotesUpgradeable.sol","id":1979,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2692,"sourceUnit":789,"src":"241:57:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol","file":"../../../utils/math/SafeCastUpgradeable.sol","id":1980,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2692,"sourceUnit":6788,"src":"299:53:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"../../../utils/cryptography/ECDSAUpgradeable.sol","id":1981,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2692,"sourceUnit":4176,"src":"353:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1982,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2692,"sourceUnit":958,"src":"412:48:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1984,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"1400:13:13"},"id":1985,"nodeType":"InheritanceSpecifier","src":"1400:13:13"},{"baseName":{"id":1986,"name":"IVotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":788,"src":"1415:17:13"},"id":1987,"nodeType":"InheritanceSpecifier","src":"1415:17:13"},{"baseName":{"id":1988,"name":"ERC20PermitUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2907,"src":"1434:22:13"},"id":1989,"nodeType":"InheritanceSpecifier","src":"1434:22:13"}],"canonicalName":"ERC20VotesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"462:894:13","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":true,"id":2691,"linearizedBaseContracts":[2691,2907,4325,2943,1696,2716,1774,3565,788,957],"name":"ERC20VotesUpgradeable","nameLocation":"1375:21:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1994,"nodeType":"Block","src":"1518:7:13","statements":[]},"id":1995,"implemented":true,"kind":"function","modifiers":[{"id":1992,"kind":"modifierInvocation","modifierName":{"id":1991,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1501:16:13"},"nodeType":"ModifierInvocation","src":"1501:16:13"}],"name":"__ERC20Votes_init","nameLocation":"1472:17:13","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[],"src":"1489:2:13"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[],"src":"1518:0:13"},"scope":2691,"src":"1463:62:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2000,"nodeType":"Block","src":"1596:7:13","statements":[]},"id":2001,"implemented":true,"kind":"function","modifiers":[{"id":1998,"kind":"modifierInvocation","modifierName":{"id":1997,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1579:16:13"},"nodeType":"ModifierInvocation","src":"1579:16:13"}],"name":"__ERC20Votes_init_unchained","nameLocation":"1540:27:13","nodeType":"FunctionDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[],"src":"1567:2:13"},"returnParameters":{"id":1999,"nodeType":"ParameterList","parameters":[],"src":"1596:0:13"},"scope":2691,"src":"1531:72:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"ERC20VotesUpgradeable.Checkpoint","id":2006,"members":[{"constant":false,"id":2003,"mutability":"mutable","name":"fromBlock","nameLocation":"1643:9:13","nodeType":"VariableDeclaration","scope":2006,"src":"1636:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2002,"name":"uint32","nodeType":"ElementaryTypeName","src":"1636:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"votes","nameLocation":"1670:5:13","nodeType":"VariableDeclaration","scope":2006,"src":"1662:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2004,"name":"uint224","nodeType":"ElementaryTypeName","src":"1662:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1615:10:13","nodeType":"StructDefinition","scope":2691,"src":"1608:74:13","visibility":"public"},{"constant":true,"id":2011,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1713:20:13","nodeType":"VariableDeclaration","scope":2691,"src":"1688:127:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1688:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1754:60:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":2008,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1744:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1744:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2015,"mutability":"mutable","name":"_delegates","nameLocation":"1858:10:13","nodeType":"VariableDeclaration","scope":2691,"src":"1822:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":2014,"keyType":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1822:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2021,"mutability":"mutable","name":"_checkpoints","nameLocation":"1915:12:13","nodeType":"VariableDeclaration","scope":2691,"src":"1874:53:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"},"typeName":{"id":2020,"keyType":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"1882:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1874:32:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"},"valueType":{"baseType":{"id":2018,"nodeType":"UserDefinedTypeName","pathNode":{"id":2017,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"1893:10:13"},"referencedDeclaration":2006,"src":"1893:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2019,"nodeType":"ArrayTypeName","src":"1893:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":2025,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1954:23:13","nodeType":"VariableDeclaration","scope":2691,"src":"1933:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2023,"nodeType":"UserDefinedTypeName","pathNode":{"id":2022,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"1933:10:13"},"referencedDeclaration":2006,"src":"1933:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2024,"nodeType":"ArrayTypeName","src":"1933:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"private"},{"body":{"id":2042,"nodeType":"Block","src":"2153:50:13","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2036,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"2170:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2038,"indexExpression":{"id":2037,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2183:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2170:21:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":2040,"indexExpression":{"id":2039,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"2192:3:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2170:26:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"functionReturnParameters":2035,"id":2041,"nodeType":"Return","src":"2163:33:13"}]},"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"1984:66:13","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":2043,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2064:11:13","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"account","nameLocation":"2084:7:13","nodeType":"VariableDeclaration","scope":2043,"src":"2076:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2027,"name":"address","nodeType":"ElementaryTypeName","src":"2076:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2030,"mutability":"mutable","name":"pos","nameLocation":"2100:3:13","nodeType":"VariableDeclaration","scope":2043,"src":"2093:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2029,"name":"uint32","nodeType":"ElementaryTypeName","src":"2093:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2075:29:13"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2043,"src":"2134:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":2033,"nodeType":"UserDefinedTypeName","pathNode":{"id":2032,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"2134:10:13"},"referencedDeclaration":2006,"src":"2134:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"src":"2133:19:13"},"scope":2691,"src":"2055:148:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2059,"nodeType":"Block","src":"2356:82:13","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2053,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"2402:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2055,"indexExpression":{"id":2054,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"2415:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2402:21:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2402:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2051,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"2373:19:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6787_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5949,"src":"2373:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2373:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2050,"id":2058,"nodeType":"Return","src":"2366:65:13"}]},"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"2209:64:13","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2287:14:13","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"account","nameLocation":"2310:7:13","nodeType":"VariableDeclaration","scope":2060,"src":"2302:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2301:17:13"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"2348:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2048,"name":"uint32","nodeType":"ElementaryTypeName","src":"2348:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2347:8:13"},"scope":2691,"src":"2278:160:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[765],"body":{"id":2073,"nodeType":"Block","src":"2609:43:13","statements":[{"expression":{"baseExpression":{"id":2069,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"2626:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2071,"indexExpression":{"id":2070,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2637:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2626:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2068,"id":2072,"nodeType":"Return","src":"2619:26:13"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"2444:77:13","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":2074,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2535:9:13","nodeType":"FunctionDefinition","overrides":{"id":2065,"nodeType":"OverrideSpecifier","overrides":[],"src":"2582:8:13"},"parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"account","nameLocation":"2553:7:13","nodeType":"VariableDeclaration","scope":2074,"src":"2545:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2062,"name":"address","nodeType":"ElementaryTypeName","src":"2545:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2544:17:13"},"returnParameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2074,"src":"2600:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"2600:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2599:9:13"},"scope":2691,"src":"2526:126:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[739],"body":{"id":2104,"nodeType":"Block","src":"2813:127:13","statements":[{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"pos","nameLocation":"2831:3:13","nodeType":"VariableDeclaration","scope":2104,"src":"2823:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2823:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2089,"initialValue":{"expression":{"baseExpression":{"id":2085,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"2837:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2087,"indexExpression":{"id":2086,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"2850:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2837:21:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2837:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2823:42:13"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2090,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2882:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2889:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2882:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":2094,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"2897:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2096,"indexExpression":{"id":2095,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"2910:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:21:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":2100,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2919:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2925:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2919:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:30:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"id":2101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":2005,"src":"2897:36:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2882:51:13","trueExpression":{"hexValue":"30","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2893:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2082,"id":2103,"nodeType":"Return","src":"2875:58:13"}]},"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"2658:68:13","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"2740:8:13","nodeType":"FunctionDefinition","overrides":{"id":2079,"nodeType":"OverrideSpecifier","overrides":[],"src":"2786:8:13"},"parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"account","nameLocation":"2757:7:13","nodeType":"VariableDeclaration","scope":2105,"src":"2749:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"2749:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2748:17:13"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2105,"src":"2804:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"2804:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2803:9:13"},"scope":2691,"src":"2731:209:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[749],"body":{"id":2131,"nodeType":"Block","src":"3240:158:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2117,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"3258:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2118,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3272:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3272:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3258:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3286:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":2116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3250:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2123,"nodeType":"ExpressionStatement","src":"3250:70:13"},{"expression":{"arguments":[{"baseExpression":{"id":2125,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3356:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2127,"indexExpression":{"id":2126,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"3369:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3356:21:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2128,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"3379:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3337:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3337:54:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2115,"id":2130,"nodeType":"Return","src":"3330:61:13"}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"2946:182:13","text":" @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"3a46b1a8","id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3142:12:13","nodeType":"FunctionDefinition","overrides":{"id":2112,"nodeType":"OverrideSpecifier","overrides":[],"src":"3213:8:13"},"parameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"account","nameLocation":"3163:7:13","nodeType":"VariableDeclaration","scope":2132,"src":"3155:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"3155:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2110,"mutability":"mutable","name":"blockNumber","nameLocation":"3180:11:13","nodeType":"VariableDeclaration","scope":2132,"src":"3172:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3172:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3154:38:13"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2132,"src":"3231:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3231:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3230:9:13"},"scope":2691,"src":"3133:265:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[757],"body":{"id":2154,"nodeType":"Block","src":"3773:160:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2142,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"3791:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2143,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3805:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3805:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3791:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3819:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":2141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3783:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3783:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2148,"nodeType":"ExpressionStatement","src":"3783:70:13"},{"expression":{"arguments":[{"id":2150,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"3889:23:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2151,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"3914:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3870:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3870:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2140,"id":2153,"nodeType":"Return","src":"3863:63:13"}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"3404:268:13","text":" @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n It is but NOT the sum of all the delegated votes!\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"8e539e8c","id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3686:18:13","nodeType":"FunctionDefinition","overrides":{"id":2137,"nodeType":"OverrideSpecifier","overrides":[],"src":"3746:8:13"},"parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"blockNumber","nameLocation":"3713:11:13","nodeType":"VariableDeclaration","scope":2155,"src":"3705:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"3705:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3704:21:13"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2155,"src":"3764:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3764:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3763:9:13"},"scope":2691,"src":"3677:256:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2260,"nodeType":"Block","src":"4125:1772:13","statements":[{"assignments":[2168],"declarations":[{"constant":false,"id":2168,"mutability":"mutable","name":"length","nameLocation":"5212:6:13","nodeType":"VariableDeclaration","scope":2260,"src":"5204:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"5204:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2171,"initialValue":{"expression":{"id":2169,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"5221:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5221:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5204:29:13"},{"assignments":[2173],"declarations":[{"constant":false,"id":2173,"mutability":"mutable","name":"low","nameLocation":"5252:3:13","nodeType":"VariableDeclaration","scope":2260,"src":"5244:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5244:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2175,"initialValue":{"hexValue":"30","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5244:15:13"},{"assignments":[2177],"declarations":[{"constant":false,"id":2177,"mutability":"mutable","name":"high","nameLocation":"5277:4:13","nodeType":"VariableDeclaration","scope":2260,"src":"5269:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"5269:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2179,"initialValue":{"id":2178,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"5284:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5269:21:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2180,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"5305:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5314:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5305:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2213,"nodeType":"IfStatement","src":"5301:255:13","trueBody":{"id":2212,"nodeType":"Block","src":"5317:239:13","statements":[{"assignments":[2184],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"mid","nameLocation":"5339:3:13","nodeType":"VariableDeclaration","scope":2212,"src":"5331:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"5331:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2191,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"5345:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2188,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"5375:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2186,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"5354:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$5246_$","typeString":"type(library MathUpgradeable)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4750,"src":"5354:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5345:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5331:51:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2193,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"5414:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"id":2194,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5421:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2192,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5400:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2006_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":2003,"src":"5400:35:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2197,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"5438:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5400:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2210,"nodeType":"Block","src":"5500:46:13","statements":[{"expression":{"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2204,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"5518:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2205,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5524:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5530:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5524:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5518:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2209,"nodeType":"ExpressionStatement","src":"5518:13:13"}]},"id":2211,"nodeType":"IfStatement","src":"5396:150:13","trueBody":{"id":2203,"nodeType":"Block","src":"5451:43:13","statements":[{"expression":{"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2199,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"5469:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2200,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5476:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5469:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2202,"nodeType":"ExpressionStatement","src":"5469:10:13"}]}}]}},{"body":{"id":2245,"nodeType":"Block","src":"5585:236:13","statements":[{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"mid","nameLocation":"5607:3:13","nodeType":"VariableDeclaration","scope":2245,"src":"5599:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"5599:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2224,"initialValue":{"arguments":[{"id":2221,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"5637:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2222,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"5642:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2219,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"5613:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$5246_$","typeString":"type(library MathUpgradeable)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4447,"src":"5613:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5613:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5599:48:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2226,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"5679:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"id":2227,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"5686:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2225,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5665:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2006_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5665:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":2003,"src":"5665:35:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2230,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"5703:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5665:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2243,"nodeType":"Block","src":"5765:46:13","statements":[{"expression":{"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2237,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"5783:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2238,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"5789:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5795:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5789:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5783:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2242,"nodeType":"ExpressionStatement","src":"5783:13:13"}]},"id":2244,"nodeType":"IfStatement","src":"5661:150:13","trueBody":{"id":2236,"nodeType":"Block","src":"5716:43:13","statements":[{"expression":{"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2232,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"5734:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2233,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"5741:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5734:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2235,"nodeType":"ExpressionStatement","src":"5734:10:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"5573:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2215,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"5579:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5573:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2246,"nodeType":"WhileStatement","src":"5566:255:13"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"5838:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5846:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5838:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":2252,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"5868:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"5875:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5882:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5875:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2251,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5854:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2006_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5854:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":2005,"src":"5854:36:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5838:52:13","trueExpression":{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5850:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2166,"id":2259,"nodeType":"Return","src":"5831:59:13"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"3939:73:13","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":2261,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4026:18:13","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"ckpts","nameLocation":"4066:5:13","nodeType":"VariableDeclaration","scope":2261,"src":"4045:26:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2158,"nodeType":"UserDefinedTypeName","pathNode":{"id":2157,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"4045:10:13"},"referencedDeclaration":2006,"src":"4045:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2159,"nodeType":"ArrayTypeName","src":"4045:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"blockNumber","nameLocation":"4081:11:13","nodeType":"VariableDeclaration","scope":2261,"src":"4073:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4073:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4044:49:13"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2261,"src":"4116:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:13"},"scope":2691,"src":"4017:1880:13","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[771],"body":{"id":2274,"nodeType":"Block","src":"6039:51:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2269,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"6059:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6059:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2271,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6073:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2268,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"6049:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6049:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"ExpressionStatement","src":"6049:34:13"}]},"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"5903:70:13","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":2275,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5987:8:13","nodeType":"FunctionDefinition","overrides":{"id":2266,"nodeType":"OverrideSpecifier","overrides":[],"src":"6030:8:13"},"parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"delegatee","nameLocation":"6004:9:13","nodeType":"VariableDeclaration","scope":2275,"src":"5996:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"5996:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5995:19:13"},"returnParameters":{"id":2267,"nodeType":"ParameterList","parameters":[],"src":"6039:0:13"},"scope":2691,"src":"5978:112:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[787],"body":{"id":2334,"nodeType":"Block","src":"6349:403:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2293,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6367:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6367:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2295,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"6386:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6367:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6394:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":2292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6359:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6359:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2299,"nodeType":"ExpressionStatement","src":"6359:67:13"},{"assignments":[2301],"declarations":[{"constant":false,"id":2301,"mutability":"mutable","name":"signer","nameLocation":"6444:6:13","nodeType":"VariableDeclaration","scope":2334,"src":"6436:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2300,"name":"address","nodeType":"ElementaryTypeName","src":"6436:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2319,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":2308,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"6529:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2309,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"6551:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2310,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"6562:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2311,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"6569:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2306,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6518:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6518:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6518:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2305,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6508:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6508:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2304,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"6491:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6491:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2315,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"6592:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2316,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"6607:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2317,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"6622:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2302,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"6453:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$4175_$","typeString":"type(library ECDSAUpgradeable)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4115,"src":"6453:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6453:180:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6436:197:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2321,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"6651:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2323,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"6670:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2322,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"6660:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6660:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6651:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6679:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":2320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6643:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6643:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"ExpressionStatement","src":"6643:64:13"},{"expression":{"arguments":[{"id":2330,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"6727:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2331,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"6735:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2329,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"6717:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6717:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2333,"nodeType":"ExpressionStatement","src":"6717:28:13"}]},"documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"6096:66:13","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6176:13:13","nodeType":"FunctionDefinition","overrides":{"id":2290,"nodeType":"OverrideSpecifier","overrides":[],"src":"6340:8:13"},"parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"delegatee","nameLocation":"6207:9:13","nodeType":"VariableDeclaration","scope":2335,"src":"6199:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"6199:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"nonce","nameLocation":"6234:5:13","nodeType":"VariableDeclaration","scope":2335,"src":"6226:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"6226:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"expiry","nameLocation":"6257:6:13","nodeType":"VariableDeclaration","scope":2335,"src":"6249:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"6249:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"v","nameLocation":"6279:1:13","nodeType":"VariableDeclaration","scope":2335,"src":"6273:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2283,"name":"uint8","nodeType":"ElementaryTypeName","src":"6273:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"r","nameLocation":"6298:1:13","nodeType":"VariableDeclaration","scope":2335,"src":"6290:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6290:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"s","nameLocation":"6317:1:13","nodeType":"VariableDeclaration","scope":2335,"src":"6309:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6309:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6189:135:13"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[],"src":"6349:0:13"},"scope":2691,"src":"6167:585:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2347,"nodeType":"Block","src":"6916:41:13","statements":[{"expression":{"expression":{"arguments":[{"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6938:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2342,"name":"uint224","nodeType":"ElementaryTypeName","src":"6938:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2341,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6933:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6933:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6933:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2340,"id":2346,"nodeType":"Return","src":"6926:24:13"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"6758:91:13","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"6863:10:13","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"6873:2:13"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2348,"src":"6907:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2338,"name":"uint224","nodeType":"ElementaryTypeName","src":"6907:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"6906:9:13"},"scope":2691,"src":"6854:103:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1508],"body":{"id":2379,"nodeType":"Block","src":"7120:211:13","statements":[{"expression":{"arguments":[{"id":2360,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"7142:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2361,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"7151:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2357,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7130:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2691_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"7130:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7130:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2363,"nodeType":"ExpressionStatement","src":"7130:28:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2365,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"7176:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7176:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2367,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7193:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7193:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"7176:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7207:50:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":2364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7168:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7168:90:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2372,"nodeType":"ExpressionStatement","src":"7168:90:13"},{"expression":{"arguments":[{"id":2374,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"7286:23:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2375,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"7311:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2376,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"7317:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2373,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"7269:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7269:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2378,"nodeType":"ExpressionStatement","src":"7269:55:13"}]},"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"6963:78:13","text":" @dev Snapshots the totalSupply after it has been increased."},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7055:5:13","nodeType":"FunctionDefinition","overrides":{"id":2355,"nodeType":"OverrideSpecifier","overrides":[],"src":"7111:8:13"},"parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"account","nameLocation":"7069:7:13","nodeType":"VariableDeclaration","scope":2380,"src":"7061:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"7061:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"amount","nameLocation":"7086:6:13","nodeType":"VariableDeclaration","scope":2380,"src":"7078:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"7078:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7060:33:13"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[],"src":"7120:0:13"},"scope":2691,"src":"7046:285:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1580],"body":{"id":2402,"nodeType":"Block","src":"7494:116:13","statements":[{"expression":{"arguments":[{"id":2392,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"7516:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2393,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7525:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2389,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7504:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2691_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1580,"src":"7504:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7504:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2395,"nodeType":"ExpressionStatement","src":"7504:28:13"},{"expression":{"arguments":[{"id":2397,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"7560:23:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2398,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"7585:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7596:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2396,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"7543:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7543:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2401,"nodeType":"ExpressionStatement","src":"7543:60:13"}]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"7337:78:13","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":2403,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7429:5:13","nodeType":"FunctionDefinition","overrides":{"id":2387,"nodeType":"OverrideSpecifier","overrides":[],"src":"7485:8:13"},"parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"account","nameLocation":"7443:7:13","nodeType":"VariableDeclaration","scope":2403,"src":"7435:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"7435:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"amount","nameLocation":"7460:6:13","nodeType":"VariableDeclaration","scope":2403,"src":"7452:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"7452:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7434:33:13"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"7494:0:13"},"scope":2691,"src":"7420:190:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1690],"body":{"id":2432,"nodeType":"Block","src":"7877:127:13","statements":[{"expression":{"arguments":[{"id":2417,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"7913:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2418,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"7919:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2419,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"7923:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2414,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7887:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2691_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1690,"src":"7887:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7887:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2421,"nodeType":"ExpressionStatement","src":"7887:43:13"},{"expression":{"arguments":[{"arguments":[{"id":2424,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"7968:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2423,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7958:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7958:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"7985:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2426,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7975:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7975:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2429,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"7990:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2422,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"7941:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7941:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2431,"nodeType":"ExpressionStatement","src":"7941:56:13"}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"7616:129:13","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2433,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"7759:19:13","nodeType":"FunctionDefinition","overrides":{"id":2412,"nodeType":"OverrideSpecifier","overrides":[],"src":"7868:8:13"},"parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"from","nameLocation":"7796:4:13","nodeType":"VariableDeclaration","scope":2433,"src":"7788:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"7788:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"to","nameLocation":"7818:2:13","nodeType":"VariableDeclaration","scope":2433,"src":"7810:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"7810:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"amount","nameLocation":"7838:6:13","nodeType":"VariableDeclaration","scope":2433,"src":"7830:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"7830:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7778:72:13"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[],"src":"7877:0:13"},"scope":2691,"src":"7750:254:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2471,"nodeType":"Block","src":"8249:306:13","statements":[{"assignments":[2442],"declarations":[{"constant":false,"id":2442,"mutability":"mutable","name":"currentDelegate","nameLocation":"8267:15:13","nodeType":"VariableDeclaration","scope":2471,"src":"8259:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2441,"name":"address","nodeType":"ElementaryTypeName","src":"8259:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2446,"initialValue":{"arguments":[{"id":2444,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8295:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2443,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"8285:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8285:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8259:46:13"},{"assignments":[2448],"declarations":[{"constant":false,"id":2448,"mutability":"mutable","name":"delegatorBalance","nameLocation":"8323:16:13","nodeType":"VariableDeclaration","scope":2471,"src":"8315:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8315:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2452,"initialValue":{"arguments":[{"id":2450,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8352:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2449,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"8342:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8342:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8315:47:13"},{"expression":{"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2453,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"8372:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2455,"indexExpression":{"id":2454,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8383:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8372:21:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2456,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"8396:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8372:33:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2458,"nodeType":"ExpressionStatement","src":"8372:33:13"},{"eventCall":{"arguments":[{"id":2460,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8437:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2461,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"8448:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2462,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"8465:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2459,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"8421:15:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8421:54:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2464,"nodeType":"EmitStatement","src":"8416:59:13"},{"expression":{"arguments":[{"id":2466,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"8503:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2467,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"8520:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2468,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"8531:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2465,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"8486:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8486:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2470,"nodeType":"ExpressionStatement","src":"8486:62:13"}]},"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"8010:160:13","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":2472,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"8184:9:13","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"delegator","nameLocation":"8202:9:13","nodeType":"VariableDeclaration","scope":2472,"src":"8194:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"delegatee","nameLocation":"8221:9:13","nodeType":"VariableDeclaration","scope":2472,"src":"8213:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"8213:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8193:38:13"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[],"src":"8249:0:13"},"scope":2691,"src":"8175:380:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2542,"nodeType":"Block","src":"8667:521:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"8681:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2482,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8688:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8681:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2484,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"8695:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8704:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8695:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8681:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2541,"nodeType":"IfStatement","src":"8677:505:13","trueBody":{"id":2540,"nodeType":"Block","src":"8707:475:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"8725:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8732:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2489,"name":"address","nodeType":"ElementaryTypeName","src":"8732:7:13","typeDescriptions":{}}},"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8732:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8725:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2513,"nodeType":"IfStatement","src":"8721:221:13","trueBody":{"id":2512,"nodeType":"Block","src":"8744:198:13","statements":[{"assignments":[2495,2497],"declarations":[{"constant":false,"id":2495,"mutability":"mutable","name":"oldWeight","nameLocation":"8771:9:13","nodeType":"VariableDeclaration","scope":2512,"src":"8763:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"8763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"newWeight","nameLocation":"8790:9:13","nodeType":"VariableDeclaration","scope":2512,"src":"8782:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"8782:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2505,"initialValue":{"arguments":[{"baseExpression":{"id":2499,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"8820:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2501,"indexExpression":{"id":2500,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"8833:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8820:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2502,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"8839:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"8850:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2498,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"8803:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8803:54:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8762:95:13"},{"eventCall":{"arguments":[{"id":2507,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"8901:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2508,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"8906:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2509,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"8917:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2506,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"8880:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8880:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2511,"nodeType":"EmitStatement","src":"8875:52:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2514,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8960:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8975:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8967:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2515,"name":"address","nodeType":"ElementaryTypeName","src":"8967:7:13","typeDescriptions":{}}},"id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8967:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8960:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2539,"nodeType":"IfStatement","src":"8956:216:13","trueBody":{"id":2538,"nodeType":"Block","src":"8979:193:13","statements":[{"assignments":[2521,2523],"declarations":[{"constant":false,"id":2521,"mutability":"mutable","name":"oldWeight","nameLocation":"9006:9:13","nodeType":"VariableDeclaration","scope":2538,"src":"8998:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"8998:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"newWeight","nameLocation":"9025:9:13","nodeType":"VariableDeclaration","scope":2538,"src":"9017:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"9017:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2531,"initialValue":{"arguments":[{"baseExpression":{"id":2525,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"9055:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2527,"indexExpression":{"id":2526,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"9068:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9055:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2528,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"9074:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2529,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"9080:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2524,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"9038:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9038:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8997:90:13"},{"eventCall":{"arguments":[{"id":2533,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"9131:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2534,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"9136:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2535,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"9147:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2532,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"9110:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9110:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2537,"nodeType":"EmitStatement","src":"9105:52:13"}]}}]}}]},"id":2543,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8570:16:13","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"src","nameLocation":"8604:3:13","nodeType":"VariableDeclaration","scope":2543,"src":"8596:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2473,"name":"address","nodeType":"ElementaryTypeName","src":"8596:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"dst","nameLocation":"8625:3:13","nodeType":"VariableDeclaration","scope":2543,"src":"8617:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2475,"name":"address","nodeType":"ElementaryTypeName","src":"8617:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"amount","nameLocation":"8646:6:13","nodeType":"VariableDeclaration","scope":2543,"src":"8638:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"8638:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8586:72:13"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"8667:0:13"},"scope":2691,"src":"8561:627:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2642,"nodeType":"Block","src":"9402:541:13","statements":[{"assignments":[2567],"declarations":[{"constant":false,"id":2567,"mutability":"mutable","name":"pos","nameLocation":"9420:3:13","nodeType":"VariableDeclaration","scope":2642,"src":"9412:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"9412:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2570,"initialValue":{"expression":{"id":2568,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"9426:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9426:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9412:26:13"},{"assignments":[2573],"declarations":[{"constant":false,"id":2573,"mutability":"mutable","name":"oldCkpt","nameLocation":"9467:7:13","nodeType":"VariableDeclaration","scope":2642,"src":"9449:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":2572,"nodeType":"UserDefinedTypeName","pathNode":{"id":2571,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"9449:10:13"},"referencedDeclaration":2006,"src":"9449:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"id":2588,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2574,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"9477:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9477:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2582,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"9521:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"9528:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9534:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2581,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"9507:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2006_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9507:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9477:59:13","trueExpression":{"arguments":[{"hexValue":"30","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9499:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9502:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2577,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"9488:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$2006_storage_ptr_$","typeString":"type(struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9488:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9449:87:13"},{"expression":{"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2589,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"9547:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2590,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"9559:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"id":2591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":2005,"src":"9559:13:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9547:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2593,"nodeType":"ExpressionStatement","src":"9547:25:13"},{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2594,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"9582:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2596,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"9597:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2597,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"9608:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2595,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"9594:2:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9594:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9582:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2600,"nodeType":"ExpressionStatement","src":"9582:32:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"9629:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9635:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9629:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2604,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"9640:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"id":2605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":2003,"src":"9640:17:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2606,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9661:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9661:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9640:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9629:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2640,"nodeType":"Block","src":"9784:153:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2630,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9861:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9861:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2628,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"9832:19:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6787_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5949,"src":"9832:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9832:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":2635,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"9913:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2633,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"9883:19:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6787_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":5349,"src":"9883:29:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9883:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":2627,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"9809:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$2006_storage_ptr_$","typeString":"type(struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"9809:116:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$2006_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}],"expression":{"id":2624,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"9798:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"9798:10:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$2006_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,struct ERC20VotesUpgradeable.Checkpoint storage ref)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9798:128:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2639,"nodeType":"ExpressionStatement","src":"9798:128:13"}]},"id":2641,"nodeType":"IfStatement","src":"9625:312:13","trueBody":{"id":2623,"nodeType":"Block","src":"9675:103:13","statements":[{"expression":{"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2611,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"9703:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2612,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"9710:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9716:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9710:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2610,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"9689:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2006_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9689:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":2005,"src":"9689:35:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2619,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"9757:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2617,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"9727:19:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6787_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":5349,"src":"9727:29:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9727:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9689:78:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2622,"nodeType":"ExpressionStatement","src":"9689:78:13"}]}}]},"id":2643,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"9203:16:13","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"ckpts","nameLocation":"9250:5:13","nodeType":"VariableDeclaration","scope":2643,"src":"9229:26:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2545,"nodeType":"UserDefinedTypeName","pathNode":{"id":2544,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"9229:10:13"},"referencedDeclaration":2006,"src":"9229:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2546,"nodeType":"ArrayTypeName","src":"9229:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"op","nameLocation":"9315:2:13","nodeType":"VariableDeclaration","scope":2643,"src":"9265:52:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":2556,"nodeType":"FunctionTypeName","parameterTypes":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"9274:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9274:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"9283:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9273:18:13"},"returnParameterTypes":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"9306:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"9306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9305:9:13"},"src":"9265:52:13","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"delta","nameLocation":"9335:5:13","nodeType":"VariableDeclaration","scope":2643,"src":"9327:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"9327:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9219:127:13"},"returnParameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"oldWeight","nameLocation":"9372:9:13","nodeType":"VariableDeclaration","scope":2643,"src":"9364:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"9364:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2564,"mutability":"mutable","name":"newWeight","nameLocation":"9391:9:13","nodeType":"VariableDeclaration","scope":2643,"src":"9383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"9383:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9363:38:13"},"scope":2691,"src":"9194:749:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2656,"nodeType":"Block","src":"10016:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"10033:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"10037:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2651,"id":2655,"nodeType":"Return","src":"10026:12:13"}]},"id":2657,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9958:4:13","nodeType":"FunctionDefinition","parameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"a","nameLocation":"9971:1:13","nodeType":"VariableDeclaration","scope":2657,"src":"9963:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"9963:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"b","nameLocation":"9982:1:13","nodeType":"VariableDeclaration","scope":2657,"src":"9974:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"9974:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9962:22:13"},"returnParameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2657,"src":"10007:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"10007:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10006:9:13"},"scope":2691,"src":"9949:96:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2670,"nodeType":"Block","src":"10123:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"10140:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"10144:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10140:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2665,"id":2669,"nodeType":"Return","src":"10133:12:13"}]},"id":2671,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10060:9:13","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"a","nameLocation":"10078:1:13","nodeType":"VariableDeclaration","scope":2671,"src":"10070:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"10070:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"b","nameLocation":"10089:1:13","nodeType":"VariableDeclaration","scope":2671,"src":"10081:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"10081:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10069:22:13"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2671,"src":"10114:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"10114:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10113:9:13"},"scope":2691,"src":"10051:101:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2684,"nodeType":"Block","src":"10271:126:13","statements":[{"AST":{"nodeType":"YulBlock","src":"10290:101:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10311:1:13","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"10314:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10304:6:13"},"nodeType":"YulFunctionCall","src":"10304:21:13"},"nodeType":"YulExpressionStatement","src":"10304:21:13"},{"nodeType":"YulAssignment","src":"10338:43:13","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10367:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10370:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10357:9:13"},"nodeType":"YulFunctionCall","src":"10357:18:13"},{"name":"pos","nodeType":"YulIdentifier","src":"10377:3:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10353:3:13"},"nodeType":"YulFunctionCall","src":"10353:28:13"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"10338:11:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2675,"isOffset":false,"isSlot":true,"src":"10314:10:13","suffix":"slot","valueSize":1},{"declaration":2677,"isOffset":false,"isSlot":false,"src":"10377:3:13","valueSize":1},{"declaration":2681,"isOffset":false,"isSlot":true,"src":"10338:11:13","suffix":"slot","valueSize":1}],"id":2683,"nodeType":"InlineAssembly","src":"10281:110:13"}]},"id":2685,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"10167:13:13","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"ckpts","nameLocation":"10202:5:13","nodeType":"VariableDeclaration","scope":2685,"src":"10181:26:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2673,"nodeType":"UserDefinedTypeName","pathNode":{"id":2672,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"10181:10:13"},"referencedDeclaration":2006,"src":"10181:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2674,"nodeType":"ArrayTypeName","src":"10181:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2006_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"pos","nameLocation":"10217:3:13","nodeType":"VariableDeclaration","scope":2685,"src":"10209:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"10209:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10180:41:13"},"returnParameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"result","nameLocation":"10263:6:13","nodeType":"VariableDeclaration","scope":2685,"src":"10244:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":2680,"nodeType":"UserDefinedTypeName","pathNode":{"id":2679,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":2006,"src":"10244:10:13"},"referencedDeclaration":2006,"src":"10244:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2006_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"src":"10243:27:13"},"scope":2691,"src":"10158:239:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"10403:254:13","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2690,"mutability":"mutable","name":"__gap","nameLocation":"10682:5:13","nodeType":"VariableDeclaration","scope":2691,"src":"10662:25:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage","typeString":"uint256[47]"},"typeName":{"baseType":{"id":2687,"name":"uint256","nodeType":"ElementaryTypeName","src":"10662:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"length":{"hexValue":"3437","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10670:2:13","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"nodeType":"ArrayTypeName","src":"10662:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage_ptr","typeString":"uint256[47]"}},"visibility":"private"}],"scope":2692,"src":"1357:9333:13","usedErrors":[]}],"src":"121:10570:13"},"id":13},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[2716],"IERC20Upgradeable":[1774]},"id":2717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2693,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:14"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":2694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2717,"sourceUnit":1775,"src":"135:34:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2696,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"327:17:14"},"id":2697,"nodeType":"InheritanceSpecifier","src":"327:17:14"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2695,"nodeType":"StructuredDocumentation","src":"171:116:14","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2716,"linearizedBaseContracts":[2716,1774],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"351:54:14","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2703,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:14","nodeType":"FunctionDefinition","parameters":{"id":2699,"nodeType":"ParameterList","parameters":[],"src":"423:2:14"},"returnParameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2703,"src":"449:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2700,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:14"},"scope":2716,"src":"410:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"470:56:14","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2709,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:14","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[],"src":"546:2:14"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"572:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2706,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:14"},"scope":2716,"src":"531:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"593:65:14","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2715,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:14","nodeType":"FunctionDefinition","parameters":{"id":2711,"nodeType":"ParameterList","parameters":[],"src":"680:2:14"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2715,"src":"706:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2712,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:14"},"scope":2716,"src":"663:50:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2717,"src":"288:427:14","usedErrors":[]}],"src":"110:606:14"},"id":14},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"CountersUpgradeable":[3639],"ECDSAUpgradeable":[4175],"EIP712Upgradeable":[4325],"ERC20PermitUpgradeable":[2907],"ERC20Upgradeable":[1696],"IERC20MetadataUpgradeable":[2716],"IERC20PermitUpgradeable":[2943],"IERC20Upgradeable":[1774],"Initializable":[957],"MathUpgradeable":[5246],"StringsUpgradeable":[3814]},"id":2908,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2718,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol","file":"./draft-IERC20PermitUpgradeable.sol","id":2719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2908,"sourceUnit":2944,"src":"153:45:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":2720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2908,"sourceUnit":1697,"src":"199:33:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"../../../utils/cryptography/ECDSAUpgradeable.sol","id":2721,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2908,"sourceUnit":4176,"src":"233:58:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../../utils/cryptography/EIP712Upgradeable.sol","id":2722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2908,"sourceUnit":4326,"src":"292:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"../../../utils/CountersUpgradeable.sol","id":2723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2908,"sourceUnit":3640,"src":"352:48:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2908,"sourceUnit":958,"src":"401:48:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2726,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"1043:13:15"},"id":2727,"nodeType":"InheritanceSpecifier","src":"1043:13:15"},{"baseName":{"id":2728,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"1058:16:15"},"id":2729,"nodeType":"InheritanceSpecifier","src":"1058:16:15"},{"baseName":{"id":2730,"name":"IERC20PermitUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2943,"src":"1076:23:15"},"id":2731,"nodeType":"InheritanceSpecifier","src":"1076:23:15"},{"baseName":{"id":2732,"name":"EIP712Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":4325,"src":"1101:17:15"},"id":2733,"nodeType":"InheritanceSpecifier","src":"1101:17:15"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"451:547:15","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._\n @custom:storage-size 51"},"fullyImplemented":true,"id":2907,"linearizedBaseContracts":[2907,4325,2943,1696,2716,1774,3565,957],"name":"ERC20PermitUpgradeable","nameLocation":"1017:22:15","nodeType":"ContractDefinition","nodes":[{"id":2737,"libraryName":{"id":2734,"name":"CountersUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3639,"src":"1131:19:15"},"nodeType":"UsingForDirective","src":"1125:58:15","typeName":{"id":2736,"nodeType":"UserDefinedTypeName","pathNode":{"id":2735,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"1155:27:15"},"referencedDeclaration":3571,"src":"1155:27:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":2742,"mutability":"mutable","name":"_nonces","nameLocation":"1245:7:15","nodeType":"VariableDeclaration","scope":2907,"src":"1189:63:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3571_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"typeName":{"id":2741,"keyType":{"id":2738,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1189:47:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3571_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"valueType":{"id":2740,"nodeType":"UserDefinedTypeName","pathNode":{"id":2739,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"1208:27:15"},"referencedDeclaration":3571,"src":"1208:27:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},"visibility":"private"},{"constant":true,"id":2747,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1336:16:15","nodeType":"VariableDeclaration","scope":2907,"src":"1311:147:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1311:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1373:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":2744,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1363:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"1464:254:15","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":2750,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1791:32:15","nodeType":"VariableDeclaration","scope":2907,"src":"1775:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":2763,"nodeType":"Block","src":"2129:51:15","statements":[{"expression":{"arguments":[{"id":2759,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2163:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":2758,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"2139:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2139:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2762,"nodeType":"ExpressionStatement","src":"2139:34:15"}]},"documentation":{"id":2751,"nodeType":"StructuredDocumentation","src":"1830:220:15","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":2764,"implemented":true,"kind":"function","modifiers":[{"id":2756,"kind":"modifierInvocation","modifierName":{"id":2755,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2112:16:15"},"nodeType":"ModifierInvocation","src":"2112:16:15"}],"name":"__ERC20Permit_init","nameLocation":"2064:18:15","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"name","nameLocation":"2097:4:15","nodeType":"VariableDeclaration","scope":2764,"src":"2083:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2752,"name":"string","nodeType":"ElementaryTypeName","src":"2083:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2082:20:15"},"returnParameters":{"id":2757,"nodeType":"ParameterList","parameters":[],"src":"2129:0:15"},"scope":2907,"src":"2055:125:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2771,"nodeType":"Block","src":"2265:2:15","statements":[]},"id":2772,"implemented":true,"kind":"function","modifiers":[{"id":2769,"kind":"modifierInvocation","modifierName":{"id":2768,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2248:16:15"},"nodeType":"ModifierInvocation","src":"2248:16:15"}],"name":"__ERC20Permit_init_unchained","nameLocation":"2195:28:15","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2772,"src":"2224:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2765,"name":"string","nodeType":"ElementaryTypeName","src":"2224:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2223:15:15"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[],"src":"2265:0:15"},"scope":2907,"src":"2186:81:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2928],"body":{"id":2844,"nodeType":"Block","src":"2526:439:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2792,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2544:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2544:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2794,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"2563:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2544:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2573:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":2791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2536:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2536:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2798,"nodeType":"ExpressionStatement","src":"2536:69:15"},{"assignments":[2800],"declarations":[{"constant":false,"id":2800,"mutability":"mutable","name":"structHash","nameLocation":"2624:10:15","nodeType":"VariableDeclaration","scope":2844,"src":"2616:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2616:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2814,"initialValue":{"arguments":[{"arguments":[{"id":2804,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"2658:16:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2805,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"2676:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2806,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"2683:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"2692:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2809,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"2709:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2808,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2699:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2699:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2811,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"2717:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2802,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2647:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2647:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2647:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2801,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2637:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2637:90:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2616:111:15"},{"assignments":[2816],"declarations":[{"constant":false,"id":2816,"mutability":"mutable","name":"hash","nameLocation":"2746:4:15","nodeType":"VariableDeclaration","scope":2844,"src":"2738:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2738:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2820,"initialValue":{"arguments":[{"id":2818,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"2770:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2817,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"2753:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2753:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2738:43:15"},{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"signer","nameLocation":"2800:6:15","nodeType":"VariableDeclaration","scope":2844,"src":"2792:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"2792:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2830,"initialValue":{"arguments":[{"id":2825,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"2834:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2826,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2840:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2827,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"2843:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2828,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"2846:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2823,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"2809:16:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$4175_$","typeString":"type(library ECDSAUpgradeable)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4115,"src":"2809:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2809:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2792:56:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2832,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"2866:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2833,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"2876:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2866:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2883:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":2831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2858:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"ExpressionStatement","src":"2858:58:15"},{"expression":{"arguments":[{"id":2839,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"2936:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2840,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"2943:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"2952:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2838,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"2927:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2927:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2843,"nodeType":"ExpressionStatement","src":"2927:31:15"}]},"documentation":{"id":2773,"nodeType":"StructuredDocumentation","src":"2273:50:15","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":2845,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2337:6:15","nodeType":"FunctionDefinition","overrides":{"id":2789,"nodeType":"OverrideSpecifier","overrides":[],"src":"2517:8:15"},"parameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"owner","nameLocation":"2361:5:15","nodeType":"VariableDeclaration","scope":2845,"src":"2353:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2774,"name":"address","nodeType":"ElementaryTypeName","src":"2353:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"spender","nameLocation":"2384:7:15","nodeType":"VariableDeclaration","scope":2845,"src":"2376:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2776,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"value","nameLocation":"2409:5:15","nodeType":"VariableDeclaration","scope":2845,"src":"2401:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"deadline","nameLocation":"2432:8:15","nodeType":"VariableDeclaration","scope":2845,"src":"2424:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2424:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2783,"mutability":"mutable","name":"v","nameLocation":"2456:1:15","nodeType":"VariableDeclaration","scope":2845,"src":"2450:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2782,"name":"uint8","nodeType":"ElementaryTypeName","src":"2450:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"r","nameLocation":"2475:1:15","nodeType":"VariableDeclaration","scope":2845,"src":"2467:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2467:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2787,"mutability":"mutable","name":"s","nameLocation":"2494:1:15","nodeType":"VariableDeclaration","scope":2845,"src":"2486:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2486:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2343:158:15"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[],"src":"2526:0:15"},"scope":2907,"src":"2328:637:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2936],"body":{"id":2860,"nodeType":"Block","src":"3104:48:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2854,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"3121:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3571_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":2856,"indexExpression":{"id":2855,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3129:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3121:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":2857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3583,"src":"3121:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3571_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3571_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3121:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2853,"id":2859,"nodeType":"Return","src":"3114:31:15"}]},"documentation":{"id":2846,"nodeType":"StructuredDocumentation","src":"2971:50:15","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":2861,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3035:6:15","nodeType":"FunctionDefinition","overrides":{"id":2850,"nodeType":"OverrideSpecifier","overrides":[],"src":"3077:8:15"},"parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"owner","nameLocation":"3050:5:15","nodeType":"VariableDeclaration","scope":2861,"src":"3042:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"3042:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3041:15:15"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2861,"src":"3095:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3094:9:15"},"scope":2907,"src":"3026:126:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2942],"body":{"id":2871,"nodeType":"Block","src":"3345:44:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2868,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"3362:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3362:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2867,"id":2870,"nodeType":"Return","src":"3355:27:15"}]},"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"3158:60:15","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3285:16:15","nodeType":"FunctionDefinition","overrides":{"id":2864,"nodeType":"OverrideSpecifier","overrides":[],"src":"3318:8:15"},"parameters":{"id":2863,"nodeType":"ParameterList","parameters":[],"src":"3301:2:15"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2872,"src":"3336:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3336:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3335:9:15"},"scope":2907,"src":"3276:113:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2900,"nodeType":"Block","src":"3597:137:15","statements":[{"assignments":[2884],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"nonce","nameLocation":"3643:5:15","nodeType":"VariableDeclaration","scope":2900,"src":"3607:41:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2883,"nodeType":"UserDefinedTypeName","pathNode":{"id":2882,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"3607:27:15"},"referencedDeclaration":3571,"src":"3607:27:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"id":2888,"initialValue":{"baseExpression":{"id":2885,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"3651:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3571_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":2887,"indexExpression":{"id":2886,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"3659:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3651:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3607:58:15"},{"expression":{"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2889,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"3675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2890,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"3685:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3583,"src":"3685:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3571_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3571_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3675:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2894,"nodeType":"ExpressionStatement","src":"3675:25:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2895,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"3710:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"3710:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3571_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3571_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2899,"nodeType":"ExpressionStatement","src":"3710:17:15"}]},"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"3395:120:15","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3529:9:15","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"owner","nameLocation":"3547:5:15","nodeType":"VariableDeclaration","scope":2901,"src":"3539:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2874,"name":"address","nodeType":"ElementaryTypeName","src":"3539:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3538:15:15"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"current","nameLocation":"3588:7:15","nodeType":"VariableDeclaration","scope":2901,"src":"3580:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"3580:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3579:17:15"},"scope":2907,"src":"3520:214:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"3740:254:15","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2906,"mutability":"mutable","name":"__gap","nameLocation":"4019:5:15","nodeType":"VariableDeclaration","scope":2907,"src":"3999:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3999:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2905,"length":{"hexValue":"3439","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:2:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3999:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":2908,"src":"999:3028:15","usedErrors":[]}],"src":"128:3900:15"},"id":15},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol","exportedSymbols":{"IERC20PermitUpgradeable":[2943]},"id":2944,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2909,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20PermitUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"139:480:16","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":2943,"linearizedBaseContracts":[2943],"name":"IERC20PermitUpgradeable","nameLocation":"630:23:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"660:792:16","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":2928,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1466:6:16","nodeType":"FunctionDefinition","parameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"owner","nameLocation":"1490:5:16","nodeType":"VariableDeclaration","scope":2928,"src":"1482:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2912,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"spender","nameLocation":"1513:7:16","nodeType":"VariableDeclaration","scope":2928,"src":"1505:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"1505:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"value","nameLocation":"1538:5:16","nodeType":"VariableDeclaration","scope":2928,"src":"1530:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1530:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"deadline","nameLocation":"1561:8:16","nodeType":"VariableDeclaration","scope":2928,"src":"1553:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"v","nameLocation":"1585:1:16","nodeType":"VariableDeclaration","scope":2928,"src":"1579:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2920,"name":"uint8","nodeType":"ElementaryTypeName","src":"1579:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"r","nameLocation":"1604:1:16","nodeType":"VariableDeclaration","scope":2928,"src":"1596:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1596:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"s","nameLocation":"1623:1:16","nodeType":"VariableDeclaration","scope":2928,"src":"1615:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1615:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1472:158:16"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[],"src":"1639:0:16"},"scope":2943,"src":"1457:183:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"1646:294:16","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2936,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1954:6:16","nodeType":"FunctionDefinition","parameters":{"id":2932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"owner","nameLocation":"1969:5:16","nodeType":"VariableDeclaration","scope":2936,"src":"1961:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"1961:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1960:15:16"},"returnParameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2936,"src":"1999:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1999:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1998:9:16"},"scope":2943,"src":"1945:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2937,"nodeType":"StructuredDocumentation","src":"2014:128:16","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2942,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2209:16:16","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[],"src":"2225:2:16"},"returnParameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2942,"src":"2251:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2251:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2250:9:16"},"scope":2943,"src":"2200:60:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2944,"src":"620:1642:16","usedErrors":[]}],"src":"114:2149:16"},"id":16},"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[144],"AccessControlUpgradeable":[480],"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"ERC165Upgradeable":[4369],"ERC20BurnableUpgradeable":[1838],"ERC20PausableUpgradeable":[1898],"ERC20PresetMinterPauserUpgradeable":[3123],"ERC20Upgradeable":[1696],"EnumerableSetUpgradeable":[7400],"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578],"IERC165Upgradeable":[4381],"IERC20MetadataUpgradeable":[2716],"IERC20Upgradeable":[1774],"Initializable":[957],"MathUpgradeable":[5246],"PausableUpgradeable":[1084],"StringsUpgradeable":[3814]},"id":3124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2945,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"131:23:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":2946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3124,"sourceUnit":1697,"src":"156:33:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","file":"../extensions/ERC20BurnableUpgradeable.sol","id":2947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3124,"sourceUnit":1839,"src":"190:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","file":"../extensions/ERC20PausableUpgradeable.sol","id":2948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3124,"sourceUnit":1899,"src":"243:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","file":"../../../access/AccessControlEnumerableUpgradeable.sol","id":2949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3124,"sourceUnit":145,"src":"296:64:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":2950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3124,"sourceUnit":3566,"src":"361:47:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3124,"sourceUnit":958,"src":"409:48:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2953,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"1156:13:17"},"id":2954,"nodeType":"InheritanceSpecifier","src":"1156:13:17"},{"baseName":{"id":2955,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":3565,"src":"1171:18:17"},"id":2956,"nodeType":"InheritanceSpecifier","src":"1171:18:17"},{"baseName":{"id":2957,"name":"AccessControlEnumerableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":144,"src":"1191:34:17"},"id":2958,"nodeType":"InheritanceSpecifier","src":"1191:34:17"},{"baseName":{"id":2959,"name":"ERC20BurnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1838,"src":"1227:24:17"},"id":2960,"nodeType":"InheritanceSpecifier","src":"1227:24:17"},{"baseName":{"id":2961,"name":"ERC20PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1898,"src":"1253:24:17"},"id":2962,"nodeType":"InheritanceSpecifier","src":"1253:24:17"}],"canonicalName":"ERC20PresetMinterPauserUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"459:649:17","text":" @dev {ERC20} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts.\n _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._"},"fullyImplemented":true,"id":3123,"linearizedBaseContracts":[3123,1898,1084,1838,1696,2716,1774,144,480,4369,4381,505,578,3565,957],"name":"ERC20PresetMinterPauserUpgradeable","nameLocation":"1118:34:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2976,"nodeType":"Block","src":"1373:61:17","statements":[{"expression":{"arguments":[{"id":2972,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"1414:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2973,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"1420:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2971,"name":"__ERC20PresetMinterPauser_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"1383:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1383:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2975,"nodeType":"ExpressionStatement","src":"1383:44:17"}]},"functionSelector":"4cd88b76","id":2977,"implemented":true,"kind":"function","modifiers":[{"id":2969,"kind":"modifierInvocation","modifierName":{"id":2968,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":859,"src":"1361:11:17"},"nodeType":"ModifierInvocation","src":"1361:11:17"}],"name":"initialize","nameLocation":"1293:10:17","nodeType":"FunctionDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"name","nameLocation":"1318:4:17","nodeType":"VariableDeclaration","scope":2977,"src":"1304:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2963,"name":"string","nodeType":"ElementaryTypeName","src":"1304:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"symbol","nameLocation":"1338:6:17","nodeType":"VariableDeclaration","scope":2977,"src":"1324:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2965,"name":"string","nodeType":"ElementaryTypeName","src":"1324:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1303:42:17"},"returnParameters":{"id":2970,"nodeType":"ParameterList","parameters":[],"src":"1373:0:17"},"scope":3123,"src":"1284:150:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":2982,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"1463:11:17","nodeType":"VariableDeclaration","scope":3123,"src":"1439:62:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1439:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1487:13:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":2979,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1477:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1477:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":2987,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"1531:11:17","nodeType":"VariableDeclaration","scope":3123,"src":"1507:62:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1507:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:13:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":2984,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1545:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1545:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":3010,"nodeType":"Block","src":"1861:154:17","statements":[{"expression":{"arguments":[{"id":2998,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"1894:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2999,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"1900:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2997,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"1871:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1871:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"ExpressionStatement","src":"1871:36:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3002,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"1917:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1917:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3004,"nodeType":"ExpressionStatement","src":"1917:27:17"},{"expression":{"arguments":[{"id":3006,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"1995:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3007,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"2001:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3005,"name":"__ERC20PresetMinterPauser_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"1954:40:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1954:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3009,"nodeType":"ExpressionStatement","src":"1954:54:17"}]},"documentation":{"id":2988,"nodeType":"StructuredDocumentation","src":"1576:172:17","text":" @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."},"id":3011,"implemented":true,"kind":"function","modifiers":[{"id":2995,"kind":"modifierInvocation","modifierName":{"id":2994,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1844:16:17"},"nodeType":"ModifierInvocation","src":"1844:16:17"}],"name":"__ERC20PresetMinterPauser_init","nameLocation":"1762:30:17","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"name","nameLocation":"1807:4:17","nodeType":"VariableDeclaration","scope":3011,"src":"1793:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2989,"name":"string","nodeType":"ElementaryTypeName","src":"1793:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2992,"mutability":"mutable","name":"symbol","nameLocation":"1827:6:17","nodeType":"VariableDeclaration","scope":3011,"src":"1813:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2991,"name":"string","nodeType":"ElementaryTypeName","src":"1813:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1792:42:17"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[],"src":"1861:0:17"},"scope":3123,"src":"1753:262:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3038,"nodeType":"Block","src":"2127:156:17","statements":[{"expression":{"arguments":[{"id":3021,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2148:18:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3022,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2168:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2168:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3020,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2137:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2137:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3025,"nodeType":"ExpressionStatement","src":"2137:44:17"},{"expression":{"arguments":[{"id":3027,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"2203:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3028,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2216:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2216:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3026,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2192:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3031,"nodeType":"ExpressionStatement","src":"2192:37:17"},{"expression":{"arguments":[{"id":3033,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"2250:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3034,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2263:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2263:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3032,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2239:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2239:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3037,"nodeType":"ExpressionStatement","src":"2239:37:17"}]},"id":3039,"implemented":true,"kind":"function","modifiers":[{"id":3018,"kind":"modifierInvocation","modifierName":{"id":3017,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2110:16:17"},"nodeType":"ModifierInvocation","src":"2110:16:17"}],"name":"__ERC20PresetMinterPauser_init_unchained","nameLocation":"2030:40:17","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3039,"src":"2071:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3012,"name":"string","nodeType":"ElementaryTypeName","src":"2071:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3039,"src":"2086:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3014,"name":"string","nodeType":"ElementaryTypeName","src":"2086:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2070:30:17"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[],"src":"2127:0:17"},"scope":3123,"src":"2021:262:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3061,"nodeType":"Block","src":"2529:145:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3049,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"2555:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3050,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2568:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2568:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3048,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"2547:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2547:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2583:56:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342","typeString":"literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""},"value":"ERC20PresetMinterPauser: must have minter role to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342","typeString":"literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""}],"id":3047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2539:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2539:101:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3055,"nodeType":"ExpressionStatement","src":"2539:101:17"},{"expression":{"arguments":[{"id":3057,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2656:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3058,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"2660:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3056,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"2650:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3060,"nodeType":"ExpressionStatement","src":"2650:17:17"}]},"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"2289:178:17","text":" @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."},"functionSelector":"40c10f19","id":3062,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2481:4:17","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"to","nameLocation":"2494:2:17","nodeType":"VariableDeclaration","scope":3062,"src":"2486:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3041,"name":"address","nodeType":"ElementaryTypeName","src":"2486:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"amount","nameLocation":"2506:6:17","nodeType":"VariableDeclaration","scope":3062,"src":"2498:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2498:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2485:28:17"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[],"src":"2529:0:17"},"scope":3123,"src":"2472:202:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3078,"nodeType":"Block","src":"2909:137:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3068,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"2935:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3069,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2948:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2948:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3067,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"2927:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2927:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2963:57:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330","typeString":"literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""},"value":"ERC20PresetMinterPauser: must have pauser role to pause"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330","typeString":"literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""}],"id":3066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2919:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2919:102:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3074,"nodeType":"ExpressionStatement","src":"2919:102:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3075,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3031:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3031:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3077,"nodeType":"ExpressionStatement","src":"3031:8:17"}]},"documentation":{"id":3063,"nodeType":"StructuredDocumentation","src":"2680:192:17","text":" @dev Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."},"functionSelector":"8456cb59","id":3079,"implemented":true,"kind":"function","modifiers":[],"name":"pause","nameLocation":"2886:5:17","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[],"src":"2891:2:17"},"returnParameters":{"id":3065,"nodeType":"ParameterList","parameters":[],"src":"2909:0:17"},"scope":3123,"src":"2877:169:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3095,"nodeType":"Block","src":"3287:141:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3085,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"3313:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3086,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"3326:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3326:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3084,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3305:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3305:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3341:59:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186","typeString":"literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""},"value":"ERC20PresetMinterPauser: must have pauser role to unpause"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186","typeString":"literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""}],"id":3083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3297:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3297:104:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3091,"nodeType":"ExpressionStatement","src":"3297:104:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3092,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"3411:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3411:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3094,"nodeType":"ExpressionStatement","src":"3411:10:17"}]},"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"3052:196:17","text":" @dev Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."},"functionSelector":"3f4ba83a","id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"3262:7:17","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[],"src":"3269:2:17"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[],"src":"3287:0:17"},"scope":3123,"src":"3253:175:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1679,1892],"body":{"id":3116,"nodeType":"Block","src":"3606:61:17","statements":[{"expression":{"arguments":[{"id":3111,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"3643:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3112,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"3649:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3113,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3653:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3108,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3616:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PresetMinterPauserUpgradeable_$3123_$","typeString":"type(contract super ERC20PresetMinterPauserUpgradeable)"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1892,"src":"3616:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3616:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3115,"nodeType":"ExpressionStatement","src":"3616:44:17"}]},"id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"3443:20:17","nodeType":"FunctionDefinition","overrides":{"id":3106,"nodeType":"OverrideSpecifier","overrides":[{"id":3104,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"3562:16:17"},{"id":3105,"name":"ERC20PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1898,"src":"3580:24:17"}],"src":"3553:52:17"},"parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"from","nameLocation":"3481:4:17","nodeType":"VariableDeclaration","scope":3117,"src":"3473:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"3473:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"to","nameLocation":"3503:2:17","nodeType":"VariableDeclaration","scope":3117,"src":"3495:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"amount","nameLocation":"3523:6:17","nodeType":"VariableDeclaration","scope":3117,"src":"3515:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"3515:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3463:72:17"},"returnParameters":{"id":3107,"nodeType":"ParameterList","parameters":[],"src":"3606:0:17"},"scope":3123,"src":"3434:233:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"3673:254:17","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3122,"mutability":"mutable","name":"__gap","nameLocation":"3952:5:17","nodeType":"VariableDeclaration","scope":3123,"src":"3932:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3932:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3121,"length":{"hexValue":"3530","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3940:2:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"3932:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3124,"src":"1109:2851:17","usedErrors":[]}],"src":"131:3830:17"},"id":17},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[4381],"IERC721Upgradeable":[3239]},"id":3240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3125,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:18"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":3126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3240,"sourceUnit":4382,"src":"133:58:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3128,"name":"IERC165Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":4381,"src":"293:18:18"},"id":3129,"nodeType":"InheritanceSpecifier","src":"293:18:18"}],"canonicalName":"IERC721Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3127,"nodeType":"StructuredDocumentation","src":"193:67:18","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":3239,"linearizedBaseContracts":[3239,4381],"name":"IERC721Upgradeable","nameLocation":"271:18:18","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"318:88:18","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":3138,"name":"Transfer","nameLocation":"417:8:18","nodeType":"EventDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"442:4:18","nodeType":"VariableDeclaration","scope":3138,"src":"426:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3131,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3134,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"464:2:18","nodeType":"VariableDeclaration","scope":3138,"src":"448:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3133,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3136,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"484:7:18","nodeType":"VariableDeclaration","scope":3138,"src":"468:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:67:18"},"src":"411:82:18"},{"anonymous":false,"documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"499:94:18","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":3147,"name":"Approval","nameLocation":"604:8:18","nodeType":"EventDefinition","parameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"629:5:18","nodeType":"VariableDeclaration","scope":3147,"src":"613:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"613:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3143,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"652:8:18","nodeType":"VariableDeclaration","scope":3147,"src":"636:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3145,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"678:7:18","nodeType":"VariableDeclaration","scope":3147,"src":"662:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"612:74:18"},"src":"598:89:18"},{"anonymous":false,"documentation":{"id":3148,"nodeType":"StructuredDocumentation","src":"693:117:18","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":3156,"name":"ApprovalForAll","nameLocation":"821:14:18","nodeType":"EventDefinition","parameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"852:5:18","nodeType":"VariableDeclaration","scope":3156,"src":"836:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3149,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3152,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"875:8:18","nodeType":"VariableDeclaration","scope":3156,"src":"859:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3151,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3154,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"890:8:18","nodeType":"VariableDeclaration","scope":3156,"src":"885:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3153,"name":"bool","nodeType":"ElementaryTypeName","src":"885:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"835:64:18"},"src":"815:85:18"},{"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"906:76:18","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":3164,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"996:9:18","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"owner","nameLocation":"1014:5:18","nodeType":"VariableDeclaration","scope":3164,"src":"1006:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3158,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1005:15:18"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"balance","nameLocation":"1052:7:18","nodeType":"VariableDeclaration","scope":3164,"src":"1044:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:17:18"},"scope":3239,"src":"987:74:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"1067:131:18","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":3172,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1212:7:18","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"tokenId","nameLocation":"1228:7:18","nodeType":"VariableDeclaration","scope":3172,"src":"1220:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:17:18"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"owner","nameLocation":"1268:5:18","nodeType":"VariableDeclaration","scope":3172,"src":"1260:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1259:15:18"},"scope":3239,"src":"1203:72:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"1281:556:18","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":3184,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1851:16:18","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"from","nameLocation":"1885:4:18","nodeType":"VariableDeclaration","scope":3184,"src":"1877:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"1877:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"to","nameLocation":"1907:2:18","nodeType":"VariableDeclaration","scope":3184,"src":"1899:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"1899:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"tokenId","nameLocation":"1927:7:18","nodeType":"VariableDeclaration","scope":3184,"src":"1919:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"data","nameLocation":"1959:4:18","nodeType":"VariableDeclaration","scope":3184,"src":"1944:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3180,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1867:102:18"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"1978:0:18"},"scope":3239,"src":"1842:137:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"1985:687:18","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":3194,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2686:16:18","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"from","nameLocation":"2720:4:18","nodeType":"VariableDeclaration","scope":3194,"src":"2712:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"to","nameLocation":"2742:2:18","nodeType":"VariableDeclaration","scope":3194,"src":"2734:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"tokenId","nameLocation":"2762:7:18","nodeType":"VariableDeclaration","scope":3194,"src":"2754:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2754:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2702:73:18"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[],"src":"2784:0:18"},"scope":3239,"src":"2677:108:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3195,"nodeType":"StructuredDocumentation","src":"2791:732:18","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3204,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3537:12:18","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"from","nameLocation":"3567:4:18","nodeType":"VariableDeclaration","scope":3204,"src":"3559:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3196,"name":"address","nodeType":"ElementaryTypeName","src":"3559:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"to","nameLocation":"3589:2:18","nodeType":"VariableDeclaration","scope":3204,"src":"3581:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"3581:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"tokenId","nameLocation":"3609:7:18","nodeType":"VariableDeclaration","scope":3204,"src":"3601:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"3601:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3549:73:18"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[],"src":"3631:0:18"},"scope":3239,"src":"3528:104:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"3638:452:18","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3212,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4104:7:18","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"to","nameLocation":"4120:2:18","nodeType":"VariableDeclaration","scope":3212,"src":"4112:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3206,"name":"address","nodeType":"ElementaryTypeName","src":"4112:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"tokenId","nameLocation":"4132:7:18","nodeType":"VariableDeclaration","scope":3212,"src":"4124:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4111:29:18"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[],"src":"4149:0:18"},"scope":3239,"src":"4095:55:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"4156:309:18","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":3220,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4479:17:18","nodeType":"FunctionDefinition","parameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"operator","nameLocation":"4505:8:18","nodeType":"VariableDeclaration","scope":3220,"src":"4497:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3214,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"_approved","nameLocation":"4520:9:18","nodeType":"VariableDeclaration","scope":3220,"src":"4515:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3216,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4496:34:18"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[],"src":"4539:0:18"},"scope":3239,"src":"4470:70:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3221,"nodeType":"StructuredDocumentation","src":"4546:139:18","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":3228,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4699:11:18","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"tokenId","nameLocation":"4719:7:18","nodeType":"VariableDeclaration","scope":3228,"src":"4711:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"4711:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4710:17:18"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"operator","nameLocation":"4759:8:18","nodeType":"VariableDeclaration","scope":3228,"src":"4751:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3225,"name":"address","nodeType":"ElementaryTypeName","src":"4751:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4750:18:18"},"scope":3239,"src":"4690:79:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"4775:138:18","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":3238,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4927:16:18","nodeType":"FunctionDefinition","parameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"owner","nameLocation":"4952:5:18","nodeType":"VariableDeclaration","scope":3238,"src":"4944:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3230,"name":"address","nodeType":"ElementaryTypeName","src":"4944:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"operator","nameLocation":"4967:8:18","nodeType":"VariableDeclaration","scope":3238,"src":"4959:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3232,"name":"address","nodeType":"ElementaryTypeName","src":"4959:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4943:33:18"},"returnParameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3238,"src":"5000:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3235,"name":"bool","nodeType":"ElementaryTypeName","src":"5000:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4999:6:18"},"scope":3239,"src":"4918:88:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3240,"src":"261:4747:18","usedErrors":[]}],"src":"108:4901:18"},"id":18},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523]},"id":3524,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3241,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"126:67:19","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3523,"linearizedBaseContracts":[3523],"name":"AddressUpgradeable","nameLocation":"202:18:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3256,"nodeType":"Block","src":"1252:254:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3250,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"1476:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3249,"id":3255,"nodeType":"Return","src":"1469:30:19"}]},"documentation":{"id":3243,"nodeType":"StructuredDocumentation","src":"227:954:19","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":3257,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:19","nodeType":"FunctionDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"account","nameLocation":"1214:7:19","nodeType":"VariableDeclaration","scope":3257,"src":"1206:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:19"},"returnParameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3257,"src":"1246:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3247,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:19"},"scope":3523,"src":"1186:320:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3290,"nodeType":"Block","src":"2494:241:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3268,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$3523","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$3523","typeString":"library AddressUpgradeable"}],"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:19","typeDescriptions":{}}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3271,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"2537:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":3265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3275,"nodeType":"ExpressionStatement","src":"2504:73:19"},{"assignments":[3277,null],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"success","nameLocation":"2594:7:19","nodeType":"VariableDeclaration","scope":3290,"src":"2589:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3276,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3284,"initialValue":{"arguments":[{"hexValue":"","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3278,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"2607:9:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3280,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"2629:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:19"},{"expression":{"arguments":[{"id":3286,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"2658:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":3285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3289,"nodeType":"ExpressionStatement","src":"2650:78:19"}]},"documentation":{"id":3258,"nodeType":"StructuredDocumentation","src":"1512:906:19","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3291,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:19","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:19","nodeType":"VariableDeclaration","scope":3291,"src":"2442:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3259,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"amount","nameLocation":"2477:6:19","nodeType":"VariableDeclaration","scope":3291,"src":"2469:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:19"},"returnParameters":{"id":3264,"nodeType":"ParameterList","parameters":[],"src":"2494:0:19"},"scope":3523,"src":"2423:312:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"3566:96:19","statements":[{"expression":{"arguments":[{"id":3302,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"3605:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3303,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"3613:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3622:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3301,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3349,3393],"referencedDeclaration":3393,"src":"3583:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:72:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3300,"id":3307,"nodeType":"Return","src":"3576:79:19"}]},"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"2741:731:19","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:19","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"target","nameLocation":"3507:6:19","nodeType":"VariableDeclaration","scope":3309,"src":"3499:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3293,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"data","nameLocation":"3528:4:19","nodeType":"VariableDeclaration","scope":3309,"src":"3515:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3295,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:19"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3309,"src":"3552:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3298,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:19"},"scope":3523,"src":"3477:185:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3328,"nodeType":"Block","src":"4031:76:19","statements":[{"expression":{"arguments":[{"id":3322,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"4070:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3323,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"4078:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3325,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"4087:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3321,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3349,3393],"referencedDeclaration":3393,"src":"4048:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4048:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3320,"id":3327,"nodeType":"Return","src":"4041:59:19"}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"3668:211:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3329,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3893:12:19","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"target","nameLocation":"3923:6:19","nodeType":"VariableDeclaration","scope":3329,"src":"3915:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3311,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"data","nameLocation":"3952:4:19","nodeType":"VariableDeclaration","scope":3329,"src":"3939:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3313,"name":"bytes","nodeType":"ElementaryTypeName","src":"3939:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"errorMessage","nameLocation":"3980:12:19","nodeType":"VariableDeclaration","scope":3329,"src":"3966:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3315,"name":"string","nodeType":"ElementaryTypeName","src":"3966:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3905:93:19"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3329,"src":"4017:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3318,"name":"bytes","nodeType":"ElementaryTypeName","src":"4017:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4016:14:19"},"scope":3523,"src":"3884:223:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3348,"nodeType":"Block","src":"4612:111:19","statements":[{"expression":{"arguments":[{"id":3342,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"4651:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3343,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"4659:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"4665:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:43:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3341,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3349,3393],"referencedDeclaration":3393,"src":"4629:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4629:87:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3340,"id":3347,"nodeType":"Return","src":"4622:94:19"}]},"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"4113:351:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4478:21:19","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"target","nameLocation":"4517:6:19","nodeType":"VariableDeclaration","scope":3349,"src":"4509:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3331,"name":"address","nodeType":"ElementaryTypeName","src":"4509:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"data","nameLocation":"4546:4:19","nodeType":"VariableDeclaration","scope":3349,"src":"4533:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3333,"name":"bytes","nodeType":"ElementaryTypeName","src":"4533:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"value","nameLocation":"4568:5:19","nodeType":"VariableDeclaration","scope":3349,"src":"4560:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"4560:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:80:19"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3349,"src":"4598:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3338,"name":"bytes","nodeType":"ElementaryTypeName","src":"4598:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4597:14:19"},"scope":3523,"src":"4469:254:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3392,"nodeType":"Block","src":"5150:267:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3366,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5176:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$3523","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$3523","typeString":"library AddressUpgradeable"}],"id":3365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3364,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:19","typeDescriptions":{}}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5168:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5168:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"5193:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5160:81:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3373,"nodeType":"ExpressionStatement","src":"5160:81:19"},{"assignments":[3375,3377],"declarations":[{"constant":false,"id":3375,"mutability":"mutable","name":"success","nameLocation":"5257:7:19","nodeType":"VariableDeclaration","scope":3392,"src":"5252:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3374,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"returndata","nameLocation":"5279:10:19","nodeType":"VariableDeclaration","scope":3392,"src":"5266:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3376,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3384,"initialValue":{"arguments":[{"id":3382,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"5319:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3378,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"5293:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5293:11:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"5312:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5293:25:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5293:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5251:73:19"},{"expression":{"arguments":[{"id":3386,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"5368:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3387,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"5376:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3388,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"5385:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3389,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"5397:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3385,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5341:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3362,"id":3391,"nodeType":"Return","src":"5334:76:19"}]},"documentation":{"id":3350,"nodeType":"StructuredDocumentation","src":"4729:237:19","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3393,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4980:21:19","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"target","nameLocation":"5019:6:19","nodeType":"VariableDeclaration","scope":3393,"src":"5011:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"data","nameLocation":"5048:4:19","nodeType":"VariableDeclaration","scope":3393,"src":"5035:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3353,"name":"bytes","nodeType":"ElementaryTypeName","src":"5035:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"value","nameLocation":"5070:5:19","nodeType":"VariableDeclaration","scope":3393,"src":"5062:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3358,"mutability":"mutable","name":"errorMessage","nameLocation":"5099:12:19","nodeType":"VariableDeclaration","scope":3393,"src":"5085:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3357,"name":"string","nodeType":"ElementaryTypeName","src":"5085:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5001:116:19"},"returnParameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3393,"src":"5136:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3360,"name":"bytes","nodeType":"ElementaryTypeName","src":"5136:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5135:14:19"},"scope":3523,"src":"4971:446:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"5694:97:19","statements":[{"expression":{"arguments":[{"id":3404,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"5730:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3405,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"5738:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5744:39:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3403,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3410,3439],"referencedDeclaration":3439,"src":"5711:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5711:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3402,"id":3408,"nodeType":"Return","src":"5704:80:19"}]},"documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"5423:166:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5603:18:19","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"target","nameLocation":"5630:6:19","nodeType":"VariableDeclaration","scope":3410,"src":"5622:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3395,"name":"address","nodeType":"ElementaryTypeName","src":"5622:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3398,"mutability":"mutable","name":"data","nameLocation":"5651:4:19","nodeType":"VariableDeclaration","scope":3410,"src":"5638:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3397,"name":"bytes","nodeType":"ElementaryTypeName","src":"5638:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:35:19"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3410,"src":"5680:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3400,"name":"bytes","nodeType":"ElementaryTypeName","src":"5680:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5679:14:19"},"scope":3523,"src":"5594:197:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3438,"nodeType":"Block","src":"6133:168:19","statements":[{"assignments":[3423,3425],"declarations":[{"constant":false,"id":3423,"mutability":"mutable","name":"success","nameLocation":"6149:7:19","nodeType":"VariableDeclaration","scope":3438,"src":"6144:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3422,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"returndata","nameLocation":"6171:10:19","nodeType":"VariableDeclaration","scope":3438,"src":"6158:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3424,"name":"bytes","nodeType":"ElementaryTypeName","src":"6158:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3430,"initialValue":{"arguments":[{"id":3428,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"6203:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3426,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"6185:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6185:17:19","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6185:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6143:65:19"},{"expression":{"arguments":[{"id":3432,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"6252:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3433,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"6260:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3434,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"6269:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3435,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"6281:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3431,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"6225:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6225:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3421,"id":3437,"nodeType":"Return","src":"6218:76:19"}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"5797:173:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3439,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5984:18:19","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"target","nameLocation":"6020:6:19","nodeType":"VariableDeclaration","scope":3439,"src":"6012:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3412,"name":"address","nodeType":"ElementaryTypeName","src":"6012:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"data","nameLocation":"6049:4:19","nodeType":"VariableDeclaration","scope":3439,"src":"6036:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3414,"name":"bytes","nodeType":"ElementaryTypeName","src":"6036:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"errorMessage","nameLocation":"6077:12:19","nodeType":"VariableDeclaration","scope":3439,"src":"6063:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3416,"name":"string","nodeType":"ElementaryTypeName","src":"6063:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6002:93:19"},"returnParameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3439,"src":"6119:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3419,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:14:19"},"scope":3523,"src":"5975:326:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3477,"nodeType":"Block","src":"6783:434:19","statements":[{"condition":{"id":3453,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"6797:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3475,"nodeType":"Block","src":"7153:58:19","statements":[{"expression":{"arguments":[{"id":3471,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"7175:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3472,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"7187:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3470,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"7167:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7167:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3474,"nodeType":"ExpressionStatement","src":"7167:33:19"}]},"id":3476,"nodeType":"IfStatement","src":"6793:418:19","trueBody":{"id":3469,"nodeType":"Block","src":"6806:341:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3454,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"6824:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6824:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6824:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3466,"nodeType":"IfStatement","src":"6820:286:19","trueBody":{"id":3465,"nodeType":"Block","src":"6848:258:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3460,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"7050:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3459,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"7039:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7039:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7059:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7031:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3464,"nodeType":"ExpressionStatement","src":"7031:60:19"}]}},{"expression":{"id":3467,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"7126:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3452,"id":3468,"nodeType":"Return","src":"7119:17:19"}]}}]},"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"6307:277:19","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3478,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6598:26:19","nodeType":"FunctionDefinition","parameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"target","nameLocation":"6642:6:19","nodeType":"VariableDeclaration","scope":3478,"src":"6634:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3441,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"success","nameLocation":"6663:7:19","nodeType":"VariableDeclaration","scope":3478,"src":"6658:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3443,"name":"bool","nodeType":"ElementaryTypeName","src":"6658:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"returndata","nameLocation":"6693:10:19","nodeType":"VariableDeclaration","scope":3478,"src":"6680:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3445,"name":"bytes","nodeType":"ElementaryTypeName","src":"6680:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"errorMessage","nameLocation":"6727:12:19","nodeType":"VariableDeclaration","scope":3478,"src":"6713:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3447,"name":"string","nodeType":"ElementaryTypeName","src":"6713:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6624:121:19"},"returnParameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3478,"src":"6769:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3450,"name":"bytes","nodeType":"ElementaryTypeName","src":"6769:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6768:14:19"},"scope":3523,"src":"6589:628:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3501,"nodeType":"Block","src":"7598:135:19","statements":[{"condition":{"id":3490,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"7612:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3499,"nodeType":"Block","src":"7669:58:19","statements":[{"expression":{"arguments":[{"id":3495,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"7691:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3496,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"7703:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3494,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"7683:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7683:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3498,"nodeType":"ExpressionStatement","src":"7683:33:19"}]},"id":3500,"nodeType":"IfStatement","src":"7608:119:19","trueBody":{"id":3493,"nodeType":"Block","src":"7621:42:19","statements":[{"expression":{"id":3491,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"7642:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3489,"id":3492,"nodeType":"Return","src":"7635:17:19"}]}}]},"documentation":{"id":3479,"nodeType":"StructuredDocumentation","src":"7223:210:19","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7447:16:19","nodeType":"FunctionDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"success","nameLocation":"7478:7:19","nodeType":"VariableDeclaration","scope":3502,"src":"7473:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3480,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"returndata","nameLocation":"7508:10:19","nodeType":"VariableDeclaration","scope":3502,"src":"7495:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3482,"name":"bytes","nodeType":"ElementaryTypeName","src":"7495:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"errorMessage","nameLocation":"7542:12:19","nodeType":"VariableDeclaration","scope":3502,"src":"7528:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3484,"name":"string","nodeType":"ElementaryTypeName","src":"7528:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:97:19"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3502,"src":"7584:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3487,"name":"bytes","nodeType":"ElementaryTypeName","src":"7584:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:14:19"},"scope":3523,"src":"7438:295:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3521,"nodeType":"Block","src":"7822:457:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3509,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"7898:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7898:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7898:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3519,"nodeType":"Block","src":"8228:45:19","statements":[{"expression":{"arguments":[{"id":3516,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"8249:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3515,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8242:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8242:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3518,"nodeType":"ExpressionStatement","src":"8242:20:19"}]},"id":3520,"nodeType":"IfStatement","src":"7894:379:19","trueBody":{"id":3514,"nodeType":"Block","src":"7921:301:19","statements":[{"AST":{"nodeType":"YulBlock","src":"8079:133:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:40:19","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8126:10:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:19"},"nodeType":"YulFunctionCall","src":"8120:17:19"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8101:15:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8165:2:19","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8169:10:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:19"},"nodeType":"YulFunctionCall","src":"8161:19:19"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8182:15:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:19"},"nodeType":"YulFunctionCall","src":"8154:44:19"},"nodeType":"YulExpressionStatement","src":"8154:44:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3504,"isOffset":false,"isSlot":false,"src":"8126:10:19","valueSize":1},{"declaration":3504,"isOffset":false,"isSlot":false,"src":"8169:10:19","valueSize":1}],"id":3513,"nodeType":"InlineAssembly","src":"8070:142:19"}]}}]},"id":3522,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7748:7:19","nodeType":"FunctionDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"returndata","nameLocation":"7769:10:19","nodeType":"VariableDeclaration","scope":3522,"src":"7756:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3503,"name":"bytes","nodeType":"ElementaryTypeName","src":"7756:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3506,"mutability":"mutable","name":"errorMessage","nameLocation":"7795:12:19","nodeType":"VariableDeclaration","scope":3522,"src":"7781:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3505,"name":"string","nodeType":"ElementaryTypeName","src":"7781:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:53:19"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[],"src":"7822:0:19"},"scope":3523,"src":"7739:540:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3524,"src":"194:8087:19","usedErrors":[]}],"src":"101:8181:19"},"id":19},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"Initializable":[957]},"id":3566,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3525,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3566,"sourceUnit":958,"src":"110:42:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3528,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"691:13:20"},"id":3529,"nodeType":"InheritanceSpecifier","src":"691:13:20"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"154:496:20","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3565,"linearizedBaseContracts":[3565,957],"name":"ContextUpgradeable","nameLocation":"669:18:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3534,"nodeType":"Block","src":"763:7:20","statements":[]},"id":3535,"implemented":true,"kind":"function","modifiers":[{"id":3532,"kind":"modifierInvocation","modifierName":{"id":3531,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"746:16:20"},"nodeType":"ModifierInvocation","src":"746:16:20"}],"name":"__Context_init","nameLocation":"720:14:20","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[],"src":"734:2:20"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[],"src":"763:0:20"},"scope":3565,"src":"711:59:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3540,"nodeType":"Block","src":"838:7:20","statements":[]},"id":3541,"implemented":true,"kind":"function","modifiers":[{"id":3538,"kind":"modifierInvocation","modifierName":{"id":3537,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"821:16:20"},"nodeType":"ModifierInvocation","src":"821:16:20"}],"name":"__Context_init_unchained","nameLocation":"785:24:20","nodeType":"FunctionDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[],"src":"809:2:20"},"returnParameters":{"id":3539,"nodeType":"ParameterList","parameters":[],"src":"838:0:20"},"scope":3565,"src":"776:69:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3549,"nodeType":"Block","src":"912:34:20","statements":[{"expression":{"expression":{"id":3546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3545,"id":3548,"nodeType":"Return","src":"922:17:20"}]},"id":3550,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:20","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[],"src":"869:2:20"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3550,"src":"903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3543,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:20"},"scope":3565,"src":"850:96:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3558,"nodeType":"Block","src":"1019:32:20","statements":[{"expression":{"expression":{"id":3555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3554,"id":3557,"nodeType":"Return","src":"1029:15:20"}]},"id":3559,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:20","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[],"src":"969:2:20"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3559,"src":"1003:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3552,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:20"},"scope":3565,"src":"952:99:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":3560,"nodeType":"StructuredDocumentation","src":"1057:254:20","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3564,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:20","nodeType":"VariableDeclaration","scope":3565,"src":"1316:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3563,"length":{"hexValue":"3530","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3566,"src":"651:693:20","usedErrors":[]}],"src":"86:1259:20"},"id":20},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[3639]},"id":3640,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3567,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"CountersUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3568,"nodeType":"StructuredDocumentation","src":"112:311:21","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":3639,"linearizedBaseContracts":[3639],"name":"CountersUpgradeable","nameLocation":"432:19:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":3571,"members":[{"constant":false,"id":3570,"mutability":"mutable","name":"_value","nameLocation":"805:6:21","nodeType":"VariableDeclaration","scope":3571,"src":"797:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:21","nodeType":"StructDefinition","scope":3639,"src":"458:374:21","visibility":"public"},{"body":{"id":3582,"nodeType":"Block","src":"912:38:21","statements":[{"expression":{"expression":{"id":3579,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"929:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"929:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3578,"id":3581,"nodeType":"Return","src":"922:21:21"}]},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:21","nodeType":"FunctionDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"counter","nameLocation":"871:7:21","nodeType":"VariableDeclaration","scope":3583,"src":"855:23:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3573,"nodeType":"UserDefinedTypeName","pathNode":{"id":3572,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"855:7:21"},"referencedDeclaration":3571,"src":"855:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:21"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:21"},"scope":3639,"src":"838:112:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3596,"nodeType":"Block","src":"1009:70:21","statements":[{"id":3595,"nodeType":"UncheckedBlock","src":"1019:54:21","statements":[{"expression":{"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3589,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"1043:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"1043:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3594,"nodeType":"ExpressionStatement","src":"1043:19:21"}]}]},"id":3597,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:21","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"counter","nameLocation":"991:7:21","nodeType":"VariableDeclaration","scope":3597,"src":"975:23:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3585,"nodeType":"UserDefinedTypeName","pathNode":{"id":3584,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"975:7:21"},"referencedDeclaration":3571,"src":"975:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:21"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[],"src":"1009:0:21"},"scope":3639,"src":"956:123:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"1138:176:21","statements":[{"assignments":[3604],"declarations":[{"constant":false,"id":3604,"mutability":"mutable","name":"value","nameLocation":"1156:5:21","nodeType":"VariableDeclaration","scope":3624,"src":"1148:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3607,"initialValue":{"expression":{"id":3605,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"1164:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"1164:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1196:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":3608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1188:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1188:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3614,"nodeType":"ExpressionStatement","src":"1188:49:21"},{"id":3623,"nodeType":"UncheckedBlock","src":"1247:61:21","statements":[{"expression":{"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3615,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"1271:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"1271:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1288:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3622,"nodeType":"ExpressionStatement","src":"1271:26:21"}]}]},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:21","nodeType":"FunctionDefinition","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"counter","nameLocation":"1120:7:21","nodeType":"VariableDeclaration","scope":3625,"src":"1104:23:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3599,"nodeType":"UserDefinedTypeName","pathNode":{"id":3598,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"1104:7:21"},"referencedDeclaration":3571,"src":"1104:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:21"},"returnParameters":{"id":3602,"nodeType":"ParameterList","parameters":[],"src":"1138:0:21"},"scope":3639,"src":"1085:229:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3637,"nodeType":"Block","src":"1369:35:21","statements":[{"expression":{"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3631,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"1379:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"1379:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3636,"nodeType":"ExpressionStatement","src":"1379:18:21"}]},"id":3638,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:21","nodeType":"FunctionDefinition","parameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"counter","nameLocation":"1351:7:21","nodeType":"VariableDeclaration","scope":3638,"src":"1335:23:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3627,"nodeType":"UserDefinedTypeName","pathNode":{"id":3626,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"1335:7:21"},"referencedDeclaration":3571,"src":"1335:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3571_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:21"},"returnParameters":{"id":3630,"nodeType":"ParameterList","parameters":[],"src":"1369:0:21"},"scope":3639,"src":"1320:84:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3640,"src":"424:982:21","usedErrors":[]}],"src":"87:1320:21"},"id":21},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[5246],"StringsUpgradeable":[3814]},"id":3815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3641,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:22"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":3642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3815,"sourceUnit":5247,"src":"126:36:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"164:34:22","text":" @dev String operations."},"fullyImplemented":true,"id":3814,"linearizedBaseContracts":[3814],"name":"StringsUpgradeable","nameLocation":"207:18:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3646,"mutability":"constant","name":"_SYMBOLS","nameLocation":"257:8:22","nodeType":"VariableDeclaration","scope":3814,"src":"232:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3644,"name":"bytes16","nodeType":"ElementaryTypeName","src":"232:7:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"268:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3649,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"315:15:22","nodeType":"VariableDeclaration","scope":3814,"src":"292:43:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3647,"name":"uint8","nodeType":"ElementaryTypeName","src":"292:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"333:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3696,"nodeType":"Block","src":"508:636:22","statements":[{"id":3695,"nodeType":"UncheckedBlock","src":"518:620:22","statements":[{"assignments":[3658],"declarations":[{"constant":false,"id":3658,"mutability":"mutable","name":"length","nameLocation":"550:6:22","nodeType":"VariableDeclaration","scope":3695,"src":"542:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3665,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"581:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3659,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"559:15:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$5246_$","typeString":"type(library MathUpgradeable)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5083,"src":"559:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"559:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"559:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"542:49:22"},{"assignments":[3667],"declarations":[{"constant":false,"id":3667,"mutability":"mutable","name":"buffer","nameLocation":"619:6:22","nodeType":"VariableDeclaration","scope":3695,"src":"605:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3666,"name":"string","nodeType":"ElementaryTypeName","src":"605:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3672,"initialValue":{"arguments":[{"id":3670,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"639:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"628:10:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3668,"name":"string","nodeType":"ElementaryTypeName","src":"632:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"628:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"605:41:22"},{"assignments":[3674],"declarations":[{"constant":false,"id":3674,"mutability":"mutable","name":"ptr","nameLocation":"668:3:22","nodeType":"VariableDeclaration","scope":3695,"src":"660:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"660:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3675,"nodeType":"VariableDeclarationStatement","src":"660:11:22"},{"AST":{"nodeType":"YulBlock","src":"741:67:22","statements":[{"nodeType":"YulAssignment","src":"759:35:22","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"770:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"782:2:22","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"786:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"778:3:22"},"nodeType":"YulFunctionCall","src":"778:15:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:22"},"nodeType":"YulFunctionCall","src":"766:28:22"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"759:3:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3667,"isOffset":false,"isSlot":false,"src":"770:6:22","valueSize":1},{"declaration":3658,"isOffset":false,"isSlot":false,"src":"786:6:22","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"759:3:22","valueSize":1}],"id":3676,"nodeType":"InlineAssembly","src":"732:76:22"},{"body":{"id":3691,"nodeType":"Block","src":"834:267:22","statements":[{"expression":{"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"852:5:22","subExpression":{"id":3678,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"852:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3680,"nodeType":"ExpressionStatement","src":"852:5:22"},{"AST":{"nodeType":"YulBlock","src":"935:84:22","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"965:3:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"986:2:22","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"975:3:22"},"nodeType":"YulFunctionCall","src":"975:14:22"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"991:8:22"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"970:4:22"},"nodeType":"YulFunctionCall","src":"970:30:22"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"957:7:22"},"nodeType":"YulFunctionCall","src":"957:44:22"},"nodeType":"YulExpressionStatement","src":"957:44:22"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3646,"isOffset":false,"isSlot":false,"src":"991:8:22","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"965:3:22","valueSize":1},{"declaration":3652,"isOffset":false,"isSlot":false,"src":"979:5:22","valueSize":1}],"id":3681,"nodeType":"InlineAssembly","src":"926:93:22"},{"expression":{"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"1036:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3685,"nodeType":"ExpressionStatement","src":"1036:11:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"1069:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1078:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1069:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3690,"nodeType":"IfStatement","src":"1065:21:22","trueBody":{"id":3689,"nodeType":"Break","src":"1081:5:22"}}]},"condition":{"hexValue":"74727565","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"828:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3692,"nodeType":"WhileStatement","src":"821:280:22"},{"expression":{"id":3693,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"1121:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3656,"id":3694,"nodeType":"Return","src":"1114:13:22"}]}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"342:90:22","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"446:8:22","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"value","nameLocation":"463:5:22","nodeType":"VariableDeclaration","scope":3697,"src":"455:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"455:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"454:15:22"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3697,"src":"493:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3654,"name":"string","nodeType":"ElementaryTypeName","src":"493:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"492:15:22"},"scope":3814,"src":"437:707:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3716,"nodeType":"Block","src":"1323:111:22","statements":[{"id":3715,"nodeType":"UncheckedBlock","src":"1333:95:22","statements":[{"expression":{"arguments":[{"id":3706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"1376:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"1406:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3707,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"1383:15:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$5246_$","typeString":"type(library MathUpgradeable)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5206,"src":"1383:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1383:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1415:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1383:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3705,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3717,3793,3813],"referencedDeclaration":3793,"src":"1364:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1364:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3704,"id":3714,"nodeType":"Return","src":"1357:60:22"}]}]},"documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"1150:94:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1258:11:22","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"value","nameLocation":"1278:5:22","nodeType":"VariableDeclaration","scope":3717,"src":"1270:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:15:22"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3717,"src":"1308:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3702,"name":"string","nodeType":"ElementaryTypeName","src":"1308:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1307:15:22"},"scope":3814,"src":"1249:185:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3792,"nodeType":"Block","src":"1647:347:22","statements":[{"assignments":[3728],"declarations":[{"constant":false,"id":3728,"mutability":"mutable","name":"buffer","nameLocation":"1670:6:22","nodeType":"VariableDeclaration","scope":3792,"src":"1657:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3727,"name":"bytes","nodeType":"ElementaryTypeName","src":"1657:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3737,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1689:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3732,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"1693:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1689:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1689:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1679:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3729,"name":"bytes","nodeType":"ElementaryTypeName","src":"1683:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1679:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1657:47:22"},{"expression":{"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3738,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"1714:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3740,"indexExpression":{"hexValue":"30","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1714:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1726:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1714:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3743,"nodeType":"ExpressionStatement","src":"1714:15:22"},{"expression":{"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3744,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"1739:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3746,"indexExpression":{"hexValue":"31","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1746:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1739:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1751:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1739:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3749,"nodeType":"ExpressionStatement","src":"1739:15:22"},{"body":{"id":3778,"nodeType":"Block","src":"1809:83:22","statements":[{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3764,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"1823:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3766,"indexExpression":{"id":3765,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"1830:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1823:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3767,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"1835:8:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3771,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"1844:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1852:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1844:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1835:21:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1823:33:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3773,"nodeType":"ExpressionStatement","src":"1823:33:22"},{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"1870:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1880:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1870:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3777,"nodeType":"ExpressionStatement","src":"1870:11:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"1797:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1801:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1797:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3779,"initializationExpression":{"assignments":[3751],"declarations":[{"constant":false,"id":3751,"mutability":"mutable","name":"i","nameLocation":"1777:1:22","nodeType":"VariableDeclaration","scope":3779,"src":"1769:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3757,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3753,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"1785:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1781:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1794:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1781:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1769:26:22"},"loopExpression":{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1804:3:22","subExpression":{"id":3761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"1806:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"1804:3:22"},"nodeType":"ForStatement","src":"1764:128:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"1909:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1918:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1909:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1921:34:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1901:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1901:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3786,"nodeType":"ExpressionStatement","src":"1901:55:22"},{"expression":{"arguments":[{"id":3789,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"1980:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1973:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3787,"name":"string","nodeType":"ElementaryTypeName","src":"1973:6:22","typeDescriptions":{}}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1973:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3726,"id":3791,"nodeType":"Return","src":"1966:21:22"}]},"documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"1440:112:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3793,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1566:11:22","nodeType":"FunctionDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"value","nameLocation":"1586:5:22","nodeType":"VariableDeclaration","scope":3793,"src":"1578:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1578:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"length","nameLocation":"1601:6:22","nodeType":"VariableDeclaration","scope":3793,"src":"1593:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1577:31:22"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3793,"src":"1632:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3724,"name":"string","nodeType":"ElementaryTypeName","src":"1632:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1631:15:22"},"scope":3814,"src":"1557:437:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3812,"nodeType":"Block","src":"2219:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3806,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"2264:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2256:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3804,"name":"uint160","nodeType":"ElementaryTypeName","src":"2256:7:22","typeDescriptions":{}}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2256:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2248:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:22","typeDescriptions":{}}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2248:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3809,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"2272:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3801,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3717,3793,3813],"referencedDeclaration":3793,"src":"2236:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2236:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3800,"id":3811,"nodeType":"Return","src":"2229:59:22"}]},"documentation":{"id":3794,"nodeType":"StructuredDocumentation","src":"2000:141:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3813,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2155:11:22","nodeType":"FunctionDefinition","parameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"addr","nameLocation":"2175:4:22","nodeType":"VariableDeclaration","scope":3813,"src":"2167:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3795,"name":"address","nodeType":"ElementaryTypeName","src":"2167:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2166:14:22"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"2204:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3798,"name":"string","nodeType":"ElementaryTypeName","src":"2204:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2203:15:22"},"scope":3814,"src":"2146:149:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3815,"src":"199:2098:22","usedErrors":[]}],"src":"101:2197:22"},"id":22},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","exportedSymbols":{"ECDSAUpgradeable":[4175],"MathUpgradeable":[5246],"StringsUpgradeable":[3814]},"id":4176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3816,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:23"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../StringsUpgradeable.sol","id":3817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4176,"sourceUnit":3815,"src":"137:35:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSAUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"174:205:23","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4175,"linearizedBaseContracts":[4175],"name":"ECDSAUpgradeable","nameLocation":"388:16:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSAUpgradeable.RecoverError","id":3824,"members":[{"id":3819,"name":"NoError","nameLocation":"439:7:23","nodeType":"EnumValue","src":"439:7:23"},{"id":3820,"name":"InvalidSignature","nameLocation":"456:16:23","nodeType":"EnumValue","src":"456:16:23"},{"id":3821,"name":"InvalidSignatureLength","nameLocation":"482:22:23","nodeType":"EnumValue","src":"482:22:23"},{"id":3822,"name":"InvalidSignatureS","nameLocation":"514:17:23","nodeType":"EnumValue","src":"514:17:23"},{"id":3823,"name":"InvalidSignatureV","nameLocation":"541:17:23","nodeType":"EnumValue","src":"541:17:23"}],"name":"RecoverError","nameLocation":"416:12:23","nodeType":"EnumDefinition","src":"411:175:23"},{"body":{"id":3867,"nodeType":"Block","src":"646:457:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"660:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3831,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"669:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3824_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"669:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"660:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3836,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"756:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3837,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"765:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3824_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3820,"src":"765:29:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"756:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3845,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"865:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3846,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"874:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3824_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3821,"src":"874:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"865:44:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"987:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3855,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"996:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3824_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"996:30:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"987:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3863,"nodeType":"IfStatement","src":"983:114:23","trueBody":{"id":3862,"nodeType":"Block","src":"1028:69:23","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1049:36:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":3858,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1042:6:23","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1042:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3861,"nodeType":"ExpressionStatement","src":"1042:44:23"}]}},"id":3864,"nodeType":"IfStatement","src":"861:236:23","trueBody":{"id":3853,"nodeType":"Block","src":"911:66:23","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"932:33:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":3849,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"925:6:23","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"925:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3852,"nodeType":"ExpressionStatement","src":"925:41:23"}]}},"id":3865,"nodeType":"IfStatement","src":"752:345:23","trueBody":{"id":3844,"nodeType":"Block","src":"796:59:23","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"817:26:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":3840,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"810:6:23","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"810:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3843,"nodeType":"ExpressionStatement","src":"810:34:23"}]}},"id":3866,"nodeType":"IfStatement","src":"656:441:23","trueBody":{"id":3835,"nodeType":"Block","src":"691:55:23","statements":[{"functionReturnParameters":3829,"id":3834,"nodeType":"Return","src":"705:7:23"}]}}]},"id":3868,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"601:11:23","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"error","nameLocation":"626:5:23","nodeType":"VariableDeclaration","scope":3868,"src":"613:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3826,"nodeType":"UserDefinedTypeName","pathNode":{"id":3825,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3824,"src":"613:12:23"},"referencedDeclaration":3824,"src":"613:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"612:20:23"},"returnParameters":{"id":3829,"nodeType":"ParameterList","parameters":[],"src":"646:0:23"},"scope":4175,"src":"592:511:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3913,"nodeType":"Block","src":"2271:626:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3881,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"2285:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2285:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2305:2:23","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2285:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3911,"nodeType":"Block","src":"2810:81:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2840:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2832:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3903,"name":"address","nodeType":"ElementaryTypeName","src":"2832:7:23","typeDescriptions":{}}},"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2832:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3907,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"2844:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3824_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3821,"src":"2844:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2831:49:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3880,"id":3910,"nodeType":"Return","src":"2824:56:23"}]},"id":3912,"nodeType":"IfStatement","src":"2281:610:23","trueBody":{"id":3902,"nodeType":"Block","src":"2309:495:23","statements":[{"assignments":[3886],"declarations":[{"constant":false,"id":3886,"mutability":"mutable","name":"r","nameLocation":"2331:1:23","nodeType":"VariableDeclaration","scope":3902,"src":"2323:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2323:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3887,"nodeType":"VariableDeclarationStatement","src":"2323:9:23"},{"assignments":[3889],"declarations":[{"constant":false,"id":3889,"mutability":"mutable","name":"s","nameLocation":"2354:1:23","nodeType":"VariableDeclaration","scope":3902,"src":"2346:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2346:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3890,"nodeType":"VariableDeclarationStatement","src":"2346:9:23"},{"assignments":[3892],"declarations":[{"constant":false,"id":3892,"mutability":"mutable","name":"v","nameLocation":"2375:1:23","nodeType":"VariableDeclaration","scope":3902,"src":"2369:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3891,"name":"uint8","nodeType":"ElementaryTypeName","src":"2369:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3893,"nodeType":"VariableDeclarationStatement","src":"2369:7:23"},{"AST":{"nodeType":"YulBlock","src":"2577:171:23","statements":[{"nodeType":"YulAssignment","src":"2595:32:23","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2610:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2621:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2606:3:23"},"nodeType":"YulFunctionCall","src":"2606:20:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2600:5:23"},"nodeType":"YulFunctionCall","src":"2600:27:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2595:1:23"}]},{"nodeType":"YulAssignment","src":"2644:32:23","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2659:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2670:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2655:3:23"},"nodeType":"YulFunctionCall","src":"2655:20:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2649:5:23"},"nodeType":"YulFunctionCall","src":"2649:27:23"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2644:1:23"}]},{"nodeType":"YulAssignment","src":"2693:41:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2703:1:23","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2716:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2727:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:23"},"nodeType":"YulFunctionCall","src":"2712:20:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2706:5:23"},"nodeType":"YulFunctionCall","src":"2706:27:23"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2698:4:23"},"nodeType":"YulFunctionCall","src":"2698:36:23"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2693:1:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3886,"isOffset":false,"isSlot":false,"src":"2595:1:23","valueSize":1},{"declaration":3889,"isOffset":false,"isSlot":false,"src":"2644:1:23","valueSize":1},{"declaration":3873,"isOffset":false,"isSlot":false,"src":"2610:9:23","valueSize":1},{"declaration":3873,"isOffset":false,"isSlot":false,"src":"2659:9:23","valueSize":1},{"declaration":3873,"isOffset":false,"isSlot":false,"src":"2716:9:23","valueSize":1},{"declaration":3892,"isOffset":false,"isSlot":false,"src":"2693:1:23","valueSize":1}],"id":3894,"nodeType":"InlineAssembly","src":"2568:180:23"},{"expression":{"arguments":[{"id":3896,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"2779:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3897,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"2785:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3898,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"2788:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3899,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"2791:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3895,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3914,3988,4082],"referencedDeclaration":4082,"src":"2768:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2768:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3880,"id":3901,"nodeType":"Return","src":"2761:32:23"}]}}]},"documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"1109:1053:23","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":3914,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2176:10:23","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"hash","nameLocation":"2195:4:23","nodeType":"VariableDeclaration","scope":3914,"src":"2187:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"signature","nameLocation":"2214:9:23","nodeType":"VariableDeclaration","scope":3914,"src":"2201:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3872,"name":"bytes","nodeType":"ElementaryTypeName","src":"2201:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2186:38:23"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3914,"src":"2248:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3914,"src":"2257:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3878,"nodeType":"UserDefinedTypeName","pathNode":{"id":3877,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3824,"src":"2257:12:23"},"referencedDeclaration":3824,"src":"2257:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"2247:23:23"},"scope":4175,"src":"2167:730:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3940,"nodeType":"Block","src":"3770:140:23","statements":[{"assignments":[3925,3928],"declarations":[{"constant":false,"id":3925,"mutability":"mutable","name":"recovered","nameLocation":"3789:9:23","nodeType":"VariableDeclaration","scope":3940,"src":"3781:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3924,"name":"address","nodeType":"ElementaryTypeName","src":"3781:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"error","nameLocation":"3813:5:23","nodeType":"VariableDeclaration","scope":3940,"src":"3800:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3927,"nodeType":"UserDefinedTypeName","pathNode":{"id":3926,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3824,"src":"3800:12:23"},"referencedDeclaration":3824,"src":"3800:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3933,"initialValue":{"arguments":[{"id":3930,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"3833:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3931,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"3839:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3929,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3914,3988,4082],"referencedDeclaration":3914,"src":"3822:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3822:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3780:69:23"},{"expression":{"arguments":[{"id":3935,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"3871:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3934,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"3859:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3824_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3859:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3937,"nodeType":"ExpressionStatement","src":"3859:18:23"},{"expression":{"id":3938,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"3894:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3923,"id":3939,"nodeType":"Return","src":"3887:16:23"}]},"documentation":{"id":3915,"nodeType":"StructuredDocumentation","src":"2903:775:23","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":3941,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3692:7:23","nodeType":"FunctionDefinition","parameters":{"id":3920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"hash","nameLocation":"3708:4:23","nodeType":"VariableDeclaration","scope":3941,"src":"3700:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3700:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3919,"mutability":"mutable","name":"signature","nameLocation":"3727:9:23","nodeType":"VariableDeclaration","scope":3941,"src":"3714:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3918,"name":"bytes","nodeType":"ElementaryTypeName","src":"3714:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3699:38:23"},"returnParameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3941,"src":"3761:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3760:9:23"},"scope":4175,"src":"3683:227:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3987,"nodeType":"Block","src":"4297:203:23","statements":[{"assignments":[3957],"declarations":[{"constant":false,"id":3957,"mutability":"mutable","name":"s","nameLocation":"4315:1:23","nodeType":"VariableDeclaration","scope":3987,"src":"4307:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4307:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3964,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"4319:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4332:66:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4324:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4324:7:23","typeDescriptions":{}}},"id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4324:75:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4319:80:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4307:92:23"},{"assignments":[3966],"declarations":[{"constant":false,"id":3966,"mutability":"mutable","name":"v","nameLocation":"4415:1:23","nodeType":"VariableDeclaration","scope":3987,"src":"4409:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3965,"name":"uint8","nodeType":"ElementaryTypeName","src":"4409:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3979,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3971,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"4434:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4426:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"4426:7:23","typeDescriptions":{}}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4426:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4441:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4426:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4425:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4448:2:23","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4425:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4419:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3967,"name":"uint8","nodeType":"ElementaryTypeName","src":"4419:5:23","typeDescriptions":{}}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4419:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4409:42:23"},{"expression":{"arguments":[{"id":3981,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4479:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3982,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"4485:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3983,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"4488:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3984,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"4491:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3980,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3914,3988,4082],"referencedDeclaration":4082,"src":"4468:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4468:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3955,"id":3986,"nodeType":"Return","src":"4461:32:23"}]},"documentation":{"id":3942,"nodeType":"StructuredDocumentation","src":"3916:243:23","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":3988,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4173:10:23","nodeType":"FunctionDefinition","parameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3944,"mutability":"mutable","name":"hash","nameLocation":"4201:4:23","nodeType":"VariableDeclaration","scope":3988,"src":"4193:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3946,"mutability":"mutable","name":"r","nameLocation":"4223:1:23","nodeType":"VariableDeclaration","scope":3988,"src":"4215:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4215:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3948,"mutability":"mutable","name":"vs","nameLocation":"4242:2:23","nodeType":"VariableDeclaration","scope":3988,"src":"4234:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4234:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4183:67:23"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"4274:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3950,"name":"address","nodeType":"ElementaryTypeName","src":"4274:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"4283:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3953,"nodeType":"UserDefinedTypeName","pathNode":{"id":3952,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3824,"src":"4283:12:23"},"referencedDeclaration":3824,"src":"4283:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"4273:23:23"},"scope":4175,"src":"4164:336:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4017,"nodeType":"Block","src":"4781:136:23","statements":[{"assignments":[4001,4004],"declarations":[{"constant":false,"id":4001,"mutability":"mutable","name":"recovered","nameLocation":"4800:9:23","nodeType":"VariableDeclaration","scope":4017,"src":"4792:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4000,"name":"address","nodeType":"ElementaryTypeName","src":"4792:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"error","nameLocation":"4824:5:23","nodeType":"VariableDeclaration","scope":4017,"src":"4811:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":4003,"nodeType":"UserDefinedTypeName","pathNode":{"id":4002,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3824,"src":"4811:12:23"},"referencedDeclaration":3824,"src":"4811:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":4010,"initialValue":{"arguments":[{"id":4006,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"4844:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4007,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"4850:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4008,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"4853:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4005,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3914,3988,4082],"referencedDeclaration":3988,"src":"4833:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4833:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4791:65:23"},{"expression":{"arguments":[{"id":4012,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"4878:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":4011,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"4866:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3824_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4866:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4014,"nodeType":"ExpressionStatement","src":"4866:18:23"},{"expression":{"id":4015,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"4901:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3999,"id":4016,"nodeType":"Return","src":"4894:16:23"}]},"documentation":{"id":3989,"nodeType":"StructuredDocumentation","src":"4506:154:23","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":4018,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4674:7:23","nodeType":"FunctionDefinition","parameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"mutability":"mutable","name":"hash","nameLocation":"4699:4:23","nodeType":"VariableDeclaration","scope":4018,"src":"4691:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"r","nameLocation":"4721:1:23","nodeType":"VariableDeclaration","scope":4018,"src":"4713:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4713:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"vs","nameLocation":"4740:2:23","nodeType":"VariableDeclaration","scope":4018,"src":"4732:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4732:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4681:67:23"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4018,"src":"4772:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3997,"name":"address","nodeType":"ElementaryTypeName","src":"4772:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4771:9:23"},"scope":4175,"src":"4665:252:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4081,"nodeType":"Block","src":"5240:1345:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4037,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"6136:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6128:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4035,"name":"uint256","nodeType":"ElementaryTypeName","src":"6128:7:23","typeDescriptions":{}}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6128:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6141:66:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6128:79:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4050,"nodeType":"IfStatement","src":"6124:161:23","trueBody":{"id":4049,"nodeType":"Block","src":"6209:76:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6239:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6231:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4041,"name":"address","nodeType":"ElementaryTypeName","src":"6231:7:23","typeDescriptions":{}}},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6231:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4045,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"6243:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3824_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"6243:30:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":4047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6230:44:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":4034,"id":4048,"nodeType":"Return","src":"6223:51:23"}]}},{"assignments":[4052],"declarations":[{"constant":false,"id":4052,"mutability":"mutable","name":"signer","nameLocation":"6387:6:23","nodeType":"VariableDeclaration","scope":4081,"src":"6379:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4051,"name":"address","nodeType":"ElementaryTypeName","src":"6379:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4059,"initialValue":{"arguments":[{"id":4054,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"6406:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4055,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"6412:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4056,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"6415:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4057,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"6418:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4053,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6396:9:23","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6396:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6379:41:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"6434:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6452:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6444:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4061,"name":"address","nodeType":"ElementaryTypeName","src":"6444:7:23","typeDescriptions":{}}},"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6444:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6434:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4075,"nodeType":"IfStatement","src":"6430:101:23","trueBody":{"id":4074,"nodeType":"Block","src":"6456:75:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6486:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6478:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4066,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:23","typeDescriptions":{}}},"id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6478:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4070,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"6490:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3824_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3820,"src":"6490:29:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":4072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6477:43:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":4034,"id":4073,"nodeType":"Return","src":"6470:50:23"}]}},{"expression":{"components":[{"id":4076,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"6549:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4077,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"6557:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3824_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"6557:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":4079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6548:30:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":4034,"id":4080,"nodeType":"Return","src":"6541:37:23"}]},"documentation":{"id":4019,"nodeType":"StructuredDocumentation","src":"4923:163:23","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":4082,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5100:10:23","nodeType":"FunctionDefinition","parameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"hash","nameLocation":"5128:4:23","nodeType":"VariableDeclaration","scope":4082,"src":"5120:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5120:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4023,"mutability":"mutable","name":"v","nameLocation":"5148:1:23","nodeType":"VariableDeclaration","scope":4082,"src":"5142:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4022,"name":"uint8","nodeType":"ElementaryTypeName","src":"5142:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4025,"mutability":"mutable","name":"r","nameLocation":"5167:1:23","nodeType":"VariableDeclaration","scope":4082,"src":"5159:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5159:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4027,"mutability":"mutable","name":"s","nameLocation":"5186:1:23","nodeType":"VariableDeclaration","scope":4082,"src":"5178:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5178:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5110:83:23"},"returnParameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4082,"src":"5217:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4029,"name":"address","nodeType":"ElementaryTypeName","src":"5217:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4082,"src":"5226:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":4032,"nodeType":"UserDefinedTypeName","pathNode":{"id":4031,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3824,"src":"5226:12:23"},"referencedDeclaration":3824,"src":"5226:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"5216:23:23"},"scope":4175,"src":"5091:1494:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4114,"nodeType":"Block","src":"6850:138:23","statements":[{"assignments":[4097,4100],"declarations":[{"constant":false,"id":4097,"mutability":"mutable","name":"recovered","nameLocation":"6869:9:23","nodeType":"VariableDeclaration","scope":4114,"src":"6861:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4096,"name":"address","nodeType":"ElementaryTypeName","src":"6861:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"error","nameLocation":"6893:5:23","nodeType":"VariableDeclaration","scope":4114,"src":"6880:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":4099,"nodeType":"UserDefinedTypeName","pathNode":{"id":4098,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3824,"src":"6880:12:23"},"referencedDeclaration":3824,"src":"6880:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":4107,"initialValue":{"arguments":[{"id":4102,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"6913:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4103,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"6919:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4104,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"6922:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4105,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"6925:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4101,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3914,3988,4082],"referencedDeclaration":4082,"src":"6902:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6902:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3824_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6860:67:23"},{"expression":{"arguments":[{"id":4109,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"6949:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3824","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":4108,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"6937:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3824_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6937:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4111,"nodeType":"ExpressionStatement","src":"6937:18:23"},{"expression":{"id":4112,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"6972:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4095,"id":4113,"nodeType":"Return","src":"6965:16:23"}]},"documentation":{"id":4083,"nodeType":"StructuredDocumentation","src":"6591:122:23","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4115,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6727:7:23","nodeType":"FunctionDefinition","parameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"hash","nameLocation":"6752:4:23","nodeType":"VariableDeclaration","scope":4115,"src":"6744:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6744:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4087,"mutability":"mutable","name":"v","nameLocation":"6772:1:23","nodeType":"VariableDeclaration","scope":4115,"src":"6766:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4086,"name":"uint8","nodeType":"ElementaryTypeName","src":"6766:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4089,"mutability":"mutable","name":"r","nameLocation":"6791:1:23","nodeType":"VariableDeclaration","scope":4115,"src":"6783:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6783:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4091,"mutability":"mutable","name":"s","nameLocation":"6810:1:23","nodeType":"VariableDeclaration","scope":4115,"src":"6802:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6802:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6734:83:23"},"returnParameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4115,"src":"6841:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4093,"name":"address","nodeType":"ElementaryTypeName","src":"6841:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6840:9:23"},"scope":4175,"src":"6718:270:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4131,"nodeType":"Block","src":"7356:187:23","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7494:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":4127,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"7530:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4124,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7477:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7477:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7477:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4123,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7467:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7467:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4122,"id":4130,"nodeType":"Return","src":"7460:76:23"}]},"documentation":{"id":4116,"nodeType":"StructuredDocumentation","src":"6994:279:23","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4132,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7287:22:23","nodeType":"FunctionDefinition","parameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"hash","nameLocation":"7318:4:23","nodeType":"VariableDeclaration","scope":4132,"src":"7310:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7310:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7309:14:23"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4132,"src":"7347:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7347:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7346:9:23"},"scope":4175,"src":"7278:265:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4153,"nodeType":"Block","src":"7908:127:23","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7952:32:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":4146,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"8014:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8014:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4144,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"7986:18:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3814_$","typeString":"type(library StringsUpgradeable)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3697,"src":"7986:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7986:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4149,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"8025:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4141,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7935:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7935:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7935:92:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4140,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7925:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7925:103:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4139,"id":4152,"nodeType":"Return","src":"7918:110:23"}]},"documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"7549:274:23","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4154,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7837:22:23","nodeType":"FunctionDefinition","parameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"s","nameLocation":"7873:1:23","nodeType":"VariableDeclaration","scope":4154,"src":"7860:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4134,"name":"bytes","nodeType":"ElementaryTypeName","src":"7860:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7859:16:23"},"returnParameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4154,"src":"7899:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7899:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7898:9:23"},"scope":4175,"src":"7828:207:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4173,"nodeType":"Block","src":"8476:92:23","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8520:10:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":4168,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"8532:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4169,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"8549:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4165,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8503:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8503:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8503:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4164,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8493:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8493:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4163,"id":4172,"nodeType":"Return","src":"8486:75:23"}]},"documentation":{"id":4155,"nodeType":"StructuredDocumentation","src":"8041:328:23","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":4174,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8383:15:23","nodeType":"FunctionDefinition","parameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4157,"mutability":"mutable","name":"domainSeparator","nameLocation":"8407:15:23","nodeType":"VariableDeclaration","scope":4174,"src":"8399:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8399:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4159,"mutability":"mutable","name":"structHash","nameLocation":"8432:10:23","nodeType":"VariableDeclaration","scope":4174,"src":"8424:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8424:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8398:45:23"},"returnParameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4174,"src":"8467:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8467:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8466:9:23"},"scope":4175,"src":"8374:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4176,"src":"380:8190:23","usedErrors":[]}],"src":"112:8459:23"},"id":23},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ECDSAUpgradeable":[4175],"EIP712Upgradeable":[4325],"Initializable":[957],"MathUpgradeable":[5246],"StringsUpgradeable":[3814]},"id":4326,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4177,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:24"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"./ECDSAUpgradeable.sol","id":4178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4326,"sourceUnit":4176,"src":"138:32:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":4179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4326,"sourceUnit":958,"src":"171:45:24","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4181,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"1430:13:24"},"id":4182,"nodeType":"InheritanceSpecifier","src":"1430:13:24"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4180,"nodeType":"StructuredDocumentation","src":"218:1172:24","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._\n @custom:storage-size 52"},"fullyImplemented":true,"id":4325,"linearizedBaseContracts":[4325,957],"name":"EIP712Upgradeable","nameLocation":"1409:17:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4184,"mutability":"mutable","name":"_HASHED_NAME","nameLocation":"1511:12:24","nodeType":"VariableDeclaration","scope":4325,"src":"1495:28:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1495:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4186,"mutability":"mutable","name":"_HASHED_VERSION","nameLocation":"1545:15:24","nodeType":"VariableDeclaration","scope":4325,"src":"1529:31:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1529:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":4191,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1591:10:24","nodeType":"VariableDeclaration","scope":4325,"src":"1566:133:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1566:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1614:84:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4188,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1604:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1604:95:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":4206,"nodeType":"Block","src":"2407:55:24","statements":[{"expression":{"arguments":[{"id":4202,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"2441:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4203,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"2447:7:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4201,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"2417:23:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2417:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4205,"nodeType":"ExpressionStatement","src":"2417:38:24"}]},"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"1751:559:24","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4207,"implemented":true,"kind":"function","modifiers":[{"id":4199,"kind":"modifierInvocation","modifierName":{"id":4198,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2390:16:24"},"nodeType":"ModifierInvocation","src":"2390:16:24"}],"name":"__EIP712_init","nameLocation":"2324:13:24","nodeType":"FunctionDefinition","parameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"name","nameLocation":"2352:4:24","nodeType":"VariableDeclaration","scope":4207,"src":"2338:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4193,"name":"string","nodeType":"ElementaryTypeName","src":"2338:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4196,"mutability":"mutable","name":"version","nameLocation":"2372:7:24","nodeType":"VariableDeclaration","scope":4207,"src":"2358:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4195,"name":"string","nodeType":"ElementaryTypeName","src":"2358:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2337:43:24"},"returnParameters":{"id":4200,"nodeType":"ParameterList","parameters":[],"src":"2407:0:24"},"scope":4325,"src":"2315:147:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4242,"nodeType":"Block","src":"2570:195:24","statements":[{"assignments":[4217],"declarations":[{"constant":false,"id":4217,"mutability":"mutable","name":"hashedName","nameLocation":"2588:10:24","nodeType":"VariableDeclaration","scope":4242,"src":"2580:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2580:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4224,"initialValue":{"arguments":[{"arguments":[{"id":4221,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"2617:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2611:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4219,"name":"bytes","nodeType":"ElementaryTypeName","src":"2611:5:24","typeDescriptions":{}}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2611:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4218,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2601:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2601:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2580:43:24"},{"assignments":[4226],"declarations":[{"constant":false,"id":4226,"mutability":"mutable","name":"hashedVersion","nameLocation":"2641:13:24","nodeType":"VariableDeclaration","scope":4242,"src":"2633:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2633:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4233,"initialValue":{"arguments":[{"arguments":[{"id":4230,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"2673:7:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2667:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4228,"name":"bytes","nodeType":"ElementaryTypeName","src":"2667:5:24","typeDescriptions":{}}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2667:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4227,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2657:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2657:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2633:49:24"},{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4234,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"2692:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4235,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2707:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2692:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4237,"nodeType":"ExpressionStatement","src":"2692:25:24"},{"expression":{"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4238,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"2727:15:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4239,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"2745:13:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2727:31:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4241,"nodeType":"ExpressionStatement","src":"2727:31:24"}]},"id":4243,"implemented":true,"kind":"function","modifiers":[{"id":4214,"kind":"modifierInvocation","modifierName":{"id":4213,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"2553:16:24"},"nodeType":"ModifierInvocation","src":"2553:16:24"}],"name":"__EIP712_init_unchained","nameLocation":"2477:23:24","nodeType":"FunctionDefinition","parameters":{"id":4212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4209,"mutability":"mutable","name":"name","nameLocation":"2515:4:24","nodeType":"VariableDeclaration","scope":4243,"src":"2501:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4208,"name":"string","nodeType":"ElementaryTypeName","src":"2501:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"version","nameLocation":"2535:7:24","nodeType":"VariableDeclaration","scope":4243,"src":"2521:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4210,"name":"string","nodeType":"ElementaryTypeName","src":"2521:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2500:43:24"},"returnParameters":{"id":4215,"nodeType":"ParameterList","parameters":[],"src":"2570:0:24"},"scope":4325,"src":"2468:297:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4257,"nodeType":"Block","src":"2913:98:24","statements":[{"expression":{"arguments":[{"id":4250,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"2952:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4251,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"2964:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2964:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4253,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"2983:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2983:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4249,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"2930:21:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2930:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4248,"id":4256,"nodeType":"Return","src":"2923:81:24"}]},"documentation":{"id":4244,"nodeType":"StructuredDocumentation","src":"2771:75:24","text":" @dev Returns the domain separator for the current chain."},"id":4258,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"2860:18:24","nodeType":"FunctionDefinition","parameters":{"id":4245,"nodeType":"ParameterList","parameters":[],"src":"2878:2:24"},"returnParameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4258,"src":"2904:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2904:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2903:9:24"},"scope":4325,"src":"2851:160:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4284,"nodeType":"Block","src":"3166:108:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":4272,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"3204:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4273,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"3214:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4274,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"3224:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4275,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3237:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3237:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4279,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3260:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$4325","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$4325","typeString":"contract EIP712Upgradeable"}],"id":4278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3252:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4277,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:24","typeDescriptions":{}}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3252:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4270,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3193:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3193:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3193:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4269,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3183:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3183:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4268,"id":4283,"nodeType":"Return","src":"3176:91:24"}]},"id":4285,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3026:21:24","nodeType":"FunctionDefinition","parameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"typeHash","nameLocation":"3065:8:24","nodeType":"VariableDeclaration","scope":4285,"src":"3057:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3057:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4262,"mutability":"mutable","name":"nameHash","nameLocation":"3091:8:24","nodeType":"VariableDeclaration","scope":4285,"src":"3083:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3083:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4264,"mutability":"mutable","name":"versionHash","nameLocation":"3117:11:24","nodeType":"VariableDeclaration","scope":4285,"src":"3109:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3109:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3047:87:24"},"returnParameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4285,"src":"3157:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3156:9:24"},"scope":4325,"src":"3017:257:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4300,"nodeType":"Block","src":"3985:90:24","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4295,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"4035:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4035:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4297,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"4057:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4293,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"4002:16:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$4175_$","typeString":"type(library ECDSAUpgradeable)"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4174,"src":"4002:32:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4002:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4292,"id":4299,"nodeType":"Return","src":"3995:73:24"}]},"documentation":{"id":4286,"nodeType":"StructuredDocumentation","src":"3280:614:24","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"3908:16:24","nodeType":"FunctionDefinition","parameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4288,"mutability":"mutable","name":"structHash","nameLocation":"3933:10:24","nodeType":"VariableDeclaration","scope":4301,"src":"3925:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3925:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3924:20:24"},"returnParameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"3976:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3976:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3975:9:24"},"scope":4325,"src":"3899:176:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4309,"nodeType":"Block","src":"4378:36:24","statements":[{"expression":{"id":4307,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"4395:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4306,"id":4308,"nodeType":"Return","src":"4388:19:24"}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"4081:225:24","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":4310,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"4320:15:24","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[],"src":"4335:2:24"},"returnParameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4310,"src":"4369:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4369:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4368:9:24"},"scope":4325,"src":"4311:103:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4318,"nodeType":"Block","src":"4723:39:24","statements":[{"expression":{"id":4316,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"4740:15:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4315,"id":4317,"nodeType":"Return","src":"4733:22:24"}]},"documentation":{"id":4311,"nodeType":"StructuredDocumentation","src":"4420:228:24","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":4319,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"4662:18:24","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[],"src":"4680:2:24"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4319,"src":"4714:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4714:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4713:9:24"},"scope":4325,"src":"4653:109:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":4320,"nodeType":"StructuredDocumentation","src":"4768:254:24","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":4324,"mutability":"mutable","name":"__gap","nameLocation":"5047:5:24","nodeType":"VariableDeclaration","scope":4325,"src":"5027:25:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"5027:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4323,"length":{"hexValue":"3530","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5035:2:24","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"5027:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":4326,"src":"1391:3664:24","usedErrors":[]}],"src":"113:4943:24"},"id":24},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3523],"ERC165Upgradeable":[4369],"IERC165Upgradeable":[4381],"Initializable":[957]},"id":4370,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4327,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:25"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":4328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4370,"sourceUnit":4382,"src":"124:34:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":4329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4370,"sourceUnit":958,"src":"159:45:25","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4331,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"822:13:25"},"id":4332,"nodeType":"InheritanceSpecifier","src":"822:13:25"},{"baseName":{"id":4333,"name":"IERC165Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":4381,"src":"837:18:25"},"id":4334,"nodeType":"InheritanceSpecifier","src":"837:18:25"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4330,"nodeType":"StructuredDocumentation","src":"206:576:25","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":4369,"linearizedBaseContracts":[4369,4381,957],"name":"ERC165Upgradeable","nameLocation":"801:17:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":4339,"nodeType":"Block","src":"913:7:25","statements":[]},"id":4340,"implemented":true,"kind":"function","modifiers":[{"id":4337,"kind":"modifierInvocation","modifierName":{"id":4336,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"896:16:25"},"nodeType":"ModifierInvocation","src":"896:16:25"}],"name":"__ERC165_init","nameLocation":"871:13:25","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[],"src":"884:2:25"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[],"src":"913:0:25"},"scope":4369,"src":"862:58:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4345,"nodeType":"Block","src":"987:7:25","statements":[]},"id":4346,"implemented":true,"kind":"function","modifiers":[{"id":4343,"kind":"modifierInvocation","modifierName":{"id":4342,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":902,"src":"970:16:25"},"nodeType":"ModifierInvocation","src":"970:16:25"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:25","nodeType":"FunctionDefinition","parameters":{"id":4341,"nodeType":"ParameterList","parameters":[],"src":"958:2:25"},"returnParameters":{"id":4344,"nodeType":"ParameterList","parameters":[],"src":"987:0:25"},"scope":4369,"src":"926:68:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4380],"body":{"id":4362,"nodeType":"Block","src":"1151:75:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"1168:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4357,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"1188:18:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$4381_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$4381_$","typeString":"type(contract IERC165Upgradeable)"}],"id":4356,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1183:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$4381","typeString":"type(contract IERC165Upgradeable)"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4354,"id":4361,"nodeType":"Return","src":"1161:58:25"}]},"documentation":{"id":4347,"nodeType":"StructuredDocumentation","src":"999:56:25","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4363,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:25","nodeType":"FunctionDefinition","overrides":{"id":4351,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:25"},"parameters":{"id":4350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4349,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:25","nodeType":"VariableDeclaration","scope":4363,"src":"1087:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4348,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:25"},"returnParameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4363,"src":"1145:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4352,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:25"},"scope":4369,"src":"1060:166:25","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":4364,"nodeType":"StructuredDocumentation","src":"1232:254:25","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":4368,"mutability":"mutable","name":"__gap","nameLocation":"1511:5:25","nodeType":"VariableDeclaration","scope":4369,"src":"1491:25:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4367,"length":{"hexValue":"3530","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:25","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":4370,"src":"783:736:25","usedErrors":[]}],"src":"99:1421:25"},"id":25},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[4381]},"id":4382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4371,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":4372,"nodeType":"StructuredDocumentation","src":"125:279:26","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4381,"linearizedBaseContracts":[4381],"name":"IERC165Upgradeable","nameLocation":"415:18:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4373,"nodeType":"StructuredDocumentation","src":"440:340:26","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4380,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:26","nodeType":"FunctionDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:26","nodeType":"VariableDeclaration","scope":4380,"src":"812:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4374,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:26"},"returnParameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4380,"src":"855:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4377,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:26"},"scope":4381,"src":"785:76:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4382,"src":"405:458:26","usedErrors":[]}],"src":"100:764:26"},"id":26},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[5246]},"id":5247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4383,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"128:73:27","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5246,"linearizedBaseContracts":[5246],"name":"MathUpgradeable","nameLocation":"210:15:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":4388,"members":[{"id":4385,"name":"Down","nameLocation":"256:4:27","nodeType":"EnumValue","src":"256:4:27"},{"id":4386,"name":"Up","nameLocation":"298:2:27","nodeType":"EnumValue","src":"298:2:27"},{"id":4387,"name":"Zero","nameLocation":"329:4:27","nodeType":"EnumValue","src":"329:4:27"}],"name":"Rounding","nameLocation":"237:8:27","nodeType":"EnumDefinition","src":"232:122:27"},{"body":{"id":4405,"nodeType":"Block","src":"491:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"508:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"512:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"520:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:27","trueExpression":{"id":4401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"516:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4397,"id":4404,"nodeType":"Return","src":"501:20:27"}]},"documentation":{"id":4389,"nodeType":"StructuredDocumentation","src":"360:59:27","text":" @dev Returns the largest of two numbers."},"id":4406,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:27","nodeType":"FunctionDefinition","parameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"a","nameLocation":"445:1:27","nodeType":"VariableDeclaration","scope":4406,"src":"437:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4393,"mutability":"mutable","name":"b","nameLocation":"456:1:27","nodeType":"VariableDeclaration","scope":4406,"src":"448:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:27"},"returnParameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4406,"src":"482:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:27"},"scope":5246,"src":"424:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4423,"nodeType":"Block","src":"666:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"683:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"687:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4420,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"695:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:27","trueExpression":{"id":4419,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"691:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4415,"id":4422,"nodeType":"Return","src":"676:20:27"}]},"documentation":{"id":4407,"nodeType":"StructuredDocumentation","src":"534:60:27","text":" @dev Returns the smallest of two numbers."},"id":4424,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:27","nodeType":"FunctionDefinition","parameters":{"id":4412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4409,"mutability":"mutable","name":"a","nameLocation":"620:1:27","nodeType":"VariableDeclaration","scope":4424,"src":"612:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4408,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4411,"mutability":"mutable","name":"b","nameLocation":"631:1:27","nodeType":"VariableDeclaration","scope":4424,"src":"623:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:27"},"returnParameters":{"id":4415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4424,"src":"657:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:27"},"scope":5246,"src":"599:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4446,"nodeType":"Block","src":"887:82:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"942:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4435,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"946:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"952:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"956:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4433,"id":4445,"nodeType":"Return","src":"934:28:27"}]},"documentation":{"id":4425,"nodeType":"StructuredDocumentation","src":"709:102:27","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4447,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:27","nodeType":"FunctionDefinition","parameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"a","nameLocation":"841:1:27","nodeType":"VariableDeclaration","scope":4447,"src":"833:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4429,"mutability":"mutable","name":"b","nameLocation":"852:1:27","nodeType":"VariableDeclaration","scope":4447,"src":"844:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:27"},"returnParameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4447,"src":"878:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:27"},"scope":5246,"src":"816:153:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4471,"nodeType":"Block","src":"1239:123:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4457,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"1327:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4461,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"1341:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4465,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"1350:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:27","trueExpression":{"hexValue":"30","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4456,"id":4470,"nodeType":"Return","src":"1320:35:27"}]},"documentation":{"id":4448,"nodeType":"StructuredDocumentation","src":"975:188:27","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":4472,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:27","nodeType":"FunctionDefinition","parameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"a","nameLocation":"1193:1:27","nodeType":"VariableDeclaration","scope":4472,"src":"1185:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4452,"mutability":"mutable","name":"b","nameLocation":"1204:1:27","nodeType":"VariableDeclaration","scope":4472,"src":"1196:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:27"},"returnParameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4472,"src":"1230:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:27"},"scope":5246,"src":"1168:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4593,"nodeType":"Block","src":"1806:3797:27","statements":[{"id":4592,"nodeType":"UncheckedBlock","src":"1816:3781:27","statements":[{"assignments":[4485],"declarations":[{"constant":false,"id":4485,"mutability":"mutable","name":"prod0","nameLocation":"2145:5:27","nodeType":"VariableDeclaration","scope":4592,"src":"2137:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4486,"nodeType":"VariableDeclarationStatement","src":"2137:13:27"},{"assignments":[4488],"declarations":[{"constant":false,"id":4488,"mutability":"mutable","name":"prod1","nameLocation":"2217:5:27","nodeType":"VariableDeclaration","scope":4592,"src":"2209:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2209:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4489,"nodeType":"VariableDeclarationStatement","src":"2209:13:27"},{"AST":{"nodeType":"YulBlock","src":"2289:157:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2307:30:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2324:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"2327:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2334:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2330:3:27"},"nodeType":"YulFunctionCall","src":"2330:6:27"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2317:6:27"},"nodeType":"YulFunctionCall","src":"2317:20:27"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2311:2:27","type":""}]},{"nodeType":"YulAssignment","src":"2354:18:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2367:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"2370:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2363:3:27"},"nodeType":"YulFunctionCall","src":"2363:9:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2354:5:27"}]},{"nodeType":"YulAssignment","src":"2389:43:27","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2406:2:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"2410:5:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2402:3:27"},"nodeType":"YulFunctionCall","src":"2402:14:27"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2421:2:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"2425:5:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2418:2:27"},"nodeType":"YulFunctionCall","src":"2418:13:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2398:3:27"},"nodeType":"YulFunctionCall","src":"2398:34:27"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2389:5:27"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4485,"isOffset":false,"isSlot":false,"src":"2354:5:27","valueSize":1},{"declaration":4485,"isOffset":false,"isSlot":false,"src":"2410:5:27","valueSize":1},{"declaration":4485,"isOffset":false,"isSlot":false,"src":"2425:5:27","valueSize":1},{"declaration":4488,"isOffset":false,"isSlot":false,"src":"2389:5:27","valueSize":1},{"declaration":4475,"isOffset":false,"isSlot":false,"src":"2324:1:27","valueSize":1},{"declaration":4475,"isOffset":false,"isSlot":false,"src":"2367:1:27","valueSize":1},{"declaration":4477,"isOffset":false,"isSlot":false,"src":"2327:1:27","valueSize":1},{"declaration":4477,"isOffset":false,"isSlot":false,"src":"2370:1:27","valueSize":1}],"id":4490,"nodeType":"InlineAssembly","src":"2280:166:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4491,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"2527:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2536:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2527:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4499,"nodeType":"IfStatement","src":"2523:75:27","trueBody":{"id":4498,"nodeType":"Block","src":"2539:59:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4494,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"2564:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4495,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"2572:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2564:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4483,"id":4497,"nodeType":"Return","src":"2557:26:27"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"2708:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4502,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"2722:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2708:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2700:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2700:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4505,"nodeType":"ExpressionStatement","src":"2700:28:27"},{"assignments":[4507],"declarations":[{"constant":false,"id":4507,"mutability":"mutable","name":"remainder","nameLocation":"2992:9:27","nodeType":"VariableDeclaration","scope":4592,"src":"2984:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4506,"name":"uint256","nodeType":"ElementaryTypeName","src":"2984:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4508,"nodeType":"VariableDeclarationStatement","src":"2984:17:27"},{"AST":{"nodeType":"YulBlock","src":"3024:291:27","statements":[{"nodeType":"YulAssignment","src":"3093:38:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3113:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"3116:1:27"},{"name":"denominator","nodeType":"YulIdentifier","src":"3119:11:27"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3106:6:27"},"nodeType":"YulFunctionCall","src":"3106:25:27"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3093:9:27"}]},{"nodeType":"YulAssignment","src":"3213:41:27","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3226:5:27"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3236:9:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"3247:5:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3233:2:27"},"nodeType":"YulFunctionCall","src":"3233:20:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3222:3:27"},"nodeType":"YulFunctionCall","src":"3222:32:27"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3213:5:27"}]},{"nodeType":"YulAssignment","src":"3271:30:27","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3284:5:27"},{"name":"remainder","nodeType":"YulIdentifier","src":"3291:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3280:3:27"},"nodeType":"YulFunctionCall","src":"3280:21:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3271:5:27"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4479,"isOffset":false,"isSlot":false,"src":"3119:11:27","valueSize":1},{"declaration":4485,"isOffset":false,"isSlot":false,"src":"3247:5:27","valueSize":1},{"declaration":4485,"isOffset":false,"isSlot":false,"src":"3271:5:27","valueSize":1},{"declaration":4485,"isOffset":false,"isSlot":false,"src":"3284:5:27","valueSize":1},{"declaration":4488,"isOffset":false,"isSlot":false,"src":"3213:5:27","valueSize":1},{"declaration":4488,"isOffset":false,"isSlot":false,"src":"3226:5:27","valueSize":1},{"declaration":4507,"isOffset":false,"isSlot":false,"src":"3093:9:27","valueSize":1},{"declaration":4507,"isOffset":false,"isSlot":false,"src":"3236:9:27","valueSize":1},{"declaration":4507,"isOffset":false,"isSlot":false,"src":"3291:9:27","valueSize":1},{"declaration":4475,"isOffset":false,"isSlot":false,"src":"3113:1:27","valueSize":1},{"declaration":4477,"isOffset":false,"isSlot":false,"src":"3116:1:27","valueSize":1}],"id":4509,"nodeType":"InlineAssembly","src":"3015:300:27"},{"assignments":[4511],"declarations":[{"constant":false,"id":4511,"mutability":"mutable","name":"twos","nameLocation":"3630:4:27","nodeType":"VariableDeclaration","scope":4592,"src":"3622:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4510,"name":"uint256","nodeType":"ElementaryTypeName","src":"3622:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4519,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4512,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3637:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3652:12:27","subExpression":{"id":4513,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3653:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3667:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3652:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3651:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3637:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3622:47:27"},{"AST":{"nodeType":"YulBlock","src":"3692:362:27","statements":[{"nodeType":"YulAssignment","src":"3757:37:27","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3776:11:27"},{"name":"twos","nodeType":"YulIdentifier","src":"3789:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3772:3:27"},"nodeType":"YulFunctionCall","src":"3772:22:27"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3757:11:27"}]},{"nodeType":"YulAssignment","src":"3861:25:27","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3874:5:27"},{"name":"twos","nodeType":"YulIdentifier","src":"3881:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3870:3:27"},"nodeType":"YulFunctionCall","src":"3870:16:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3861:5:27"}]},{"nodeType":"YulAssignment","src":"4001:39:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4021:1:27","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4024:4:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4017:3:27"},"nodeType":"YulFunctionCall","src":"4017:12:27"},{"name":"twos","nodeType":"YulIdentifier","src":"4031:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4013:3:27"},"nodeType":"YulFunctionCall","src":"4013:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4038:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:27"},"nodeType":"YulFunctionCall","src":"4009:31:27"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4001:4:27"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4479,"isOffset":false,"isSlot":false,"src":"3757:11:27","valueSize":1},{"declaration":4479,"isOffset":false,"isSlot":false,"src":"3776:11:27","valueSize":1},{"declaration":4485,"isOffset":false,"isSlot":false,"src":"3861:5:27","valueSize":1},{"declaration":4485,"isOffset":false,"isSlot":false,"src":"3874:5:27","valueSize":1},{"declaration":4511,"isOffset":false,"isSlot":false,"src":"3789:4:27","valueSize":1},{"declaration":4511,"isOffset":false,"isSlot":false,"src":"3881:4:27","valueSize":1},{"declaration":4511,"isOffset":false,"isSlot":false,"src":"4001:4:27","valueSize":1},{"declaration":4511,"isOffset":false,"isSlot":false,"src":"4024:4:27","valueSize":1},{"declaration":4511,"isOffset":false,"isSlot":false,"src":"4031:4:27","valueSize":1}],"id":4520,"nodeType":"InlineAssembly","src":"3683:371:27"},{"expression":{"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4521,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"4120:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4522,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"4129:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4523,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"4137:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4129:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4120:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4526,"nodeType":"ExpressionStatement","src":"4120:21:27"},{"assignments":[4528],"declarations":[{"constant":false,"id":4528,"mutability":"mutable","name":"inverse","nameLocation":"4467:7:27","nodeType":"VariableDeclaration","scope":4592,"src":"4459:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"4459:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4535,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4478:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4530,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"4482:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4478:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4477:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4497:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4477:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4459:39:27"},{"expression":{"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4536,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4715:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4726:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"4730:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4539,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4744:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4730:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4726:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4543,"nodeType":"ExpressionStatement","src":"4715:36:27"},{"expression":{"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4544,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4784:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4795:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"4799:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4547,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4813:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4799:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4795:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4551,"nodeType":"ExpressionStatement","src":"4784:36:27"},{"expression":{"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4552,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4854:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4865:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4554,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"4869:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4555,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4883:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4869:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4865:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4559,"nodeType":"ExpressionStatement","src":"4854:36:27"},{"expression":{"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4560,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4924:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4935:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"4939:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4563,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4953:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4939:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4935:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4567,"nodeType":"ExpressionStatement","src":"4924:36:27"},{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4568,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4994:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5005:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"5009:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4571,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"5023:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5009:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5005:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4575,"nodeType":"ExpressionStatement","src":"4994:36:27"},{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4576,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"5065:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5076:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"5080:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4579,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"5094:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5080:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"5065:36:27"},{"expression":{"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"5535:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"5544:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4586,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"5552:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5544:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5535:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4589,"nodeType":"ExpressionStatement","src":"5535:24:27"},{"expression":{"id":4590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"5580:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4483,"id":4591,"nodeType":"Return","src":"5573:13:27"}]}]},"documentation":{"id":4473,"nodeType":"StructuredDocumentation","src":"1368:305:27","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4594,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:27","nodeType":"FunctionDefinition","parameters":{"id":4480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"x","nameLocation":"1711:1:27","nodeType":"VariableDeclaration","scope":4594,"src":"1703:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1703:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4477,"mutability":"mutable","name":"y","nameLocation":"1730:1:27","nodeType":"VariableDeclaration","scope":4594,"src":"1722:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1722:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4479,"mutability":"mutable","name":"denominator","nameLocation":"1749:11:27","nodeType":"VariableDeclaration","scope":4594,"src":"1741:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:73:27"},"returnParameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"result","nameLocation":"1798:6:27","nodeType":"VariableDeclaration","scope":4594,"src":"1790:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1790:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1789:16:27"},"scope":5246,"src":"1678:3925:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4637,"nodeType":"Block","src":"5883:189:27","statements":[{"assignments":[4610],"declarations":[{"constant":false,"id":4610,"mutability":"mutable","name":"result","nameLocation":"5901:6:27","nodeType":"VariableDeclaration","scope":4637,"src":"5893:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"5893:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4616,"initialValue":{"arguments":[{"id":4612,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"5917:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4613,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"5920:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4614,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"5923:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4611,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4594,4638],"referencedDeclaration":4594,"src":"5910:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5910:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5893:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"5949:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4618,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"5961:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4388_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4386,"src":"5961:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"src":"5949:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4622,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"5983:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4623,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"5986:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4624,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"5989:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4621,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5976:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5976:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6004:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5976:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5949:56:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4634,"nodeType":"IfStatement","src":"5945:98:27","trueBody":{"id":4633,"nodeType":"Block","src":"6007:36:27","statements":[{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"6021:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6031:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6021:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4632,"nodeType":"ExpressionStatement","src":"6021:11:27"}]}},{"expression":{"id":4635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"6059:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4608,"id":4636,"nodeType":"Return","src":"6052:13:27"}]},"documentation":{"id":4595,"nodeType":"StructuredDocumentation","src":"5609:121:27","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4638,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5744:6:27","nodeType":"FunctionDefinition","parameters":{"id":4605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"x","nameLocation":"5768:1:27","nodeType":"VariableDeclaration","scope":4638,"src":"5760:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"5760:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4599,"mutability":"mutable","name":"y","nameLocation":"5787:1:27","nodeType":"VariableDeclaration","scope":4638,"src":"5779:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"5779:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4601,"mutability":"mutable","name":"denominator","nameLocation":"5806:11:27","nodeType":"VariableDeclaration","scope":4638,"src":"5798:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"5798:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"rounding","nameLocation":"5836:8:27","nodeType":"VariableDeclaration","scope":4638,"src":"5827:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4603,"nodeType":"UserDefinedTypeName","pathNode":{"id":4602,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4388,"src":"5827:8:27"},"referencedDeclaration":4388,"src":"5827:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"5750:100:27"},"returnParameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"5874:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5874:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5873:9:27"},"scope":5246,"src":"5735:337:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4749,"nodeType":"Block","src":"6348:1585:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"6362:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6367:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6362:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4652,"nodeType":"IfStatement","src":"6358:45:27","trueBody":{"id":4651,"nodeType":"Block","src":"6370:33:27","statements":[{"expression":{"hexValue":"30","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6391:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4645,"id":4650,"nodeType":"Return","src":"6384:8:27"}]}},{"assignments":[4654],"declarations":[{"constant":false,"id":4654,"mutability":"mutable","name":"result","nameLocation":"7090:6:27","nodeType":"VariableDeclaration","scope":4749,"src":"7082:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"7082:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4663,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7099:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7110:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4656,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4918,4954],"referencedDeclaration":4918,"src":"7105:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7105:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7105:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7104:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7099:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7082:36:27"},{"id":4748,"nodeType":"UncheckedBlock","src":"7519:408:27","statements":[{"expression":{"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7543:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7553:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7562:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4667,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7566:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7562:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7553:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7552:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7577:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7552:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7543:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4674,"nodeType":"ExpressionStatement","src":"7543:35:27"},{"expression":{"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7592:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7602:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7611:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7615:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7611:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7602:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7601:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7626:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7601:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7592:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4685,"nodeType":"ExpressionStatement","src":"7592:35:27"},{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7641:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4687,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7651:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7660:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4689,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7664:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7660:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7651:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7650:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7675:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7650:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7641:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4696,"nodeType":"ExpressionStatement","src":"7641:35:27"},{"expression":{"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7690:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7700:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7709:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7713:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7699:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7724:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7699:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7690:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4707,"nodeType":"ExpressionStatement","src":"7690:35:27"},{"expression":{"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7739:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7749:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7758:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7762:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7758:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7749:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7748:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7773:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7748:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7739:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4718,"nodeType":"ExpressionStatement","src":"7739:35:27"},{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7788:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7798:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7807:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7811:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7807:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7798:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7797:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7822:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7797:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7788:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"7788:35:27"},{"expression":{"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7837:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7847:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4732,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7856:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7860:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7856:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7847:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7846:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7871:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7846:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7837:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4740,"nodeType":"ExpressionStatement","src":"7837:35:27"},{"expression":{"arguments":[{"id":4742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7897:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7905:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7909:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7905:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4741,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"7893:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7893:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4645,"id":4747,"nodeType":"Return","src":"7886:30:27"}]}]},"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"6078:208:27","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6300:4:27","nodeType":"FunctionDefinition","parameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"a","nameLocation":"6313:1:27","nodeType":"VariableDeclaration","scope":4750,"src":"6305:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6305:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6304:11:27"},"returnParameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4750,"src":"6339:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"6339:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6338:9:27"},"scope":5246,"src":"6291:1642:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4785,"nodeType":"Block","src":"8109:161:27","statements":[{"id":4784,"nodeType":"UncheckedBlock","src":"8119:145:27","statements":[{"assignments":[4762],"declarations":[{"constant":false,"id":4762,"mutability":"mutable","name":"result","nameLocation":"8151:6:27","nodeType":"VariableDeclaration","scope":4784,"src":"8143:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"8143:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4766,"initialValue":{"arguments":[{"id":4764,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"8165:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4763,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4750,4786],"referencedDeclaration":4750,"src":"8160:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8160:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8143:24:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"8188:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4768,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"8198:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4769,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8210:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4388_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4386,"src":"8210:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"src":"8198:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"8225:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"8234:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8225:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"8243:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8225:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8198:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8251:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8198:54:27","trueExpression":{"hexValue":"31","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8247:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8197:56:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8188:65:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4760,"id":4783,"nodeType":"Return","src":"8181:72:27"}]}]},"documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"7939:89:27","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4786,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8042:4:27","nodeType":"FunctionDefinition","parameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"a","nameLocation":"8055:1:27","nodeType":"VariableDeclaration","scope":4786,"src":"8047:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"8047:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4756,"mutability":"mutable","name":"rounding","nameLocation":"8067:8:27","nodeType":"VariableDeclaration","scope":4786,"src":"8058:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4755,"nodeType":"UserDefinedTypeName","pathNode":{"id":4754,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4388,"src":"8058:8:27"},"referencedDeclaration":4388,"src":"8058:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8046:30:27"},"returnParameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4786,"src":"8100:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"8100:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8099:9:27"},"scope":5246,"src":"8033:237:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4917,"nodeType":"Block","src":"8455:922:27","statements":[{"assignments":[4795],"declarations":[{"constant":false,"id":4795,"mutability":"mutable","name":"result","nameLocation":"8473:6:27","nodeType":"VariableDeclaration","scope":4917,"src":"8465:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint256","nodeType":"ElementaryTypeName","src":"8465:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4797,"initialValue":{"hexValue":"30","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8482:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8465:18:27"},{"id":4914,"nodeType":"UncheckedBlock","src":"8493:855:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8521:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8530:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8521:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8521:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4812,"nodeType":"IfStatement","src":"8517:99:27","trueBody":{"id":4811,"nodeType":"Block","src":"8539:77:27","statements":[{"expression":{"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8557:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8567:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8557:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4806,"nodeType":"ExpressionStatement","src":"8557:13:27"},{"expression":{"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"8588:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8598:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8588:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4810,"nodeType":"ExpressionStatement","src":"8588:13:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8633:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8642:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8633:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8647:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8633:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4827,"nodeType":"IfStatement","src":"8629:96:27","trueBody":{"id":4826,"nodeType":"Block","src":"8650:75:27","statements":[{"expression":{"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8668:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8678:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8668:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4821,"nodeType":"ExpressionStatement","src":"8668:12:27"},{"expression":{"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"8698:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8708:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8698:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4825,"nodeType":"ExpressionStatement","src":"8698:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8742:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8751:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8742:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8756:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8742:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4842,"nodeType":"IfStatement","src":"8738:96:27","trueBody":{"id":4841,"nodeType":"Block","src":"8759:75:27","statements":[{"expression":{"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8777:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8787:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8777:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4836,"nodeType":"ExpressionStatement","src":"8777:12:27"},{"expression":{"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"8807:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8807:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4840,"nodeType":"ExpressionStatement","src":"8807:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8851:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8860:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8851:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8865:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8851:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4857,"nodeType":"IfStatement","src":"8847:96:27","trueBody":{"id":4856,"nodeType":"Block","src":"8868:75:27","statements":[{"expression":{"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8886:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8896:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8886:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4851,"nodeType":"ExpressionStatement","src":"8886:12:27"},{"expression":{"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"8916:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8926:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8916:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4855,"nodeType":"ExpressionStatement","src":"8916:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8960:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8960:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8973:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4872,"nodeType":"IfStatement","src":"8956:93:27","trueBody":{"id":4871,"nodeType":"Block","src":"8976:73:27","statements":[{"expression":{"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"8994:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9004:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8994:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4866,"nodeType":"ExpressionStatement","src":"8994:11:27"},{"expression":{"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"9023:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9033:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9023:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4870,"nodeType":"ExpressionStatement","src":"9023:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"9066:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9066:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9079:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9066:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4887,"nodeType":"IfStatement","src":"9062:93:27","trueBody":{"id":4886,"nodeType":"Block","src":"9082:73:27","statements":[{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"9100:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9100:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4881,"nodeType":"ExpressionStatement","src":"9100:11:27"},{"expression":{"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"9129:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9129:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4885,"nodeType":"ExpressionStatement","src":"9129:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"9172:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9181:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9172:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9185:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9172:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4902,"nodeType":"IfStatement","src":"9168:93:27","trueBody":{"id":4901,"nodeType":"Block","src":"9188:73:27","statements":[{"expression":{"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"9206:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9216:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9206:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4896,"nodeType":"ExpressionStatement","src":"9206:11:27"},{"expression":{"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4897,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"9235:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9245:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9235:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4900,"nodeType":"ExpressionStatement","src":"9235:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"9278:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9287:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9278:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9291:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9278:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4913,"nodeType":"IfStatement","src":"9274:64:27","trueBody":{"id":4912,"nodeType":"Block","src":"9294:44:27","statements":[{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"9312:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9322:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9312:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4911,"nodeType":"ExpressionStatement","src":"9312:11:27"}]}}]},{"expression":{"id":4915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"9364:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4793,"id":4916,"nodeType":"Return","src":"9357:13:27"}]},"documentation":{"id":4787,"nodeType":"StructuredDocumentation","src":"8276:113:27","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4918,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8403:4:27","nodeType":"FunctionDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"value","nameLocation":"8416:5:27","nodeType":"VariableDeclaration","scope":4918,"src":"8408:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"8408:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8407:15:27"},"returnParameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4918,"src":"8446:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"8446:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8445:9:27"},"scope":5246,"src":"8394:983:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4953,"nodeType":"Block","src":"9610:165:27","statements":[{"id":4952,"nodeType":"UncheckedBlock","src":"9620:149:27","statements":[{"assignments":[4930],"declarations":[{"constant":false,"id":4930,"mutability":"mutable","name":"result","nameLocation":"9652:6:27","nodeType":"VariableDeclaration","scope":4952,"src":"9644:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"9644:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4934,"initialValue":{"arguments":[{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"9666:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4931,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4918,4954],"referencedDeclaration":4918,"src":"9661:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9661:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9644:28:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"9693:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"9703:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4937,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"9715:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4388_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4386,"src":"9715:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"src":"9703:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9730:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"9735:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9730:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"9744:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9730:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9703:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9756:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9703:54:27","trueExpression":{"hexValue":"31","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9752:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9702:56:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9693:65:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4928,"id":4951,"nodeType":"Return","src":"9686:72:27"}]}]},"documentation":{"id":4919,"nodeType":"StructuredDocumentation","src":"9383:142:27","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9539:4:27","nodeType":"FunctionDefinition","parameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"value","nameLocation":"9552:5:27","nodeType":"VariableDeclaration","scope":4954,"src":"9544:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"9544:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4924,"mutability":"mutable","name":"rounding","nameLocation":"9568:8:27","nodeType":"VariableDeclaration","scope":4954,"src":"9559:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4923,"nodeType":"UserDefinedTypeName","pathNode":{"id":4922,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4388,"src":"9559:8:27"},"referencedDeclaration":4388,"src":"9559:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9543:34:27"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"9601:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"9601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9600:9:27"},"scope":5246,"src":"9530:245:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5082,"nodeType":"Block","src":"9962:828:27","statements":[{"assignments":[4963],"declarations":[{"constant":false,"id":4963,"mutability":"mutable","name":"result","nameLocation":"9980:6:27","nodeType":"VariableDeclaration","scope":5082,"src":"9972:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4962,"name":"uint256","nodeType":"ElementaryTypeName","src":"9972:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4965,"initialValue":{"hexValue":"30","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9989:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9972:18:27"},{"id":5079,"nodeType":"UncheckedBlock","src":"10000:761:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10028:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10037:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10041:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10037:6:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10028:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4982,"nodeType":"IfStatement","src":"10024:99:27","trueBody":{"id":4981,"nodeType":"Block","src":"10045:78:27","statements":[{"expression":{"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10063:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10072:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10076:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10072:6:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10063:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4976,"nodeType":"ExpressionStatement","src":"10063:15:27"},{"expression":{"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"10096:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10106:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10096:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4980,"nodeType":"ExpressionStatement","src":"10096:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10140:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10149:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10153:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10149:6:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10140:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4999,"nodeType":"IfStatement","src":"10136:99:27","trueBody":{"id":4998,"nodeType":"Block","src":"10157:78:27","statements":[{"expression":{"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10175:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10184:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10188:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10184:6:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10175:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4993,"nodeType":"ExpressionStatement","src":"10175:15:27"},{"expression":{"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"10208:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10218:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10208:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4997,"nodeType":"ExpressionStatement","src":"10208:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10252:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10261:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10265:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10261:6:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10252:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5016,"nodeType":"IfStatement","src":"10248:99:27","trueBody":{"id":5015,"nodeType":"Block","src":"10269:78:27","statements":[{"expression":{"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10287:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10296:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10300:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10296:6:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10287:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5010,"nodeType":"ExpressionStatement","src":"10287:15:27"},{"expression":{"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5011,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"10320:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10320:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5014,"nodeType":"ExpressionStatement","src":"10320:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10364:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10373:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10377:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10373:5:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10364:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5033,"nodeType":"IfStatement","src":"10360:96:27","trueBody":{"id":5032,"nodeType":"Block","src":"10380:76:27","statements":[{"expression":{"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10398:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10407:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10411:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10407:5:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10398:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5027,"nodeType":"ExpressionStatement","src":"10398:14:27"},{"expression":{"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"10430:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10430:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5031,"nodeType":"ExpressionStatement","src":"10430:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10473:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10486:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10482:5:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10473:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5050,"nodeType":"IfStatement","src":"10469:96:27","trueBody":{"id":5049,"nodeType":"Block","src":"10489:76:27","statements":[{"expression":{"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10507:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10516:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10520:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10516:5:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10507:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5044,"nodeType":"ExpressionStatement","src":"10507:14:27"},{"expression":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"10539:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10549:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10539:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5048,"nodeType":"ExpressionStatement","src":"10539:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10582:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10591:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10595:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10591:5:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10582:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5067,"nodeType":"IfStatement","src":"10578:96:27","trueBody":{"id":5066,"nodeType":"Block","src":"10598:76:27","statements":[{"expression":{"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10616:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10625:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10629:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10625:5:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10616:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5061,"nodeType":"ExpressionStatement","src":"10616:14:27"},{"expression":{"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"10648:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10658:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10648:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5065,"nodeType":"ExpressionStatement","src":"10648:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10691:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10700:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10704:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10700:5:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10691:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5078,"nodeType":"IfStatement","src":"10687:64:27","trueBody":{"id":5077,"nodeType":"Block","src":"10707:44:27","statements":[{"expression":{"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"10725:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10735:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10725:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5076,"nodeType":"ExpressionStatement","src":"10725:11:27"}]}}]},{"expression":{"id":5080,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"10777:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4961,"id":5081,"nodeType":"Return","src":"10770:13:27"}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"9781:114:27","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5083,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9909:5:27","nodeType":"FunctionDefinition","parameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"value","nameLocation":"9923:5:27","nodeType":"VariableDeclaration","scope":5083,"src":"9915:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"9915:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9914:15:27"},"returnParameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5083,"src":"9953:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"9953:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9952:9:27"},"scope":5246,"src":"9900:890:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5118,"nodeType":"Block","src":"11025:165:27","statements":[{"id":5117,"nodeType":"UncheckedBlock","src":"11035:149:27","statements":[{"assignments":[5095],"declarations":[{"constant":false,"id":5095,"mutability":"mutable","name":"result","nameLocation":"11067:6:27","nodeType":"VariableDeclaration","scope":5117,"src":"11059:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"11059:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5099,"initialValue":{"arguments":[{"id":5097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"11082:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5096,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5083,5119],"referencedDeclaration":5083,"src":"11076:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11076:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11059:29:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"11109:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5101,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"11119:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5102,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"11131:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4388_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4386,"src":"11131:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"src":"11119:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11146:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"11150:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11146:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"11159:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11146:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11119:45:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11171:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11119:53:27","trueExpression":{"hexValue":"31","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11118:55:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11109:64:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5093,"id":5116,"nodeType":"Return","src":"11102:71:27"}]}]},"documentation":{"id":5084,"nodeType":"StructuredDocumentation","src":"10796:143:27","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5119,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10953:5:27","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"value","nameLocation":"10967:5:27","nodeType":"VariableDeclaration","scope":5119,"src":"10959:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5085,"name":"uint256","nodeType":"ElementaryTypeName","src":"10959:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5089,"mutability":"mutable","name":"rounding","nameLocation":"10983:8:27","nodeType":"VariableDeclaration","scope":5119,"src":"10974:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":5088,"nodeType":"UserDefinedTypeName","pathNode":{"id":5087,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4388,"src":"10974:8:27"},"referencedDeclaration":4388,"src":"10974:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"10958:34:27"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5119,"src":"11016:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"11016:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11015:9:27"},"scope":5246,"src":"10944:246:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5205,"nodeType":"Block","src":"11504:600:27","statements":[{"assignments":[5128],"declarations":[{"constant":false,"id":5128,"mutability":"mutable","name":"result","nameLocation":"11522:6:27","nodeType":"VariableDeclaration","scope":5205,"src":"11514:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"11514:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5130,"initialValue":{"hexValue":"30","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11531:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11514:18:27"},{"id":5202,"nodeType":"UncheckedBlock","src":"11542:533:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"11570:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11579:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11570:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11585:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11570:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5145,"nodeType":"IfStatement","src":"11566:98:27","trueBody":{"id":5144,"nodeType":"Block","src":"11588:76:27","statements":[{"expression":{"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"11606:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11606:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5139,"nodeType":"ExpressionStatement","src":"11606:13:27"},{"expression":{"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"11637:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11647:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11637:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5143,"nodeType":"ExpressionStatement","src":"11637:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"11681:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11690:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11681:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11695:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11681:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5160,"nodeType":"IfStatement","src":"11677:95:27","trueBody":{"id":5159,"nodeType":"Block","src":"11698:74:27","statements":[{"expression":{"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"11716:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11726:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11716:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5154,"nodeType":"ExpressionStatement","src":"11716:12:27"},{"expression":{"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"11746:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11756:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11746:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5158,"nodeType":"ExpressionStatement","src":"11746:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"11789:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11789:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11803:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11789:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5175,"nodeType":"IfStatement","src":"11785:95:27","trueBody":{"id":5174,"nodeType":"Block","src":"11806:74:27","statements":[{"expression":{"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"11824:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11834:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11824:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5169,"nodeType":"ExpressionStatement","src":"11824:12:27"},{"expression":{"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"11854:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11864:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11854:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5173,"nodeType":"ExpressionStatement","src":"11854:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"11897:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11906:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11897:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11911:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11897:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5190,"nodeType":"IfStatement","src":"11893:95:27","trueBody":{"id":5189,"nodeType":"Block","src":"11914:74:27","statements":[{"expression":{"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"11932:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11942:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11932:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5184,"nodeType":"ExpressionStatement","src":"11932:12:27"},{"expression":{"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5185,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"11962:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11972:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11962:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5188,"nodeType":"ExpressionStatement","src":"11962:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"12005:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12014:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12005:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12018:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12005:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5201,"nodeType":"IfStatement","src":"12001:64:27","trueBody":{"id":5200,"nodeType":"Block","src":"12021:44:27","statements":[{"expression":{"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"12039:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12049:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12039:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5199,"nodeType":"ExpressionStatement","src":"12039:11:27"}]}}]},{"expression":{"id":5203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"12091:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5126,"id":5204,"nodeType":"Return","src":"12084:13:27"}]},"documentation":{"id":5120,"nodeType":"StructuredDocumentation","src":"11196:240:27","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5206,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11450:6:27","nodeType":"FunctionDefinition","parameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"value","nameLocation":"11465:5:27","nodeType":"VariableDeclaration","scope":5206,"src":"11457:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"11457:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11456:15:27"},"returnParameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5206,"src":"11495:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"11495:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11494:9:27"},"scope":5246,"src":"11441:663:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5244,"nodeType":"Block","src":"12340:173:27","statements":[{"id":5243,"nodeType":"UncheckedBlock","src":"12350:157:27","statements":[{"assignments":[5218],"declarations":[{"constant":false,"id":5218,"mutability":"mutable","name":"result","nameLocation":"12382:6:27","nodeType":"VariableDeclaration","scope":5243,"src":"12374:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12374:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5222,"initialValue":{"arguments":[{"id":5220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"12398:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5219,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5206,5245],"referencedDeclaration":5206,"src":"12391:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12391:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12374:30:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"12425:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5224,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"12435:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5225,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"12447:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4388_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4386,"src":"12447:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"src":"12435:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12462:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"12468:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12477:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12468:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12467:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12462:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"12482:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12462:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12435:52:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12494:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12435:60:27","trueExpression":{"hexValue":"31","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12490:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12434:62:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12425:71:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5216,"id":5242,"nodeType":"Return","src":"12418:78:27"}]}]},"documentation":{"id":5207,"nodeType":"StructuredDocumentation","src":"12110:143:27","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5245,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12267:6:27","nodeType":"FunctionDefinition","parameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"value","nameLocation":"12282:5:27","nodeType":"VariableDeclaration","scope":5245,"src":"12274:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12274:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5212,"mutability":"mutable","name":"rounding","nameLocation":"12298:8:27","nodeType":"VariableDeclaration","scope":5245,"src":"12289:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":5211,"nodeType":"UserDefinedTypeName","pathNode":{"id":5210,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4388,"src":"12289:8:27"},"referencedDeclaration":4388,"src":"12289:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4388","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12273:34:27"},"returnParameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5245,"src":"12331:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5214,"name":"uint256","nodeType":"ElementaryTypeName","src":"12331:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12330:9:27"},"scope":5246,"src":"12258:255:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5247,"src":"202:12313:27","usedErrors":[]}],"src":"103:12413:27"},"id":27},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol","exportedSymbols":{"SafeCastUpgradeable":[6787]},"id":6788,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5248,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCastUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":5249,"nodeType":"StructuredDocumentation","src":"217:709:28","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":6787,"linearizedBaseContracts":[6787],"name":"SafeCastUpgradeable","nameLocation":"935:19:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":5273,"nodeType":"Block","src":"1350:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"1368:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1382:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5260,"name":"uint248","nodeType":"ElementaryTypeName","src":"1382:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5259,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1377:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1377:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1377:17:28","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1368:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1396:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1360:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1360:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5267,"nodeType":"ExpressionStatement","src":"1360:78:28"},{"expression":{"arguments":[{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"1463:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5268,"name":"uint248","nodeType":"ElementaryTypeName","src":"1455:7:28","typeDescriptions":{}}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1455:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5256,"id":5272,"nodeType":"Return","src":"1448:21:28"}]},"documentation":{"id":5250,"nodeType":"StructuredDocumentation","src":"961:318:28","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5274,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1293:9:28","nodeType":"FunctionDefinition","parameters":{"id":5253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"value","nameLocation":"1311:5:28","nodeType":"VariableDeclaration","scope":5274,"src":"1303:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1303:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1302:15:28"},"returnParameters":{"id":5256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5274,"src":"1341:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5254,"name":"uint248","nodeType":"ElementaryTypeName","src":"1341:7:28","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1340:9:28"},"scope":6787,"src":"1284:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5298,"nodeType":"Block","src":"1871:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"1889:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1903:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5285,"name":"uint240","nodeType":"ElementaryTypeName","src":"1903:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1898:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1898:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1898:17:28","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1889:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1917:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1881:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1881:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5292,"nodeType":"ExpressionStatement","src":"1881:78:28"},{"expression":{"arguments":[{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"1984:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1976:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5293,"name":"uint240","nodeType":"ElementaryTypeName","src":"1976:7:28","typeDescriptions":{}}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1976:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5281,"id":5297,"nodeType":"Return","src":"1969:21:28"}]},"documentation":{"id":5275,"nodeType":"StructuredDocumentation","src":"1482:318:28","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5299,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1814:9:28","nodeType":"FunctionDefinition","parameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5277,"mutability":"mutable","name":"value","nameLocation":"1832:5:28","nodeType":"VariableDeclaration","scope":5299,"src":"1824:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:15:28"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5299,"src":"1862:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5279,"name":"uint240","nodeType":"ElementaryTypeName","src":"1862:7:28","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1861:9:28"},"scope":6787,"src":"1805:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5323,"nodeType":"Block","src":"2392:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"2410:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2424:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5310,"name":"uint232","nodeType":"ElementaryTypeName","src":"2424:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5309,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2419:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2419:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2419:17:28","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2410:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2438:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2402:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2402:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5317,"nodeType":"ExpressionStatement","src":"2402:78:28"},{"expression":{"arguments":[{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"2505:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2497:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5318,"name":"uint232","nodeType":"ElementaryTypeName","src":"2497:7:28","typeDescriptions":{}}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5306,"id":5322,"nodeType":"Return","src":"2490:21:28"}]},"documentation":{"id":5300,"nodeType":"StructuredDocumentation","src":"2003:318:28","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5324,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2335:9:28","nodeType":"FunctionDefinition","parameters":{"id":5303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"value","nameLocation":"2353:5:28","nodeType":"VariableDeclaration","scope":5324,"src":"2345:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2344:15:28"},"returnParameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5324,"src":"2383:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5304,"name":"uint232","nodeType":"ElementaryTypeName","src":"2383:7:28","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2382:9:28"},"scope":6787,"src":"2326:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5348,"nodeType":"Block","src":"2913:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"2931:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2945:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5335,"name":"uint224","nodeType":"ElementaryTypeName","src":"2945:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5334,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2940:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2940:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2940:17:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2931:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2959:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5332,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2923:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2923:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5342,"nodeType":"ExpressionStatement","src":"2923:78:28"},{"expression":{"arguments":[{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"3026:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5343,"name":"uint224","nodeType":"ElementaryTypeName","src":"3018:7:28","typeDescriptions":{}}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5331,"id":5347,"nodeType":"Return","src":"3011:21:28"}]},"documentation":{"id":5325,"nodeType":"StructuredDocumentation","src":"2524:318:28","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":5349,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2856:9:28","nodeType":"FunctionDefinition","parameters":{"id":5328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5327,"mutability":"mutable","name":"value","nameLocation":"2874:5:28","nodeType":"VariableDeclaration","scope":5349,"src":"2866:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2866:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2865:15:28"},"returnParameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5349,"src":"2904:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5329,"name":"uint224","nodeType":"ElementaryTypeName","src":"2904:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2903:9:28"},"scope":6787,"src":"2847:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5373,"nodeType":"Block","src":"3434:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"3452:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3466:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5360,"name":"uint216","nodeType":"ElementaryTypeName","src":"3466:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5359,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3461:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3461:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3461:17:28","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3452:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3480:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3444:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3444:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5367,"nodeType":"ExpressionStatement","src":"3444:78:28"},{"expression":{"arguments":[{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"3547:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3539:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5368,"name":"uint216","nodeType":"ElementaryTypeName","src":"3539:7:28","typeDescriptions":{}}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3539:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5356,"id":5372,"nodeType":"Return","src":"3532:21:28"}]},"documentation":{"id":5350,"nodeType":"StructuredDocumentation","src":"3045:318:28","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5374,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3377:9:28","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"value","nameLocation":"3395:5:28","nodeType":"VariableDeclaration","scope":5374,"src":"3387:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3387:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3386:15:28"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5374,"src":"3425:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5354,"name":"uint216","nodeType":"ElementaryTypeName","src":"3425:7:28","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3424:9:28"},"scope":6787,"src":"3368:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5398,"nodeType":"Block","src":"3955:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"3973:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3987:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5385,"name":"uint208","nodeType":"ElementaryTypeName","src":"3987:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5384,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3982:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3982:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3982:17:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3973:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4001:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3965:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3965:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5392,"nodeType":"ExpressionStatement","src":"3965:78:28"},{"expression":{"arguments":[{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"4068:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4060:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5393,"name":"uint208","nodeType":"ElementaryTypeName","src":"4060:7:28","typeDescriptions":{}}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4060:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5381,"id":5397,"nodeType":"Return","src":"4053:21:28"}]},"documentation":{"id":5375,"nodeType":"StructuredDocumentation","src":"3566:318:28","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5399,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3898:9:28","nodeType":"FunctionDefinition","parameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"value","nameLocation":"3916:5:28","nodeType":"VariableDeclaration","scope":5399,"src":"3908:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:15:28"},"returnParameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5399,"src":"3946:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5379,"name":"uint208","nodeType":"ElementaryTypeName","src":"3946:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3945:9:28"},"scope":6787,"src":"3889:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5423,"nodeType":"Block","src":"4476:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"4494:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4508:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5410,"name":"uint200","nodeType":"ElementaryTypeName","src":"4508:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5409,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4503:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4503:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4503:17:28","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4494:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4522:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4486:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4486:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5417,"nodeType":"ExpressionStatement","src":"4486:78:28"},{"expression":{"arguments":[{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"4589:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4581:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5418,"name":"uint200","nodeType":"ElementaryTypeName","src":"4581:7:28","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5406,"id":5422,"nodeType":"Return","src":"4574:21:28"}]},"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"4087:318:28","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5424,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4419:9:28","nodeType":"FunctionDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"value","nameLocation":"4437:5:28","nodeType":"VariableDeclaration","scope":5424,"src":"4429:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"4429:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4428:15:28"},"returnParameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"4467:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5404,"name":"uint200","nodeType":"ElementaryTypeName","src":"4467:7:28","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4466:9:28"},"scope":6787,"src":"4410:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5448,"nodeType":"Block","src":"4997:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"5015:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5029:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5435,"name":"uint192","nodeType":"ElementaryTypeName","src":"5029:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5434,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5024:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5024:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5024:17:28","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5015:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5043:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5007:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5007:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5442,"nodeType":"ExpressionStatement","src":"5007:78:28"},{"expression":{"arguments":[{"id":5445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"5110:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5102:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5443,"name":"uint192","nodeType":"ElementaryTypeName","src":"5102:7:28","typeDescriptions":{}}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5102:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5431,"id":5447,"nodeType":"Return","src":"5095:21:28"}]},"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"4608:318:28","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5449,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4940:9:28","nodeType":"FunctionDefinition","parameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"value","nameLocation":"4958:5:28","nodeType":"VariableDeclaration","scope":5449,"src":"4950:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:15:28"},"returnParameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5449,"src":"4988:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5429,"name":"uint192","nodeType":"ElementaryTypeName","src":"4988:7:28","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4987:9:28"},"scope":6787,"src":"4931:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5473,"nodeType":"Block","src":"5518:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"5536:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5550:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5460,"name":"uint184","nodeType":"ElementaryTypeName","src":"5550:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5459,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5545:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5545:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5545:17:28","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5536:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5564:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5528:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5528:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5467,"nodeType":"ExpressionStatement","src":"5528:78:28"},{"expression":{"arguments":[{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"5631:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5623:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5468,"name":"uint184","nodeType":"ElementaryTypeName","src":"5623:7:28","typeDescriptions":{}}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5623:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5456,"id":5472,"nodeType":"Return","src":"5616:21:28"}]},"documentation":{"id":5450,"nodeType":"StructuredDocumentation","src":"5129:318:28","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5474,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5461:9:28","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"value","nameLocation":"5479:5:28","nodeType":"VariableDeclaration","scope":5474,"src":"5471:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"5471:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5470:15:28"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5474,"src":"5509:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5454,"name":"uint184","nodeType":"ElementaryTypeName","src":"5509:7:28","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5508:9:28"},"scope":6787,"src":"5452:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5498,"nodeType":"Block","src":"6039:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"6057:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6071:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5485,"name":"uint176","nodeType":"ElementaryTypeName","src":"6071:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6066:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6066:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6066:17:28","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6057:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6085:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6049:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6049:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5492,"nodeType":"ExpressionStatement","src":"6049:78:28"},{"expression":{"arguments":[{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"6152:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6144:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5493,"name":"uint176","nodeType":"ElementaryTypeName","src":"6144:7:28","typeDescriptions":{}}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5481,"id":5497,"nodeType":"Return","src":"6137:21:28"}]},"documentation":{"id":5475,"nodeType":"StructuredDocumentation","src":"5650:318:28","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5499,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5982:9:28","nodeType":"FunctionDefinition","parameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"value","nameLocation":"6000:5:28","nodeType":"VariableDeclaration","scope":5499,"src":"5992:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"5992:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5991:15:28"},"returnParameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5499,"src":"6030:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5479,"name":"uint176","nodeType":"ElementaryTypeName","src":"6030:7:28","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6029:9:28"},"scope":6787,"src":"5973:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5523,"nodeType":"Block","src":"6560:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"6578:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6592:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5510,"name":"uint168","nodeType":"ElementaryTypeName","src":"6592:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5509,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6587:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6587:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6587:17:28","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6578:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6606:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6570:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6570:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5517,"nodeType":"ExpressionStatement","src":"6570:78:28"},{"expression":{"arguments":[{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"6673:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6665:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5518,"name":"uint168","nodeType":"ElementaryTypeName","src":"6665:7:28","typeDescriptions":{}}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6665:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5506,"id":5522,"nodeType":"Return","src":"6658:21:28"}]},"documentation":{"id":5500,"nodeType":"StructuredDocumentation","src":"6171:318:28","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5524,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6503:9:28","nodeType":"FunctionDefinition","parameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"value","nameLocation":"6521:5:28","nodeType":"VariableDeclaration","scope":5524,"src":"6513:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6512:15:28"},"returnParameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5524,"src":"6551:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5504,"name":"uint168","nodeType":"ElementaryTypeName","src":"6551:7:28","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6550:9:28"},"scope":6787,"src":"6494:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5548,"nodeType":"Block","src":"7081:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"7099:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7113:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5535,"name":"uint160","nodeType":"ElementaryTypeName","src":"7113:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5534,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7108:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7108:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7108:17:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7099:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7127:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7091:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7091:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5542,"nodeType":"ExpressionStatement","src":"7091:78:28"},{"expression":{"arguments":[{"id":5545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"7194:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7186:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5543,"name":"uint160","nodeType":"ElementaryTypeName","src":"7186:7:28","typeDescriptions":{}}},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7186:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5531,"id":5547,"nodeType":"Return","src":"7179:21:28"}]},"documentation":{"id":5525,"nodeType":"StructuredDocumentation","src":"6692:318:28","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5549,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7024:9:28","nodeType":"FunctionDefinition","parameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"value","nameLocation":"7042:5:28","nodeType":"VariableDeclaration","scope":5549,"src":"7034:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5526,"name":"uint256","nodeType":"ElementaryTypeName","src":"7034:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7033:15:28"},"returnParameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5549,"src":"7072:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5529,"name":"uint160","nodeType":"ElementaryTypeName","src":"7072:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7071:9:28"},"scope":6787,"src":"7015:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5573,"nodeType":"Block","src":"7602:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"7620:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7634:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5560,"name":"uint152","nodeType":"ElementaryTypeName","src":"7634:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7629:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7629:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7629:17:28","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7620:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7612:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7612:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5567,"nodeType":"ExpressionStatement","src":"7612:78:28"},{"expression":{"arguments":[{"id":5570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"7715:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7707:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5568,"name":"uint152","nodeType":"ElementaryTypeName","src":"7707:7:28","typeDescriptions":{}}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7707:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5556,"id":5572,"nodeType":"Return","src":"7700:21:28"}]},"documentation":{"id":5550,"nodeType":"StructuredDocumentation","src":"7213:318:28","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5574,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7545:9:28","nodeType":"FunctionDefinition","parameters":{"id":5553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"value","nameLocation":"7563:5:28","nodeType":"VariableDeclaration","scope":5574,"src":"7555:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5551,"name":"uint256","nodeType":"ElementaryTypeName","src":"7555:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7554:15:28"},"returnParameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5574,"src":"7593:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5554,"name":"uint152","nodeType":"ElementaryTypeName","src":"7593:7:28","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7592:9:28"},"scope":6787,"src":"7536:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5598,"nodeType":"Block","src":"8123:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"8141:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8155:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5585,"name":"uint144","nodeType":"ElementaryTypeName","src":"8155:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5584,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8150:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8150:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8150:17:28","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8141:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8169:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8133:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8133:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5592,"nodeType":"ExpressionStatement","src":"8133:78:28"},{"expression":{"arguments":[{"id":5595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"8236:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8228:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5593,"name":"uint144","nodeType":"ElementaryTypeName","src":"8228:7:28","typeDescriptions":{}}},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8228:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5581,"id":5597,"nodeType":"Return","src":"8221:21:28"}]},"documentation":{"id":5575,"nodeType":"StructuredDocumentation","src":"7734:318:28","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5599,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8066:9:28","nodeType":"FunctionDefinition","parameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"value","nameLocation":"8084:5:28","nodeType":"VariableDeclaration","scope":5599,"src":"8076:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"8076:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8075:15:28"},"returnParameters":{"id":5581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5599,"src":"8114:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5579,"name":"uint144","nodeType":"ElementaryTypeName","src":"8114:7:28","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8113:9:28"},"scope":6787,"src":"8057:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5623,"nodeType":"Block","src":"8644:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"8662:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8676:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5610,"name":"uint136","nodeType":"ElementaryTypeName","src":"8676:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8671:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8671:17:28","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8662:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8690:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8654:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8654:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5617,"nodeType":"ExpressionStatement","src":"8654:78:28"},{"expression":{"arguments":[{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"8757:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8749:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5618,"name":"uint136","nodeType":"ElementaryTypeName","src":"8749:7:28","typeDescriptions":{}}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8749:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5606,"id":5622,"nodeType":"Return","src":"8742:21:28"}]},"documentation":{"id":5600,"nodeType":"StructuredDocumentation","src":"8255:318:28","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5624,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8587:9:28","nodeType":"FunctionDefinition","parameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"value","nameLocation":"8605:5:28","nodeType":"VariableDeclaration","scope":5624,"src":"8597:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5601,"name":"uint256","nodeType":"ElementaryTypeName","src":"8597:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8596:15:28"},"returnParameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5624,"src":"8635:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5604,"name":"uint136","nodeType":"ElementaryTypeName","src":"8635:7:28","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8634:9:28"},"scope":6787,"src":"8578:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5648,"nodeType":"Block","src":"9165:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"9183:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9197:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5635,"name":"uint128","nodeType":"ElementaryTypeName","src":"9197:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9192:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9192:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9192:17:28","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9183:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9211:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9175:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9175:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5642,"nodeType":"ExpressionStatement","src":"9175:78:28"},{"expression":{"arguments":[{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"9278:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9270:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5643,"name":"uint128","nodeType":"ElementaryTypeName","src":"9270:7:28","typeDescriptions":{}}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9270:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5631,"id":5647,"nodeType":"Return","src":"9263:21:28"}]},"documentation":{"id":5625,"nodeType":"StructuredDocumentation","src":"8776:318:28","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":5649,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9108:9:28","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"value","nameLocation":"9126:5:28","nodeType":"VariableDeclaration","scope":5649,"src":"9118:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9117:15:28"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5649,"src":"9156:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5629,"name":"uint128","nodeType":"ElementaryTypeName","src":"9156:7:28","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9155:9:28"},"scope":6787,"src":"9099:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5673,"nodeType":"Block","src":"9686:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"9704:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9718:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5660,"name":"uint120","nodeType":"ElementaryTypeName","src":"9718:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5659,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9713:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9713:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9713:17:28","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9704:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9732:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9696:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9696:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5667,"nodeType":"ExpressionStatement","src":"9696:78:28"},{"expression":{"arguments":[{"id":5670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"9799:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9791:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5668,"name":"uint120","nodeType":"ElementaryTypeName","src":"9791:7:28","typeDescriptions":{}}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9791:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5656,"id":5672,"nodeType":"Return","src":"9784:21:28"}]},"documentation":{"id":5650,"nodeType":"StructuredDocumentation","src":"9297:318:28","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5674,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9629:9:28","nodeType":"FunctionDefinition","parameters":{"id":5653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5652,"mutability":"mutable","name":"value","nameLocation":"9647:5:28","nodeType":"VariableDeclaration","scope":5674,"src":"9639:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5651,"name":"uint256","nodeType":"ElementaryTypeName","src":"9639:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:15:28"},"returnParameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5674,"src":"9677:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5654,"name":"uint120","nodeType":"ElementaryTypeName","src":"9677:7:28","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9676:9:28"},"scope":6787,"src":"9620:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5698,"nodeType":"Block","src":"10207:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"10225:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10239:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5685,"name":"uint112","nodeType":"ElementaryTypeName","src":"10239:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10234:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10234:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10234:17:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10225:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10253:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10217:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10217:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5692,"nodeType":"ExpressionStatement","src":"10217:78:28"},{"expression":{"arguments":[{"id":5695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"10320:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10312:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5693,"name":"uint112","nodeType":"ElementaryTypeName","src":"10312:7:28","typeDescriptions":{}}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10312:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5681,"id":5697,"nodeType":"Return","src":"10305:21:28"}]},"documentation":{"id":5675,"nodeType":"StructuredDocumentation","src":"9818:318:28","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5699,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10150:9:28","nodeType":"FunctionDefinition","parameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"value","nameLocation":"10168:5:28","nodeType":"VariableDeclaration","scope":5699,"src":"10160:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"10160:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10159:15:28"},"returnParameters":{"id":5681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5699,"src":"10198:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5679,"name":"uint112","nodeType":"ElementaryTypeName","src":"10198:7:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10197:9:28"},"scope":6787,"src":"10141:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5723,"nodeType":"Block","src":"10728:126:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"10746:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10760:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5710,"name":"uint104","nodeType":"ElementaryTypeName","src":"10760:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5709,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10755:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10755:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10755:17:28","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10746:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10774:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10738:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10738:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5717,"nodeType":"ExpressionStatement","src":"10738:78:28"},{"expression":{"arguments":[{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"10841:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10833:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5718,"name":"uint104","nodeType":"ElementaryTypeName","src":"10833:7:28","typeDescriptions":{}}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10833:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5706,"id":5722,"nodeType":"Return","src":"10826:21:28"}]},"documentation":{"id":5700,"nodeType":"StructuredDocumentation","src":"10339:318:28","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5724,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10671:9:28","nodeType":"FunctionDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"value","nameLocation":"10689:5:28","nodeType":"VariableDeclaration","scope":5724,"src":"10681:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"10681:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10680:15:28"},"returnParameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5724,"src":"10719:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5704,"name":"uint104","nodeType":"ElementaryTypeName","src":"10719:7:28","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10718:9:28"},"scope":6787,"src":"10662:192:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5748,"nodeType":"Block","src":"11243:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"11261:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11275:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5735,"name":"uint96","nodeType":"ElementaryTypeName","src":"11275:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11270:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11270:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11270:16:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11261:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11288:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11253:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11253:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5742,"nodeType":"ExpressionStatement","src":"11253:76:28"},{"expression":{"arguments":[{"id":5745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"11353:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11346:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5743,"name":"uint96","nodeType":"ElementaryTypeName","src":"11346:6:28","typeDescriptions":{}}},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5731,"id":5747,"nodeType":"Return","src":"11339:20:28"}]},"documentation":{"id":5725,"nodeType":"StructuredDocumentation","src":"10860:314:28","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":5749,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11188:8:28","nodeType":"FunctionDefinition","parameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"value","nameLocation":"11205:5:28","nodeType":"VariableDeclaration","scope":5749,"src":"11197:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5726,"name":"uint256","nodeType":"ElementaryTypeName","src":"11197:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11196:15:28"},"returnParameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5749,"src":"11235:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5729,"name":"uint96","nodeType":"ElementaryTypeName","src":"11235:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11234:8:28"},"scope":6787,"src":"11179:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5773,"nodeType":"Block","src":"11755:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"11773:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11787:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5760,"name":"uint88","nodeType":"ElementaryTypeName","src":"11787:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5759,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11782:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11782:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11782:16:28","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11773:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11800:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11765:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11765:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5767,"nodeType":"ExpressionStatement","src":"11765:76:28"},{"expression":{"arguments":[{"id":5770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"11865:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11858:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5768,"name":"uint88","nodeType":"ElementaryTypeName","src":"11858:6:28","typeDescriptions":{}}},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11858:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5756,"id":5772,"nodeType":"Return","src":"11851:20:28"}]},"documentation":{"id":5750,"nodeType":"StructuredDocumentation","src":"11372:314:28","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11700:8:28","nodeType":"FunctionDefinition","parameters":{"id":5753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"value","nameLocation":"11717:5:28","nodeType":"VariableDeclaration","scope":5774,"src":"11709:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5751,"name":"uint256","nodeType":"ElementaryTypeName","src":"11709:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11708:15:28"},"returnParameters":{"id":5756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5774,"src":"11747:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5754,"name":"uint88","nodeType":"ElementaryTypeName","src":"11747:6:28","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11746:8:28"},"scope":6787,"src":"11691:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5798,"nodeType":"Block","src":"12267:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"12285:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12299:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5785,"name":"uint80","nodeType":"ElementaryTypeName","src":"12299:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5784,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12294:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12294:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12294:16:28","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12285:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12312:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12277:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12277:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5792,"nodeType":"ExpressionStatement","src":"12277:76:28"},{"expression":{"arguments":[{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"12377:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12370:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5793,"name":"uint80","nodeType":"ElementaryTypeName","src":"12370:6:28","typeDescriptions":{}}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12370:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5781,"id":5797,"nodeType":"Return","src":"12363:20:28"}]},"documentation":{"id":5775,"nodeType":"StructuredDocumentation","src":"11884:314:28","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5799,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12212:8:28","nodeType":"FunctionDefinition","parameters":{"id":5778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5777,"mutability":"mutable","name":"value","nameLocation":"12229:5:28","nodeType":"VariableDeclaration","scope":5799,"src":"12221:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5776,"name":"uint256","nodeType":"ElementaryTypeName","src":"12221:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12220:15:28"},"returnParameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5799,"src":"12259:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5779,"name":"uint80","nodeType":"ElementaryTypeName","src":"12259:6:28","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12258:8:28"},"scope":6787,"src":"12203:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5823,"nodeType":"Block","src":"12779:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"12797:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12811:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5810,"name":"uint72","nodeType":"ElementaryTypeName","src":"12811:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5809,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12806:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12806:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12806:16:28","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12797:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12824:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12789:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12789:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5817,"nodeType":"ExpressionStatement","src":"12789:76:28"},{"expression":{"arguments":[{"id":5820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"12889:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5818,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:28","typeDescriptions":{}}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12882:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5806,"id":5822,"nodeType":"Return","src":"12875:20:28"}]},"documentation":{"id":5800,"nodeType":"StructuredDocumentation","src":"12396:314:28","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5824,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12724:8:28","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"value","nameLocation":"12741:5:28","nodeType":"VariableDeclaration","scope":5824,"src":"12733:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5801,"name":"uint256","nodeType":"ElementaryTypeName","src":"12733:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12732:15:28"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5824,"src":"12771:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5804,"name":"uint72","nodeType":"ElementaryTypeName","src":"12771:6:28","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12770:8:28"},"scope":6787,"src":"12715:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5848,"nodeType":"Block","src":"13291:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"13309:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13323:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5835,"name":"uint64","nodeType":"ElementaryTypeName","src":"13323:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13318:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13318:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13318:16:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13309:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13336:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13301:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13301:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5842,"nodeType":"ExpressionStatement","src":"13301:76:28"},{"expression":{"arguments":[{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"13401:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13394:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5843,"name":"uint64","nodeType":"ElementaryTypeName","src":"13394:6:28","typeDescriptions":{}}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13394:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5831,"id":5847,"nodeType":"Return","src":"13387:20:28"}]},"documentation":{"id":5825,"nodeType":"StructuredDocumentation","src":"12908:314:28","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":5849,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13236:8:28","nodeType":"FunctionDefinition","parameters":{"id":5828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5827,"mutability":"mutable","name":"value","nameLocation":"13253:5:28","nodeType":"VariableDeclaration","scope":5849,"src":"13245:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5826,"name":"uint256","nodeType":"ElementaryTypeName","src":"13245:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13244:15:28"},"returnParameters":{"id":5831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5849,"src":"13283:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5829,"name":"uint64","nodeType":"ElementaryTypeName","src":"13283:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13282:8:28"},"scope":6787,"src":"13227:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5873,"nodeType":"Block","src":"13803:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"13821:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13835:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5860,"name":"uint56","nodeType":"ElementaryTypeName","src":"13835:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5859,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13830:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13830:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13830:16:28","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13821:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13848:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13813:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13813:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5867,"nodeType":"ExpressionStatement","src":"13813:76:28"},{"expression":{"arguments":[{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"13913:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13906:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5868,"name":"uint56","nodeType":"ElementaryTypeName","src":"13906:6:28","typeDescriptions":{}}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13906:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5856,"id":5872,"nodeType":"Return","src":"13899:20:28"}]},"documentation":{"id":5850,"nodeType":"StructuredDocumentation","src":"13420:314:28","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5874,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13748:8:28","nodeType":"FunctionDefinition","parameters":{"id":5853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5852,"mutability":"mutable","name":"value","nameLocation":"13765:5:28","nodeType":"VariableDeclaration","scope":5874,"src":"13757:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5851,"name":"uint256","nodeType":"ElementaryTypeName","src":"13757:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13756:15:28"},"returnParameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5874,"src":"13795:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5854,"name":"uint56","nodeType":"ElementaryTypeName","src":"13795:6:28","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13794:8:28"},"scope":6787,"src":"13739:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5898,"nodeType":"Block","src":"14315:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"14333:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14347:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5885,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5884,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14342:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14342:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14342:16:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14333:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14360:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14325:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14325:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5892,"nodeType":"ExpressionStatement","src":"14325:76:28"},{"expression":{"arguments":[{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"14425:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14418:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5893,"name":"uint48","nodeType":"ElementaryTypeName","src":"14418:6:28","typeDescriptions":{}}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14418:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5881,"id":5897,"nodeType":"Return","src":"14411:20:28"}]},"documentation":{"id":5875,"nodeType":"StructuredDocumentation","src":"13932:314:28","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5899,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14260:8:28","nodeType":"FunctionDefinition","parameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"value","nameLocation":"14277:5:28","nodeType":"VariableDeclaration","scope":5899,"src":"14269:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5876,"name":"uint256","nodeType":"ElementaryTypeName","src":"14269:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14268:15:28"},"returnParameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5899,"src":"14307:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5879,"name":"uint48","nodeType":"ElementaryTypeName","src":"14307:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14306:8:28"},"scope":6787,"src":"14251:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5923,"nodeType":"Block","src":"14827:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"14845:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14859:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5910,"name":"uint40","nodeType":"ElementaryTypeName","src":"14859:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5909,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14854:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14854:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14854:16:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14845:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14872:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14837:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14837:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5917,"nodeType":"ExpressionStatement","src":"14837:76:28"},{"expression":{"arguments":[{"id":5920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"14937:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14930:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5918,"name":"uint40","nodeType":"ElementaryTypeName","src":"14930:6:28","typeDescriptions":{}}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14930:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5906,"id":5922,"nodeType":"Return","src":"14923:20:28"}]},"documentation":{"id":5900,"nodeType":"StructuredDocumentation","src":"14444:314:28","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5924,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14772:8:28","nodeType":"FunctionDefinition","parameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5902,"mutability":"mutable","name":"value","nameLocation":"14789:5:28","nodeType":"VariableDeclaration","scope":5924,"src":"14781:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5901,"name":"uint256","nodeType":"ElementaryTypeName","src":"14781:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14780:15:28"},"returnParameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5924,"src":"14819:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5904,"name":"uint40","nodeType":"ElementaryTypeName","src":"14819:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14818:8:28"},"scope":6787,"src":"14763:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5948,"nodeType":"Block","src":"15339:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"15357:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15371:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5935,"name":"uint32","nodeType":"ElementaryTypeName","src":"15371:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5934,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15366:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15366:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15366:16:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15357:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15384:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5932,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15349:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15349:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5942,"nodeType":"ExpressionStatement","src":"15349:76:28"},{"expression":{"arguments":[{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"15449:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15442:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5943,"name":"uint32","nodeType":"ElementaryTypeName","src":"15442:6:28","typeDescriptions":{}}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15442:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5931,"id":5947,"nodeType":"Return","src":"15435:20:28"}]},"documentation":{"id":5925,"nodeType":"StructuredDocumentation","src":"14956:314:28","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":5949,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15284:8:28","nodeType":"FunctionDefinition","parameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"value","nameLocation":"15301:5:28","nodeType":"VariableDeclaration","scope":5949,"src":"15293:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5926,"name":"uint256","nodeType":"ElementaryTypeName","src":"15293:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15292:15:28"},"returnParameters":{"id":5931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5949,"src":"15331:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5929,"name":"uint32","nodeType":"ElementaryTypeName","src":"15331:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15330:8:28"},"scope":6787,"src":"15275:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5973,"nodeType":"Block","src":"15851:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"15869:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15883:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5960,"name":"uint24","nodeType":"ElementaryTypeName","src":"15883:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15878:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15878:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15878:16:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15896:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15861:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15861:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5967,"nodeType":"ExpressionStatement","src":"15861:76:28"},{"expression":{"arguments":[{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"15961:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15954:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5968,"name":"uint24","nodeType":"ElementaryTypeName","src":"15954:6:28","typeDescriptions":{}}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15954:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5956,"id":5972,"nodeType":"Return","src":"15947:20:28"}]},"documentation":{"id":5950,"nodeType":"StructuredDocumentation","src":"15468:314:28","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5974,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15796:8:28","nodeType":"FunctionDefinition","parameters":{"id":5953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5952,"mutability":"mutable","name":"value","nameLocation":"15813:5:28","nodeType":"VariableDeclaration","scope":5974,"src":"15805:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5951,"name":"uint256","nodeType":"ElementaryTypeName","src":"15805:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15804:15:28"},"returnParameters":{"id":5956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5974,"src":"15843:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5954,"name":"uint24","nodeType":"ElementaryTypeName","src":"15843:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15842:8:28"},"scope":6787,"src":"15787:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5998,"nodeType":"Block","src":"16363:123:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"16381:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16395:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5985,"name":"uint16","nodeType":"ElementaryTypeName","src":"16395:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16390:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16390:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16390:16:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16381:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16408:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16373:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16373:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5992,"nodeType":"ExpressionStatement","src":"16373:76:28"},{"expression":{"arguments":[{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"16473:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16466:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5993,"name":"uint16","nodeType":"ElementaryTypeName","src":"16466:6:28","typeDescriptions":{}}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16466:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5981,"id":5997,"nodeType":"Return","src":"16459:20:28"}]},"documentation":{"id":5975,"nodeType":"StructuredDocumentation","src":"15980:314:28","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":5999,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16308:8:28","nodeType":"FunctionDefinition","parameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"value","nameLocation":"16325:5:28","nodeType":"VariableDeclaration","scope":5999,"src":"16317:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"16317:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16316:15:28"},"returnParameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5999,"src":"16355:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5979,"name":"uint16","nodeType":"ElementaryTypeName","src":"16355:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16354:8:28"},"scope":6787,"src":"16299:187:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6023,"nodeType":"Block","src":"16869:120:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"16887:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16901:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6010,"name":"uint8","nodeType":"ElementaryTypeName","src":"16901:5:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6009,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16896:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16896:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16896:15:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16887:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16913:39:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":6007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16879:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16879:74:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6017,"nodeType":"ExpressionStatement","src":"16879:74:28"},{"expression":{"arguments":[{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"16976:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16970:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6018,"name":"uint8","nodeType":"ElementaryTypeName","src":"16970:5:28","typeDescriptions":{}}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16970:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6006,"id":6022,"nodeType":"Return","src":"16963:19:28"}]},"documentation":{"id":6000,"nodeType":"StructuredDocumentation","src":"16492:310:28","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":6024,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16816:7:28","nodeType":"FunctionDefinition","parameters":{"id":6003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6002,"mutability":"mutable","name":"value","nameLocation":"16832:5:28","nodeType":"VariableDeclaration","scope":6024,"src":"16824:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6001,"name":"uint256","nodeType":"ElementaryTypeName","src":"16824:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16823:15:28"},"returnParameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6024,"src":"16862:5:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6004,"name":"uint8","nodeType":"ElementaryTypeName","src":"16862:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16861:7:28"},"scope":6787,"src":"16807:182:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6044,"nodeType":"Block","src":"17263:103:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"17281:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17290:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17281:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":6036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17293:34:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":6032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17273:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17273:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6038,"nodeType":"ExpressionStatement","src":"17273:55:28"},{"expression":{"arguments":[{"id":6041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"17353:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17345:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6039,"name":"uint256","nodeType":"ElementaryTypeName","src":"17345:7:28","typeDescriptions":{}}},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17345:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6031,"id":6043,"nodeType":"Return","src":"17338:21:28"}]},"documentation":{"id":6025,"nodeType":"StructuredDocumentation","src":"16995:198:28","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":6045,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17207:9:28","nodeType":"FunctionDefinition","parameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"mutability":"mutable","name":"value","nameLocation":"17224:5:28","nodeType":"VariableDeclaration","scope":6045,"src":"17217:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6026,"name":"int256","nodeType":"ElementaryTypeName","src":"17217:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17216:14:28"},"returnParameters":{"id":6031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6045,"src":"17254:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6029,"name":"uint256","nodeType":"ElementaryTypeName","src":"17254:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17253:9:28"},"scope":6787,"src":"17198:168:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6067,"nodeType":"Block","src":"17801:124:28","statements":[{"expression":{"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"17811:10:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"17831:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17824:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6054,"name":"int248","nodeType":"ElementaryTypeName","src":"17824:6:28","typeDescriptions":{}}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17824:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17811:26:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6059,"nodeType":"ExpressionStatement","src":"17811:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"17855:10:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"17869:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17855:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":6064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17876:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":6060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17847:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17847:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6066,"nodeType":"ExpressionStatement","src":"17847:71:28"}]},"documentation":{"id":6046,"nodeType":"StructuredDocumentation","src":"17372:350:28","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17736:8:28","nodeType":"FunctionDefinition","parameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"value","nameLocation":"17752:5:28","nodeType":"VariableDeclaration","scope":6068,"src":"17745:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6047,"name":"int256","nodeType":"ElementaryTypeName","src":"17745:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17744:14:28"},"returnParameters":{"id":6052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6051,"mutability":"mutable","name":"downcasted","nameLocation":"17789:10:28","nodeType":"VariableDeclaration","scope":6068,"src":"17782:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6050,"name":"int248","nodeType":"ElementaryTypeName","src":"17782:6:28","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17781:19:28"},"scope":6787,"src":"17727:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6090,"nodeType":"Block","src":"18360:124:28","statements":[{"expression":{"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"18370:10:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"18390:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18383:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6077,"name":"int240","nodeType":"ElementaryTypeName","src":"18383:6:28","typeDescriptions":{}}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18383:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18370:26:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6082,"nodeType":"ExpressionStatement","src":"18370:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"18414:10:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"18428:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18414:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18435:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":6083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18406:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18406:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6089,"nodeType":"ExpressionStatement","src":"18406:71:28"}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"17931:350:28","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":6091,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18295:8:28","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"value","nameLocation":"18311:5:28","nodeType":"VariableDeclaration","scope":6091,"src":"18304:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6070,"name":"int256","nodeType":"ElementaryTypeName","src":"18304:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18303:14:28"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"downcasted","nameLocation":"18348:10:28","nodeType":"VariableDeclaration","scope":6091,"src":"18341:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6073,"name":"int240","nodeType":"ElementaryTypeName","src":"18341:6:28","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18340:19:28"},"scope":6787,"src":"18286:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6113,"nodeType":"Block","src":"18919:124:28","statements":[{"expression":{"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"18929:10:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"18949:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18942:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6100,"name":"int232","nodeType":"ElementaryTypeName","src":"18942:6:28","typeDescriptions":{}}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18942:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18929:26:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6105,"nodeType":"ExpressionStatement","src":"18929:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6107,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"18973:10:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"18987:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18973:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":6110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18994:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":6106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18965:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18965:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6112,"nodeType":"ExpressionStatement","src":"18965:71:28"}]},"documentation":{"id":6092,"nodeType":"StructuredDocumentation","src":"18490:350:28","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":6114,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18854:8:28","nodeType":"FunctionDefinition","parameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"value","nameLocation":"18870:5:28","nodeType":"VariableDeclaration","scope":6114,"src":"18863:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6093,"name":"int256","nodeType":"ElementaryTypeName","src":"18863:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18862:14:28"},"returnParameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"downcasted","nameLocation":"18907:10:28","nodeType":"VariableDeclaration","scope":6114,"src":"18900:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6096,"name":"int232","nodeType":"ElementaryTypeName","src":"18900:6:28","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18899:19:28"},"scope":6787,"src":"18845:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6136,"nodeType":"Block","src":"19478:124:28","statements":[{"expression":{"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"19488:10:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"19508:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19501:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6123,"name":"int224","nodeType":"ElementaryTypeName","src":"19501:6:28","typeDescriptions":{}}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19501:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19488:26:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6128,"nodeType":"ExpressionStatement","src":"19488:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"19532:10:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"19546:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19532:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":6133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19553:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":6129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19524:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19524:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6135,"nodeType":"ExpressionStatement","src":"19524:71:28"}]},"documentation":{"id":6115,"nodeType":"StructuredDocumentation","src":"19049:350:28","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":6137,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19413:8:28","nodeType":"FunctionDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"mutability":"mutable","name":"value","nameLocation":"19429:5:28","nodeType":"VariableDeclaration","scope":6137,"src":"19422:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6116,"name":"int256","nodeType":"ElementaryTypeName","src":"19422:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19421:14:28"},"returnParameters":{"id":6121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6120,"mutability":"mutable","name":"downcasted","nameLocation":"19466:10:28","nodeType":"VariableDeclaration","scope":6137,"src":"19459:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6119,"name":"int224","nodeType":"ElementaryTypeName","src":"19459:6:28","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19458:19:28"},"scope":6787,"src":"19404:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6159,"nodeType":"Block","src":"20037:124:28","statements":[{"expression":{"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"20047:10:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"20067:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20060:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6146,"name":"int216","nodeType":"ElementaryTypeName","src":"20060:6:28","typeDescriptions":{}}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20060:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20047:26:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6151,"nodeType":"ExpressionStatement","src":"20047:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"20091:10:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"20105:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20091:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20112:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":6152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20083:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20083:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6158,"nodeType":"ExpressionStatement","src":"20083:71:28"}]},"documentation":{"id":6138,"nodeType":"StructuredDocumentation","src":"19608:350:28","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":6160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19972:8:28","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"value","nameLocation":"19988:5:28","nodeType":"VariableDeclaration","scope":6160,"src":"19981:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6139,"name":"int256","nodeType":"ElementaryTypeName","src":"19981:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19980:14:28"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"downcasted","nameLocation":"20025:10:28","nodeType":"VariableDeclaration","scope":6160,"src":"20018:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6142,"name":"int216","nodeType":"ElementaryTypeName","src":"20018:6:28","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20017:19:28"},"scope":6787,"src":"19963:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6182,"nodeType":"Block","src":"20596:124:28","statements":[{"expression":{"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"20606:10:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"20626:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20619:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6169,"name":"int208","nodeType":"ElementaryTypeName","src":"20619:6:28","typeDescriptions":{}}},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20619:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20606:26:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6174,"nodeType":"ExpressionStatement","src":"20606:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"20650:10:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"20664:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20650:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20671:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":6175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20642:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20642:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6181,"nodeType":"ExpressionStatement","src":"20642:71:28"}]},"documentation":{"id":6161,"nodeType":"StructuredDocumentation","src":"20167:350:28","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":6183,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20531:8:28","nodeType":"FunctionDefinition","parameters":{"id":6164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6163,"mutability":"mutable","name":"value","nameLocation":"20547:5:28","nodeType":"VariableDeclaration","scope":6183,"src":"20540:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6162,"name":"int256","nodeType":"ElementaryTypeName","src":"20540:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20539:14:28"},"returnParameters":{"id":6167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6166,"mutability":"mutable","name":"downcasted","nameLocation":"20584:10:28","nodeType":"VariableDeclaration","scope":6183,"src":"20577:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6165,"name":"int208","nodeType":"ElementaryTypeName","src":"20577:6:28","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20576:19:28"},"scope":6787,"src":"20522:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6205,"nodeType":"Block","src":"21155:124:28","statements":[{"expression":{"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"21165:10:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"21185:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21178:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6192,"name":"int200","nodeType":"ElementaryTypeName","src":"21178:6:28","typeDescriptions":{}}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21178:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21165:26:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6197,"nodeType":"ExpressionStatement","src":"21165:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"21209:10:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"21223:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21209:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":6202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21230:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":6198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21201:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21201:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6204,"nodeType":"ExpressionStatement","src":"21201:71:28"}]},"documentation":{"id":6184,"nodeType":"StructuredDocumentation","src":"20726:350:28","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":6206,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21090:8:28","nodeType":"FunctionDefinition","parameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"value","nameLocation":"21106:5:28","nodeType":"VariableDeclaration","scope":6206,"src":"21099:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6185,"name":"int256","nodeType":"ElementaryTypeName","src":"21099:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21098:14:28"},"returnParameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6189,"mutability":"mutable","name":"downcasted","nameLocation":"21143:10:28","nodeType":"VariableDeclaration","scope":6206,"src":"21136:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6188,"name":"int200","nodeType":"ElementaryTypeName","src":"21136:6:28","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21135:19:28"},"scope":6787,"src":"21081:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6228,"nodeType":"Block","src":"21714:124:28","statements":[{"expression":{"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6214,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"21724:10:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"21744:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21737:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6215,"name":"int192","nodeType":"ElementaryTypeName","src":"21737:6:28","typeDescriptions":{}}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21737:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21724:26:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6220,"nodeType":"ExpressionStatement","src":"21724:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"21768:10:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"21782:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21768:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21789:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":6221,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21760:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21760:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6227,"nodeType":"ExpressionStatement","src":"21760:71:28"}]},"documentation":{"id":6207,"nodeType":"StructuredDocumentation","src":"21285:350:28","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":6229,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21649:8:28","nodeType":"FunctionDefinition","parameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"mutability":"mutable","name":"value","nameLocation":"21665:5:28","nodeType":"VariableDeclaration","scope":6229,"src":"21658:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6208,"name":"int256","nodeType":"ElementaryTypeName","src":"21658:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21657:14:28"},"returnParameters":{"id":6213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6212,"mutability":"mutable","name":"downcasted","nameLocation":"21702:10:28","nodeType":"VariableDeclaration","scope":6229,"src":"21695:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6211,"name":"int192","nodeType":"ElementaryTypeName","src":"21695:6:28","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21694:19:28"},"scope":6787,"src":"21640:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6251,"nodeType":"Block","src":"22273:124:28","statements":[{"expression":{"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6237,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22283:10:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"22303:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22296:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6238,"name":"int184","nodeType":"ElementaryTypeName","src":"22296:6:28","typeDescriptions":{}}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22296:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22283:26:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6243,"nodeType":"ExpressionStatement","src":"22283:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22327:10:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"22341:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22327:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":6248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22348:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":6244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22319:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22319:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6250,"nodeType":"ExpressionStatement","src":"22319:71:28"}]},"documentation":{"id":6230,"nodeType":"StructuredDocumentation","src":"21844:350:28","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":6252,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22208:8:28","nodeType":"FunctionDefinition","parameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"mutability":"mutable","name":"value","nameLocation":"22224:5:28","nodeType":"VariableDeclaration","scope":6252,"src":"22217:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6231,"name":"int256","nodeType":"ElementaryTypeName","src":"22217:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22216:14:28"},"returnParameters":{"id":6236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6235,"mutability":"mutable","name":"downcasted","nameLocation":"22261:10:28","nodeType":"VariableDeclaration","scope":6252,"src":"22254:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6234,"name":"int184","nodeType":"ElementaryTypeName","src":"22254:6:28","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22253:19:28"},"scope":6787,"src":"22199:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6274,"nodeType":"Block","src":"22832:124:28","statements":[{"expression":{"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"22842:10:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"22862:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22855:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6261,"name":"int176","nodeType":"ElementaryTypeName","src":"22855:6:28","typeDescriptions":{}}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22855:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22842:26:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6266,"nodeType":"ExpressionStatement","src":"22842:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"22886:10:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"22900:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22886:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22907:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":6267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22878:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22878:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6273,"nodeType":"ExpressionStatement","src":"22878:71:28"}]},"documentation":{"id":6253,"nodeType":"StructuredDocumentation","src":"22403:350:28","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":6275,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22767:8:28","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"value","nameLocation":"22783:5:28","nodeType":"VariableDeclaration","scope":6275,"src":"22776:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6254,"name":"int256","nodeType":"ElementaryTypeName","src":"22776:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22775:14:28"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"downcasted","nameLocation":"22820:10:28","nodeType":"VariableDeclaration","scope":6275,"src":"22813:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6257,"name":"int176","nodeType":"ElementaryTypeName","src":"22813:6:28","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22812:19:28"},"scope":6787,"src":"22758:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6297,"nodeType":"Block","src":"23391:124:28","statements":[{"expression":{"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"23401:10:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"23421:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23414:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6284,"name":"int168","nodeType":"ElementaryTypeName","src":"23414:6:28","typeDescriptions":{}}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23414:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23401:26:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6289,"nodeType":"ExpressionStatement","src":"23401:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"23445:10:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"23459:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23445:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23466:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":6290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23437:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23437:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6296,"nodeType":"ExpressionStatement","src":"23437:71:28"}]},"documentation":{"id":6276,"nodeType":"StructuredDocumentation","src":"22962:350:28","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":6298,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23326:8:28","nodeType":"FunctionDefinition","parameters":{"id":6279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"value","nameLocation":"23342:5:28","nodeType":"VariableDeclaration","scope":6298,"src":"23335:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6277,"name":"int256","nodeType":"ElementaryTypeName","src":"23335:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23334:14:28"},"returnParameters":{"id":6282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6281,"mutability":"mutable","name":"downcasted","nameLocation":"23379:10:28","nodeType":"VariableDeclaration","scope":6298,"src":"23372:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6280,"name":"int168","nodeType":"ElementaryTypeName","src":"23372:6:28","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23371:19:28"},"scope":6787,"src":"23317:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6320,"nodeType":"Block","src":"23950:124:28","statements":[{"expression":{"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"23960:10:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"23980:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23973:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6307,"name":"int160","nodeType":"ElementaryTypeName","src":"23973:6:28","typeDescriptions":{}}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23973:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23960:26:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6312,"nodeType":"ExpressionStatement","src":"23960:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6304,"src":"24004:10:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"24018:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24004:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24025:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":6313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23996:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23996:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6319,"nodeType":"ExpressionStatement","src":"23996:71:28"}]},"documentation":{"id":6299,"nodeType":"StructuredDocumentation","src":"23521:350:28","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":6321,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23885:8:28","nodeType":"FunctionDefinition","parameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"value","nameLocation":"23901:5:28","nodeType":"VariableDeclaration","scope":6321,"src":"23894:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6300,"name":"int256","nodeType":"ElementaryTypeName","src":"23894:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23893:14:28"},"returnParameters":{"id":6305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6304,"mutability":"mutable","name":"downcasted","nameLocation":"23938:10:28","nodeType":"VariableDeclaration","scope":6321,"src":"23931:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6303,"name":"int160","nodeType":"ElementaryTypeName","src":"23931:6:28","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23930:19:28"},"scope":6787,"src":"23876:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6343,"nodeType":"Block","src":"24509:124:28","statements":[{"expression":{"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"24519:10:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"24539:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24532:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6330,"name":"int152","nodeType":"ElementaryTypeName","src":"24532:6:28","typeDescriptions":{}}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24532:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24519:26:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6335,"nodeType":"ExpressionStatement","src":"24519:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"24563:10:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"24577:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24563:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24584:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":6336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24555:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24555:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6342,"nodeType":"ExpressionStatement","src":"24555:71:28"}]},"documentation":{"id":6322,"nodeType":"StructuredDocumentation","src":"24080:350:28","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":6344,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24444:8:28","nodeType":"FunctionDefinition","parameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"value","nameLocation":"24460:5:28","nodeType":"VariableDeclaration","scope":6344,"src":"24453:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6323,"name":"int256","nodeType":"ElementaryTypeName","src":"24453:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24452:14:28"},"returnParameters":{"id":6328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"downcasted","nameLocation":"24497:10:28","nodeType":"VariableDeclaration","scope":6344,"src":"24490:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6326,"name":"int152","nodeType":"ElementaryTypeName","src":"24490:6:28","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24489:19:28"},"scope":6787,"src":"24435:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6366,"nodeType":"Block","src":"25068:124:28","statements":[{"expression":{"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"25078:10:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"25098:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25091:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6353,"name":"int144","nodeType":"ElementaryTypeName","src":"25091:6:28","typeDescriptions":{}}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25091:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25078:26:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6358,"nodeType":"ExpressionStatement","src":"25078:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"25122:10:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"25136:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25122:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25143:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":6359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25114:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25114:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6365,"nodeType":"ExpressionStatement","src":"25114:71:28"}]},"documentation":{"id":6345,"nodeType":"StructuredDocumentation","src":"24639:350:28","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":6367,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25003:8:28","nodeType":"FunctionDefinition","parameters":{"id":6348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6347,"mutability":"mutable","name":"value","nameLocation":"25019:5:28","nodeType":"VariableDeclaration","scope":6367,"src":"25012:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6346,"name":"int256","nodeType":"ElementaryTypeName","src":"25012:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25011:14:28"},"returnParameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6350,"mutability":"mutable","name":"downcasted","nameLocation":"25056:10:28","nodeType":"VariableDeclaration","scope":6367,"src":"25049:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6349,"name":"int144","nodeType":"ElementaryTypeName","src":"25049:6:28","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25048:19:28"},"scope":6787,"src":"24994:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6389,"nodeType":"Block","src":"25627:124:28","statements":[{"expression":{"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6375,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"25637:10:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"25657:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25650:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6376,"name":"int136","nodeType":"ElementaryTypeName","src":"25650:6:28","typeDescriptions":{}}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25650:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25637:26:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6381,"nodeType":"ExpressionStatement","src":"25637:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"25681:10:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"25695:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25681:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25702:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":6382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25673:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25673:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6388,"nodeType":"ExpressionStatement","src":"25673:71:28"}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"25198:350:28","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":6390,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25562:8:28","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"value","nameLocation":"25578:5:28","nodeType":"VariableDeclaration","scope":6390,"src":"25571:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6369,"name":"int256","nodeType":"ElementaryTypeName","src":"25571:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25570:14:28"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"downcasted","nameLocation":"25615:10:28","nodeType":"VariableDeclaration","scope":6390,"src":"25608:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6372,"name":"int136","nodeType":"ElementaryTypeName","src":"25608:6:28","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25607:19:28"},"scope":6787,"src":"25553:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6412,"nodeType":"Block","src":"26186:124:28","statements":[{"expression":{"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"26196:10:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"26216:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26209:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6399,"name":"int128","nodeType":"ElementaryTypeName","src":"26209:6:28","typeDescriptions":{}}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26209:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26196:26:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6404,"nodeType":"ExpressionStatement","src":"26196:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"26240:10:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"26254:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26240:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26261:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":6405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26232:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26232:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6411,"nodeType":"ExpressionStatement","src":"26232:71:28"}]},"documentation":{"id":6391,"nodeType":"StructuredDocumentation","src":"25757:350:28","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":6413,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26121:8:28","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"value","nameLocation":"26137:5:28","nodeType":"VariableDeclaration","scope":6413,"src":"26130:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6392,"name":"int256","nodeType":"ElementaryTypeName","src":"26130:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26129:14:28"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"downcasted","nameLocation":"26174:10:28","nodeType":"VariableDeclaration","scope":6413,"src":"26167:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6395,"name":"int128","nodeType":"ElementaryTypeName","src":"26167:6:28","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26166:19:28"},"scope":6787,"src":"26112:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6435,"nodeType":"Block","src":"26745:124:28","statements":[{"expression":{"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"26755:10:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"26775:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26768:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6422,"name":"int120","nodeType":"ElementaryTypeName","src":"26768:6:28","typeDescriptions":{}}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26768:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26755:26:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6427,"nodeType":"ExpressionStatement","src":"26755:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"26799:10:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"26813:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26799:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26820:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":6428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26791:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26791:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6434,"nodeType":"ExpressionStatement","src":"26791:71:28"}]},"documentation":{"id":6414,"nodeType":"StructuredDocumentation","src":"26316:350:28","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":6436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26680:8:28","nodeType":"FunctionDefinition","parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"value","nameLocation":"26696:5:28","nodeType":"VariableDeclaration","scope":6436,"src":"26689:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6415,"name":"int256","nodeType":"ElementaryTypeName","src":"26689:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26688:14:28"},"returnParameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"downcasted","nameLocation":"26733:10:28","nodeType":"VariableDeclaration","scope":6436,"src":"26726:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6418,"name":"int120","nodeType":"ElementaryTypeName","src":"26726:6:28","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26725:19:28"},"scope":6787,"src":"26671:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"27304:124:28","statements":[{"expression":{"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"27314:10:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"27334:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27327:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6445,"name":"int112","nodeType":"ElementaryTypeName","src":"27327:6:28","typeDescriptions":{}}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27327:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27314:26:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6450,"nodeType":"ExpressionStatement","src":"27314:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"27358:10:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"27372:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27358:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27379:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":6451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27350:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27350:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6457,"nodeType":"ExpressionStatement","src":"27350:71:28"}]},"documentation":{"id":6437,"nodeType":"StructuredDocumentation","src":"26875:350:28","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27239:8:28","nodeType":"FunctionDefinition","parameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"value","nameLocation":"27255:5:28","nodeType":"VariableDeclaration","scope":6459,"src":"27248:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6438,"name":"int256","nodeType":"ElementaryTypeName","src":"27248:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27247:14:28"},"returnParameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"downcasted","nameLocation":"27292:10:28","nodeType":"VariableDeclaration","scope":6459,"src":"27285:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6441,"name":"int112","nodeType":"ElementaryTypeName","src":"27285:6:28","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27284:19:28"},"scope":6787,"src":"27230:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6481,"nodeType":"Block","src":"27863:124:28","statements":[{"expression":{"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"27873:10:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"27893:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27886:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6468,"name":"int104","nodeType":"ElementaryTypeName","src":"27886:6:28","typeDescriptions":{}}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27886:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27873:26:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6473,"nodeType":"ExpressionStatement","src":"27873:26:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"27917:10:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"27931:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27917:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27938:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":6474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27909:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27909:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6480,"nodeType":"ExpressionStatement","src":"27909:71:28"}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"27434:350:28","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":6482,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27798:8:28","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"27814:5:28","nodeType":"VariableDeclaration","scope":6482,"src":"27807:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6461,"name":"int256","nodeType":"ElementaryTypeName","src":"27807:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27806:14:28"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"downcasted","nameLocation":"27851:10:28","nodeType":"VariableDeclaration","scope":6482,"src":"27844:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6464,"name":"int104","nodeType":"ElementaryTypeName","src":"27844:6:28","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27843:19:28"},"scope":6787,"src":"27789:198:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6504,"nodeType":"Block","src":"28415:122:28","statements":[{"expression":{"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6490,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"28425:10:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"28444:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28438:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6491,"name":"int96","nodeType":"ElementaryTypeName","src":"28438:5:28","typeDescriptions":{}}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28438:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28425:25:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6496,"nodeType":"ExpressionStatement","src":"28425:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"28468:10:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"28482:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28468:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28489:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":6497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28460:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28460:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6503,"nodeType":"ExpressionStatement","src":"28460:70:28"}]},"documentation":{"id":6483,"nodeType":"StructuredDocumentation","src":"27993:345:28","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":6505,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28352:7:28","nodeType":"FunctionDefinition","parameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"value","nameLocation":"28367:5:28","nodeType":"VariableDeclaration","scope":6505,"src":"28360:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6484,"name":"int256","nodeType":"ElementaryTypeName","src":"28360:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28359:14:28"},"returnParameters":{"id":6489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"downcasted","nameLocation":"28403:10:28","nodeType":"VariableDeclaration","scope":6505,"src":"28397:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6487,"name":"int96","nodeType":"ElementaryTypeName","src":"28397:5:28","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28396:18:28"},"scope":6787,"src":"28343:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6527,"nodeType":"Block","src":"28965:122:28","statements":[{"expression":{"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"28975:10:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"28994:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28988:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6514,"name":"int88","nodeType":"ElementaryTypeName","src":"28988:5:28","typeDescriptions":{}}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28988:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28975:25:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6519,"nodeType":"ExpressionStatement","src":"28975:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"29018:10:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"29032:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29018:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29039:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":6520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29010:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29010:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6526,"nodeType":"ExpressionStatement","src":"29010:70:28"}]},"documentation":{"id":6506,"nodeType":"StructuredDocumentation","src":"28543:345:28","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":6528,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28902:7:28","nodeType":"FunctionDefinition","parameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"value","nameLocation":"28917:5:28","nodeType":"VariableDeclaration","scope":6528,"src":"28910:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6507,"name":"int256","nodeType":"ElementaryTypeName","src":"28910:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28909:14:28"},"returnParameters":{"id":6512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6511,"mutability":"mutable","name":"downcasted","nameLocation":"28953:10:28","nodeType":"VariableDeclaration","scope":6528,"src":"28947:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6510,"name":"int88","nodeType":"ElementaryTypeName","src":"28947:5:28","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28946:18:28"},"scope":6787,"src":"28893:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6550,"nodeType":"Block","src":"29515:122:28","statements":[{"expression":{"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"29525:10:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"29544:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29538:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6537,"name":"int80","nodeType":"ElementaryTypeName","src":"29538:5:28","typeDescriptions":{}}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29538:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29525:25:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6542,"nodeType":"ExpressionStatement","src":"29525:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"29568:10:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"29582:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29568:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29589:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":6543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29560:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29560:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6549,"nodeType":"ExpressionStatement","src":"29560:70:28"}]},"documentation":{"id":6529,"nodeType":"StructuredDocumentation","src":"29093:345:28","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":6551,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29452:7:28","nodeType":"FunctionDefinition","parameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"value","nameLocation":"29467:5:28","nodeType":"VariableDeclaration","scope":6551,"src":"29460:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6530,"name":"int256","nodeType":"ElementaryTypeName","src":"29460:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29459:14:28"},"returnParameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"downcasted","nameLocation":"29503:10:28","nodeType":"VariableDeclaration","scope":6551,"src":"29497:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6533,"name":"int80","nodeType":"ElementaryTypeName","src":"29497:5:28","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29496:18:28"},"scope":6787,"src":"29443:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6573,"nodeType":"Block","src":"30065:122:28","statements":[{"expression":{"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6559,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"30075:10:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"30094:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30088:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6560,"name":"int72","nodeType":"ElementaryTypeName","src":"30088:5:28","typeDescriptions":{}}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30088:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30075:25:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6565,"nodeType":"ExpressionStatement","src":"30075:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"30118:10:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"30132:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30118:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30139:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":6566,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30110:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30110:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6572,"nodeType":"ExpressionStatement","src":"30110:70:28"}]},"documentation":{"id":6552,"nodeType":"StructuredDocumentation","src":"29643:345:28","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":6574,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30002:7:28","nodeType":"FunctionDefinition","parameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"value","nameLocation":"30017:5:28","nodeType":"VariableDeclaration","scope":6574,"src":"30010:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6553,"name":"int256","nodeType":"ElementaryTypeName","src":"30010:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30009:14:28"},"returnParameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"downcasted","nameLocation":"30053:10:28","nodeType":"VariableDeclaration","scope":6574,"src":"30047:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6556,"name":"int72","nodeType":"ElementaryTypeName","src":"30047:5:28","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30046:18:28"},"scope":6787,"src":"29993:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6596,"nodeType":"Block","src":"30615:122:28","statements":[{"expression":{"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"30625:10:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"30644:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30638:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6583,"name":"int64","nodeType":"ElementaryTypeName","src":"30638:5:28","typeDescriptions":{}}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30638:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30625:25:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6588,"nodeType":"ExpressionStatement","src":"30625:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"30668:10:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"30682:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30668:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":6593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30689:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":6589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30660:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30660:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6595,"nodeType":"ExpressionStatement","src":"30660:70:28"}]},"documentation":{"id":6575,"nodeType":"StructuredDocumentation","src":"30193:345:28","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":6597,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30552:7:28","nodeType":"FunctionDefinition","parameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"value","nameLocation":"30567:5:28","nodeType":"VariableDeclaration","scope":6597,"src":"30560:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6576,"name":"int256","nodeType":"ElementaryTypeName","src":"30560:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30559:14:28"},"returnParameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"mutability":"mutable","name":"downcasted","nameLocation":"30603:10:28","nodeType":"VariableDeclaration","scope":6597,"src":"30597:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6579,"name":"int64","nodeType":"ElementaryTypeName","src":"30597:5:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30596:18:28"},"scope":6787,"src":"30543:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6619,"nodeType":"Block","src":"31165:122:28","statements":[{"expression":{"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"31175:10:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"31194:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31188:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6606,"name":"int56","nodeType":"ElementaryTypeName","src":"31188:5:28","typeDescriptions":{}}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31188:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31175:25:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6611,"nodeType":"ExpressionStatement","src":"31175:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"31218:10:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"31232:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31218:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":6616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31239:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":6612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31210:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31210:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6618,"nodeType":"ExpressionStatement","src":"31210:70:28"}]},"documentation":{"id":6598,"nodeType":"StructuredDocumentation","src":"30743:345:28","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":6620,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31102:7:28","nodeType":"FunctionDefinition","parameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"value","nameLocation":"31117:5:28","nodeType":"VariableDeclaration","scope":6620,"src":"31110:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6599,"name":"int256","nodeType":"ElementaryTypeName","src":"31110:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31109:14:28"},"returnParameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6603,"mutability":"mutable","name":"downcasted","nameLocation":"31153:10:28","nodeType":"VariableDeclaration","scope":6620,"src":"31147:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6602,"name":"int56","nodeType":"ElementaryTypeName","src":"31147:5:28","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31146:18:28"},"scope":6787,"src":"31093:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6642,"nodeType":"Block","src":"31715:122:28","statements":[{"expression":{"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"31725:10:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"31744:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31738:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6629,"name":"int48","nodeType":"ElementaryTypeName","src":"31738:5:28","typeDescriptions":{}}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31738:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31725:25:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6634,"nodeType":"ExpressionStatement","src":"31725:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"31768:10:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"31782:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31768:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31789:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":6635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31760:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31760:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6641,"nodeType":"ExpressionStatement","src":"31760:70:28"}]},"documentation":{"id":6621,"nodeType":"StructuredDocumentation","src":"31293:345:28","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":6643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31652:7:28","nodeType":"FunctionDefinition","parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"value","nameLocation":"31667:5:28","nodeType":"VariableDeclaration","scope":6643,"src":"31660:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6622,"name":"int256","nodeType":"ElementaryTypeName","src":"31660:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31659:14:28"},"returnParameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"downcasted","nameLocation":"31703:10:28","nodeType":"VariableDeclaration","scope":6643,"src":"31697:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6625,"name":"int48","nodeType":"ElementaryTypeName","src":"31697:5:28","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31696:18:28"},"scope":6787,"src":"31643:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6665,"nodeType":"Block","src":"32265:122:28","statements":[{"expression":{"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"32275:10:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"32294:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32288:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6652,"name":"int40","nodeType":"ElementaryTypeName","src":"32288:5:28","typeDescriptions":{}}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32288:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32275:25:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6657,"nodeType":"ExpressionStatement","src":"32275:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"32318:10:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"32332:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32318:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32339:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":6658,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32310:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32310:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6664,"nodeType":"ExpressionStatement","src":"32310:70:28"}]},"documentation":{"id":6644,"nodeType":"StructuredDocumentation","src":"31843:345:28","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":6666,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32202:7:28","nodeType":"FunctionDefinition","parameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"value","nameLocation":"32217:5:28","nodeType":"VariableDeclaration","scope":6666,"src":"32210:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6645,"name":"int256","nodeType":"ElementaryTypeName","src":"32210:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32209:14:28"},"returnParameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"downcasted","nameLocation":"32253:10:28","nodeType":"VariableDeclaration","scope":6666,"src":"32247:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6648,"name":"int40","nodeType":"ElementaryTypeName","src":"32247:5:28","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32246:18:28"},"scope":6787,"src":"32193:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6688,"nodeType":"Block","src":"32815:122:28","statements":[{"expression":{"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6674,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"32825:10:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"32844:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32838:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6675,"name":"int32","nodeType":"ElementaryTypeName","src":"32838:5:28","typeDescriptions":{}}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32838:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32825:25:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6680,"nodeType":"ExpressionStatement","src":"32825:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6682,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"32868:10:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"32882:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32868:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":6685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32889:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":6681,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32860:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32860:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6687,"nodeType":"ExpressionStatement","src":"32860:70:28"}]},"documentation":{"id":6667,"nodeType":"StructuredDocumentation","src":"32393:345:28","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":6689,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32752:7:28","nodeType":"FunctionDefinition","parameters":{"id":6670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6669,"mutability":"mutable","name":"value","nameLocation":"32767:5:28","nodeType":"VariableDeclaration","scope":6689,"src":"32760:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6668,"name":"int256","nodeType":"ElementaryTypeName","src":"32760:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32759:14:28"},"returnParameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"downcasted","nameLocation":"32803:10:28","nodeType":"VariableDeclaration","scope":6689,"src":"32797:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6671,"name":"int32","nodeType":"ElementaryTypeName","src":"32797:5:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32796:18:28"},"scope":6787,"src":"32743:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6711,"nodeType":"Block","src":"33365:122:28","statements":[{"expression":{"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"33375:10:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"33394:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33388:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6698,"name":"int24","nodeType":"ElementaryTypeName","src":"33388:5:28","typeDescriptions":{}}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33388:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33375:25:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6703,"nodeType":"ExpressionStatement","src":"33375:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"33418:10:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6692,"src":"33432:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33418:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33439:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":6704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33410:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33410:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6710,"nodeType":"ExpressionStatement","src":"33410:70:28"}]},"documentation":{"id":6690,"nodeType":"StructuredDocumentation","src":"32943:345:28","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":6712,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33302:7:28","nodeType":"FunctionDefinition","parameters":{"id":6693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6692,"mutability":"mutable","name":"value","nameLocation":"33317:5:28","nodeType":"VariableDeclaration","scope":6712,"src":"33310:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6691,"name":"int256","nodeType":"ElementaryTypeName","src":"33310:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33309:14:28"},"returnParameters":{"id":6696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"downcasted","nameLocation":"33353:10:28","nodeType":"VariableDeclaration","scope":6712,"src":"33347:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6694,"name":"int24","nodeType":"ElementaryTypeName","src":"33347:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33346:18:28"},"scope":6787,"src":"33293:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6734,"nodeType":"Block","src":"33915:122:28","statements":[{"expression":{"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"33925:10:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"33944:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33938:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6721,"name":"int16","nodeType":"ElementaryTypeName","src":"33938:5:28","typeDescriptions":{}}},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33938:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33925:25:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6726,"nodeType":"ExpressionStatement","src":"33925:25:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"33968:10:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"33982:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33968:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33989:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":6727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33960:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33960:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6733,"nodeType":"ExpressionStatement","src":"33960:70:28"}]},"documentation":{"id":6713,"nodeType":"StructuredDocumentation","src":"33493:345:28","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":6735,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33852:7:28","nodeType":"FunctionDefinition","parameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6715,"mutability":"mutable","name":"value","nameLocation":"33867:5:28","nodeType":"VariableDeclaration","scope":6735,"src":"33860:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6714,"name":"int256","nodeType":"ElementaryTypeName","src":"33860:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33859:14:28"},"returnParameters":{"id":6719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6718,"mutability":"mutable","name":"downcasted","nameLocation":"33903:10:28","nodeType":"VariableDeclaration","scope":6735,"src":"33897:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6717,"name":"int16","nodeType":"ElementaryTypeName","src":"33897:5:28","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33896:18:28"},"scope":6787,"src":"33843:194:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6757,"nodeType":"Block","src":"34458:120:28","statements":[{"expression":{"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6743,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"34468:10:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"34486:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34481:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6744,"name":"int8","nodeType":"ElementaryTypeName","src":"34481:4:28","typeDescriptions":{}}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34481:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34468:24:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6749,"nodeType":"ExpressionStatement","src":"34468:24:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6751,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"34510:10:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"34524:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34510:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34531:39:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":6750,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34502:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34502:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6756,"nodeType":"ExpressionStatement","src":"34502:69:28"}]},"documentation":{"id":6736,"nodeType":"StructuredDocumentation","src":"34043:340:28","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":6758,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34397:6:28","nodeType":"FunctionDefinition","parameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"value","nameLocation":"34411:5:28","nodeType":"VariableDeclaration","scope":6758,"src":"34404:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6737,"name":"int256","nodeType":"ElementaryTypeName","src":"34404:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34403:14:28"},"returnParameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"downcasted","nameLocation":"34446:10:28","nodeType":"VariableDeclaration","scope":6758,"src":"34441:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6740,"name":"int8","nodeType":"ElementaryTypeName","src":"34441:4:28","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34440:17:28"},"scope":6787,"src":"34388:190:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6785,"nodeType":"Block","src":"34856:233:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"34973:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34995:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6771,"name":"int256","nodeType":"ElementaryTypeName","src":"34995:6:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6770,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34990:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34990:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34990:16:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34982:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6768,"name":"uint256","nodeType":"ElementaryTypeName","src":"34982:7:28","typeDescriptions":{}}},"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34982:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34973:34:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"35009:42:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":6766,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34965:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34965:87:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6779,"nodeType":"ExpressionStatement","src":"34965:87:28"},{"expression":{"arguments":[{"id":6782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"35076:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35069:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6780,"name":"int256","nodeType":"ElementaryTypeName","src":"35069:6:28","typeDescriptions":{}}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35069:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6765,"id":6784,"nodeType":"Return","src":"35062:20:28"}]},"documentation":{"id":6759,"nodeType":"StructuredDocumentation","src":"34584:203:28","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":6786,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34801:8:28","nodeType":"FunctionDefinition","parameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"value","nameLocation":"34818:5:28","nodeType":"VariableDeclaration","scope":6786,"src":"34810:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6760,"name":"uint256","nodeType":"ElementaryTypeName","src":"34810:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34809:15:28"},"returnParameters":{"id":6765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6786,"src":"34848:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6763,"name":"int256","nodeType":"ElementaryTypeName","src":"34848:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34847:8:28"},"scope":6787,"src":"34792:297:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6788,"src":"927:34164:28","usedErrors":[]}],"src":"192:34900:28"},"id":28},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[7400]},"id":7401,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6789,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:29"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":6790,"nodeType":"StructuredDocumentation","src":"230:1090:29","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":7400,"linearizedBaseContracts":[7400],"name":"EnumerableSetUpgradeable","nameLocation":"1329:24:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":6798,"members":[{"constant":false,"id":6793,"mutability":"mutable","name":"_values","nameLocation":"1864:7:29","nodeType":"VariableDeclaration","scope":6798,"src":"1854:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1854:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6792,"nodeType":"ArrayTypeName","src":"1854:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6797,"mutability":"mutable","name":"_indexes","nameLocation":"2032:8:29","nodeType":"VariableDeclaration","scope":6798,"src":"2004:36:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":6796,"keyType":{"id":6794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2012:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2004:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":6795,"name":"uint256","nodeType":"ElementaryTypeName","src":"2023:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1807:3:29","nodeType":"StructDefinition","scope":7400,"src":"1800:247:29","visibility":"public"},{"body":{"id":6839,"nodeType":"Block","src":"2286:335:29","statements":[{"condition":{"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2300:22:29","subExpression":{"arguments":[{"id":6810,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"2311:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"2316:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6809,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"2301:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2301:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6837,"nodeType":"Block","src":"2578:37:29","statements":[{"expression":{"hexValue":"66616c7365","id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2599:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6808,"id":6836,"nodeType":"Return","src":"2592:12:29"}]},"id":6838,"nodeType":"IfStatement","src":"2296:319:29","trueBody":{"id":6834,"nodeType":"Block","src":"2324:248:29","statements":[{"expression":{"arguments":[{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"2355:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":6814,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"2338:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6793,"src":"2338:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2338:16:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2338:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6821,"nodeType":"ExpressionStatement","src":"2338:23:29"},{"expression":{"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6822,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"2496:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6797,"src":"2496:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6826,"indexExpression":{"id":6824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"2509:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2496:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":6827,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"2518:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6793,"src":"2518:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2518:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2496:40:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6831,"nodeType":"ExpressionStatement","src":"2496:40:29"},{"expression":{"hexValue":"74727565","id":6832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2557:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6808,"id":6833,"nodeType":"Return","src":"2550:11:29"}]}}]},"documentation":{"id":6799,"nodeType":"StructuredDocumentation","src":"2053:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6840,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2226:4:29","nodeType":"FunctionDefinition","parameters":{"id":6805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"set","nameLocation":"2243:3:29","nodeType":"VariableDeclaration","scope":6840,"src":"2231:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6801,"nodeType":"UserDefinedTypeName","pathNode":{"id":6800,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"2231:3:29"},"referencedDeclaration":6798,"src":"2231:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":6804,"mutability":"mutable","name":"value","nameLocation":"2256:5:29","nodeType":"VariableDeclaration","scope":6840,"src":"2248:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2230:32:29"},"returnParameters":{"id":6808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6840,"src":"2280:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6806,"name":"bool","nodeType":"ElementaryTypeName","src":"2280:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2279:6:29"},"scope":7400,"src":"2217:404:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6923,"nodeType":"Block","src":"2861:1316:29","statements":[{"assignments":[6852],"declarations":[{"constant":false,"id":6852,"mutability":"mutable","name":"valueIndex","nameLocation":"2979:10:29","nodeType":"VariableDeclaration","scope":6923,"src":"2971:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2971:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6857,"initialValue":{"baseExpression":{"expression":{"id":6853,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"2992:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6797,"src":"2992:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6856,"indexExpression":{"id":6855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"3005:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2992:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2971:40:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"3026:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3026:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6921,"nodeType":"Block","src":"4134:37:29","statements":[{"expression":{"hexValue":"66616c7365","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4155:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6850,"id":6920,"nodeType":"Return","src":"4148:12:29"}]},"id":6922,"nodeType":"IfStatement","src":"3022:1149:29","trueBody":{"id":6918,"nodeType":"Block","src":"3043:1085:29","statements":[{"assignments":[6862],"declarations":[{"constant":false,"id":6862,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3403:13:29","nodeType":"VariableDeclaration","scope":6918,"src":"3395:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6861,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6863,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"3419:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3432:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3419:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3395:38:29"},{"assignments":[6868],"declarations":[{"constant":false,"id":6868,"mutability":"mutable","name":"lastIndex","nameLocation":"3455:9:29","nodeType":"VariableDeclaration","scope":6918,"src":"3447:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3447:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6869,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"3467:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6793,"src":"3467:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3467:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3488:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3467:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3447:42:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6875,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"3508:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6876,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"3521:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3508:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6902,"nodeType":"IfStatement","src":"3504:398:29","trueBody":{"id":6901,"nodeType":"Block","src":"3536:366:29","statements":[{"assignments":[6879],"declarations":[{"constant":false,"id":6879,"mutability":"mutable","name":"lastValue","nameLocation":"3562:9:29","nodeType":"VariableDeclaration","scope":6901,"src":"3554:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3554:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6884,"initialValue":{"baseExpression":{"expression":{"id":6880,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"3574:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6793,"src":"3574:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6883,"indexExpression":{"id":6882,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"3586:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3574:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3554:42:29"},{"expression":{"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6885,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"3696:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6793,"src":"3696:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6889,"indexExpression":{"id":6887,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"3708:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3696:26:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6890,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3725:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3696:38:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6892,"nodeType":"ExpressionStatement","src":"3696:38:29"},{"expression":{"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6893,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"3808:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6797,"src":"3808:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6897,"indexExpression":{"id":6895,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3821:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3808:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6898,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"3834:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3808:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6900,"nodeType":"ExpressionStatement","src":"3808:36:29"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":6903,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"3980:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6793,"src":"3980:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3980:15:29","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3980:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6909,"nodeType":"ExpressionStatement","src":"3980:17:29"},{"expression":{"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4065:26:29","subExpression":{"baseExpression":{"expression":{"id":6910,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"4072:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6797,"src":"4072:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6913,"indexExpression":{"id":6912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"4085:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4072:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6915,"nodeType":"ExpressionStatement","src":"4065:26:29"},{"expression":{"hexValue":"74727565","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4113:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6850,"id":6917,"nodeType":"Return","src":"4106:11:29"}]}}]},"documentation":{"id":6841,"nodeType":"StructuredDocumentation","src":"2627:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6924,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2798:7:29","nodeType":"FunctionDefinition","parameters":{"id":6847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6844,"mutability":"mutable","name":"set","nameLocation":"2818:3:29","nodeType":"VariableDeclaration","scope":6924,"src":"2806:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6843,"nodeType":"UserDefinedTypeName","pathNode":{"id":6842,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"2806:3:29"},"referencedDeclaration":6798,"src":"2806:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":6846,"mutability":"mutable","name":"value","nameLocation":"2831:5:29","nodeType":"VariableDeclaration","scope":6924,"src":"2823:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2823:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2805:32:29"},"returnParameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6924,"src":"2855:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6848,"name":"bool","nodeType":"ElementaryTypeName","src":"2855:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2854:6:29"},"scope":7400,"src":"2789:1388:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6942,"nodeType":"Block","src":"4337:48:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":6935,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"4354:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6797,"src":"4354:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6938,"indexExpression":{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"4367:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4354:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4377:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4354:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6934,"id":6941,"nodeType":"Return","src":"4347:31:29"}]},"documentation":{"id":6925,"nodeType":"StructuredDocumentation","src":"4183:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":6943,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4267:9:29","nodeType":"FunctionDefinition","parameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"set","nameLocation":"4289:3:29","nodeType":"VariableDeclaration","scope":6943,"src":"4277:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6927,"nodeType":"UserDefinedTypeName","pathNode":{"id":6926,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"4277:3:29"},"referencedDeclaration":6798,"src":"4277:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":6930,"mutability":"mutable","name":"value","nameLocation":"4302:5:29","nodeType":"VariableDeclaration","scope":6943,"src":"4294:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4294:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4276:32:29"},"returnParameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6943,"src":"4331:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6932,"name":"bool","nodeType":"ElementaryTypeName","src":"4331:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4330:6:29"},"scope":7400,"src":"4258:127:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6956,"nodeType":"Block","src":"4531:42:29","statements":[{"expression":{"expression":{"expression":{"id":6952,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"4548:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6793,"src":"4548:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4548:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6951,"id":6955,"nodeType":"Return","src":"4541:25:29"}]},"documentation":{"id":6944,"nodeType":"StructuredDocumentation","src":"4391:70:29","text":" @dev Returns the number of values on the set. O(1)."},"id":6957,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4475:7:29","nodeType":"FunctionDefinition","parameters":{"id":6948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6947,"mutability":"mutable","name":"set","nameLocation":"4495:3:29","nodeType":"VariableDeclaration","scope":6957,"src":"4483:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6946,"nodeType":"UserDefinedTypeName","pathNode":{"id":6945,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"4483:3:29"},"referencedDeclaration":6798,"src":"4483:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4482:17:29"},"returnParameters":{"id":6951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6957,"src":"4522:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6949,"name":"uint256","nodeType":"ElementaryTypeName","src":"4522:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4521:9:29"},"scope":7400,"src":"4466:107:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6973,"nodeType":"Block","src":"4991:42:29","statements":[{"expression":{"baseExpression":{"expression":{"id":6968,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"5008:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6793,"src":"5008:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6971,"indexExpression":{"id":6970,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"5020:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5008:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6967,"id":6972,"nodeType":"Return","src":"5001:25:29"}]},"documentation":{"id":6958,"nodeType":"StructuredDocumentation","src":"4579:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6974,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4924:3:29","nodeType":"FunctionDefinition","parameters":{"id":6964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6961,"mutability":"mutable","name":"set","nameLocation":"4940:3:29","nodeType":"VariableDeclaration","scope":6974,"src":"4928:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6960,"nodeType":"UserDefinedTypeName","pathNode":{"id":6959,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"4928:3:29"},"referencedDeclaration":6798,"src":"4928:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":6963,"mutability":"mutable","name":"index","nameLocation":"4953:5:29","nodeType":"VariableDeclaration","scope":6974,"src":"4945:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6962,"name":"uint256","nodeType":"ElementaryTypeName","src":"4945:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4927:32:29"},"returnParameters":{"id":6967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6974,"src":"4982:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4982:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4981:9:29"},"scope":7400,"src":"4915:118:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6987,"nodeType":"Block","src":"5647:35:29","statements":[{"expression":{"expression":{"id":6984,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"5664:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":6985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6793,"src":"5664:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":6983,"id":6986,"nodeType":"Return","src":"5657:18:29"}]},"documentation":{"id":6975,"nodeType":"StructuredDocumentation","src":"5039:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6988,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5582:7:29","nodeType":"FunctionDefinition","parameters":{"id":6979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6978,"mutability":"mutable","name":"set","nameLocation":"5602:3:29","nodeType":"VariableDeclaration","scope":6988,"src":"5590:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6977,"nodeType":"UserDefinedTypeName","pathNode":{"id":6976,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"5590:3:29"},"referencedDeclaration":6798,"src":"5590:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5589:17:29"},"returnParameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6988,"src":"5629:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5629:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6981,"nodeType":"ArrayTypeName","src":"5629:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5628:18:29"},"scope":7400,"src":"5573:109:29","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":6992,"members":[{"constant":false,"id":6991,"mutability":"mutable","name":"_inner","nameLocation":"5739:6:29","nodeType":"VariableDeclaration","scope":6992,"src":"5735:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6990,"nodeType":"UserDefinedTypeName","pathNode":{"id":6989,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"5735:3:29"},"referencedDeclaration":6798,"src":"5735:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5714:10:29","nodeType":"StructDefinition","scope":7400,"src":"5707:45:29","visibility":"public"},{"body":{"id":7009,"nodeType":"Block","src":"5998:47:29","statements":[{"expression":{"arguments":[{"expression":{"id":7004,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"6020:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":7005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6991,"src":"6020:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":7006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"6032:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7003,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"6015:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7002,"id":7008,"nodeType":"Return","src":"6008:30:29"}]},"documentation":{"id":6993,"nodeType":"StructuredDocumentation","src":"5758:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7010,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5931:3:29","nodeType":"FunctionDefinition","parameters":{"id":6999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"set","nameLocation":"5954:3:29","nodeType":"VariableDeclaration","scope":7010,"src":"5935:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":6995,"nodeType":"UserDefinedTypeName","pathNode":{"id":6994,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":6992,"src":"5935:10:29"},"referencedDeclaration":6992,"src":"5935:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6998,"mutability":"mutable","name":"value","nameLocation":"5967:5:29","nodeType":"VariableDeclaration","scope":7010,"src":"5959:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5959:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5934:39:29"},"returnParameters":{"id":7002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7010,"src":"5992:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7000,"name":"bool","nodeType":"ElementaryTypeName","src":"5992:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5991:6:29"},"scope":7400,"src":"5922:123:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7027,"nodeType":"Block","src":"6292:50:29","statements":[{"expression":{"arguments":[{"expression":{"id":7022,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"6317:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":7023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6991,"src":"6317:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":7024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"6329:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7021,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"6309:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6309:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7020,"id":7026,"nodeType":"Return","src":"6302:33:29"}]},"documentation":{"id":7011,"nodeType":"StructuredDocumentation","src":"6051:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7028,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6222:6:29","nodeType":"FunctionDefinition","parameters":{"id":7017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"set","nameLocation":"6248:3:29","nodeType":"VariableDeclaration","scope":7028,"src":"6229:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":7013,"nodeType":"UserDefinedTypeName","pathNode":{"id":7012,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":6992,"src":"6229:10:29"},"referencedDeclaration":6992,"src":"6229:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7016,"mutability":"mutable","name":"value","nameLocation":"6261:5:29","nodeType":"VariableDeclaration","scope":7028,"src":"6253:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6253:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6228:39:29"},"returnParameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7028,"src":"6286:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7018,"name":"bool","nodeType":"ElementaryTypeName","src":"6286:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6285:6:29"},"scope":7400,"src":"6213:129:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7045,"nodeType":"Block","src":"6509:52:29","statements":[{"expression":{"arguments":[{"expression":{"id":7040,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"6536:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":7041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6991,"src":"6536:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":7042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"6548:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7039,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"6526:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6526:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7038,"id":7044,"nodeType":"Return","src":"6519:35:29"}]},"documentation":{"id":7029,"nodeType":"StructuredDocumentation","src":"6348:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":7046,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6432:8:29","nodeType":"FunctionDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"mutability":"mutable","name":"set","nameLocation":"6460:3:29","nodeType":"VariableDeclaration","scope":7046,"src":"6441:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":7031,"nodeType":"UserDefinedTypeName","pathNode":{"id":7030,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":6992,"src":"6441:10:29"},"referencedDeclaration":6992,"src":"6441:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7034,"mutability":"mutable","name":"value","nameLocation":"6473:5:29","nodeType":"VariableDeclaration","scope":7046,"src":"6465:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6465:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6440:39:29"},"returnParameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7046,"src":"6503:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7036,"name":"bool","nodeType":"ElementaryTypeName","src":"6503:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6502:6:29"},"scope":7400,"src":"6423:138:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7060,"nodeType":"Block","src":"6714:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":7056,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"6739:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":7057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6991,"src":"6739:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":7055,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"6731:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6731:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7054,"id":7059,"nodeType":"Return","src":"6724:26:29"}]},"documentation":{"id":7047,"nodeType":"StructuredDocumentation","src":"6567:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":7061,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6651:6:29","nodeType":"FunctionDefinition","parameters":{"id":7051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"mutability":"mutable","name":"set","nameLocation":"6677:3:29","nodeType":"VariableDeclaration","scope":7061,"src":"6658:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":7049,"nodeType":"UserDefinedTypeName","pathNode":{"id":7048,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":6992,"src":"6658:10:29"},"referencedDeclaration":6992,"src":"6658:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6657:24:29"},"returnParameters":{"id":7054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7061,"src":"6705:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6705:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6704:9:29"},"scope":7400,"src":"6642:115:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7078,"nodeType":"Block","src":"7182:46:29","statements":[{"expression":{"arguments":[{"expression":{"id":7073,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"7203:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":7074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6991,"src":"7203:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":7075,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"7215:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7072,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"7199:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7199:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7071,"id":7077,"nodeType":"Return","src":"7192:29:29"}]},"documentation":{"id":7062,"nodeType":"StructuredDocumentation","src":"6763:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7079,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7108:2:29","nodeType":"FunctionDefinition","parameters":{"id":7068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"set","nameLocation":"7130:3:29","nodeType":"VariableDeclaration","scope":7079,"src":"7111:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":7064,"nodeType":"UserDefinedTypeName","pathNode":{"id":7063,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":6992,"src":"7111:10:29"},"referencedDeclaration":6992,"src":"7111:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7067,"mutability":"mutable","name":"index","nameLocation":"7143:5:29","nodeType":"VariableDeclaration","scope":7079,"src":"7135:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7066,"name":"uint256","nodeType":"ElementaryTypeName","src":"7135:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7110:39:29"},"returnParameters":{"id":7071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7079,"src":"7173:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7173:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7172:9:29"},"scope":7400,"src":"7099:129:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7108,"nodeType":"Block","src":"7849:219:29","statements":[{"assignments":[7093],"declarations":[{"constant":false,"id":7093,"mutability":"mutable","name":"store","nameLocation":"7876:5:29","nodeType":"VariableDeclaration","scope":7108,"src":"7859:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7859:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7092,"nodeType":"ArrayTypeName","src":"7859:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7098,"initialValue":{"arguments":[{"expression":{"id":7095,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"7892:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":7096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6991,"src":"7892:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":7094,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"7884:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7884:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7859:44:29"},{"assignments":[7103],"declarations":[{"constant":false,"id":7103,"mutability":"mutable","name":"result","nameLocation":"7930:6:29","nodeType":"VariableDeclaration","scope":7108,"src":"7913:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7913:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7102,"nodeType":"ArrayTypeName","src":"7913:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7104,"nodeType":"VariableDeclarationStatement","src":"7913:23:29"},{"AST":{"nodeType":"YulBlock","src":"7999:39:29","statements":[{"nodeType":"YulAssignment","src":"8013:15:29","value":{"name":"store","nodeType":"YulIdentifier","src":"8023:5:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8013:6:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":7103,"isOffset":false,"isSlot":false,"src":"8013:6:29","valueSize":1},{"declaration":7093,"isOffset":false,"isSlot":false,"src":"8023:5:29","valueSize":1}],"id":7105,"nodeType":"InlineAssembly","src":"7990:48:29"},{"expression":{"id":7106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"8055:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":7088,"id":7107,"nodeType":"Return","src":"8048:13:29"}]},"documentation":{"id":7080,"nodeType":"StructuredDocumentation","src":"7234:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7109,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7777:6:29","nodeType":"FunctionDefinition","parameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"set","nameLocation":"7803:3:29","nodeType":"VariableDeclaration","scope":7109,"src":"7784:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":7082,"nodeType":"UserDefinedTypeName","pathNode":{"id":7081,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":6992,"src":"7784:10:29"},"referencedDeclaration":6992,"src":"7784:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6992_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7783:24:29"},"returnParameters":{"id":7088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7109,"src":"7831:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7831:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7086,"nodeType":"ArrayTypeName","src":"7831:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7830:18:29"},"scope":7400,"src":"7768:300:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":7113,"members":[{"constant":false,"id":7112,"mutability":"mutable","name":"_inner","nameLocation":"8125:6:29","nodeType":"VariableDeclaration","scope":7113,"src":"8121:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":7111,"nodeType":"UserDefinedTypeName","pathNode":{"id":7110,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"8121:3:29"},"referencedDeclaration":6798,"src":"8121:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8100:10:29","nodeType":"StructDefinition","scope":7400,"src":"8093:45:29","visibility":"public"},{"body":{"id":7139,"nodeType":"Block","src":"8384:74:29","statements":[{"expression":{"arguments":[{"expression":{"id":7125,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"8406:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":7126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"8406:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"8442:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7131,"name":"uint160","nodeType":"ElementaryTypeName","src":"8434:7:29","typeDescriptions":{}}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8434:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7129,"name":"uint256","nodeType":"ElementaryTypeName","src":"8426:7:29","typeDescriptions":{}}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8426:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8418:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8418:7:29","typeDescriptions":{}}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8418:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7124,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"8401:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8401:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7123,"id":7138,"nodeType":"Return","src":"8394:57:29"}]},"documentation":{"id":7114,"nodeType":"StructuredDocumentation","src":"8144:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7140,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8317:3:29","nodeType":"FunctionDefinition","parameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"set","nameLocation":"8340:3:29","nodeType":"VariableDeclaration","scope":7140,"src":"8321:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":7116,"nodeType":"UserDefinedTypeName","pathNode":{"id":7115,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"8321:10:29"},"referencedDeclaration":7113,"src":"8321:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7119,"mutability":"mutable","name":"value","nameLocation":"8353:5:29","nodeType":"VariableDeclaration","scope":7140,"src":"8345:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7118,"name":"address","nodeType":"ElementaryTypeName","src":"8345:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8320:39:29"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7140,"src":"8378:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7121,"name":"bool","nodeType":"ElementaryTypeName","src":"8378:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8377:6:29"},"scope":7400,"src":"8308:150:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7166,"nodeType":"Block","src":"8705:77:29","statements":[{"expression":{"arguments":[{"expression":{"id":7152,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"8730:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":7153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"8730:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"8766:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7158,"name":"uint160","nodeType":"ElementaryTypeName","src":"8758:7:29","typeDescriptions":{}}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8758:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7156,"name":"uint256","nodeType":"ElementaryTypeName","src":"8750:7:29","typeDescriptions":{}}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8750:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8742:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8742:7:29","typeDescriptions":{}}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8742:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7151,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"8722:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8722:53:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7150,"id":7165,"nodeType":"Return","src":"8715:60:29"}]},"documentation":{"id":7141,"nodeType":"StructuredDocumentation","src":"8464:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7167,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8635:6:29","nodeType":"FunctionDefinition","parameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7144,"mutability":"mutable","name":"set","nameLocation":"8661:3:29","nodeType":"VariableDeclaration","scope":7167,"src":"8642:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":7143,"nodeType":"UserDefinedTypeName","pathNode":{"id":7142,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"8642:10:29"},"referencedDeclaration":7113,"src":"8642:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7146,"mutability":"mutable","name":"value","nameLocation":"8674:5:29","nodeType":"VariableDeclaration","scope":7167,"src":"8666:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7145,"name":"address","nodeType":"ElementaryTypeName","src":"8666:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8641:39:29"},"returnParameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7167,"src":"8699:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7148,"name":"bool","nodeType":"ElementaryTypeName","src":"8699:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8698:6:29"},"scope":7400,"src":"8626:156:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7193,"nodeType":"Block","src":"8949:79:29","statements":[{"expression":{"arguments":[{"expression":{"id":7179,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"8976:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":7180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"8976:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"9012:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7185,"name":"uint160","nodeType":"ElementaryTypeName","src":"9004:7:29","typeDescriptions":{}}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9004:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7183,"name":"uint256","nodeType":"ElementaryTypeName","src":"8996:7:29","typeDescriptions":{}}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8996:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8988:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8988:7:29","typeDescriptions":{}}},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8988:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7178,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"8966:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8966:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7177,"id":7192,"nodeType":"Return","src":"8959:62:29"}]},"documentation":{"id":7168,"nodeType":"StructuredDocumentation","src":"8788:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":7194,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8872:8:29","nodeType":"FunctionDefinition","parameters":{"id":7174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7171,"mutability":"mutable","name":"set","nameLocation":"8900:3:29","nodeType":"VariableDeclaration","scope":7194,"src":"8881:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":7170,"nodeType":"UserDefinedTypeName","pathNode":{"id":7169,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"8881:10:29"},"referencedDeclaration":7113,"src":"8881:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7173,"mutability":"mutable","name":"value","nameLocation":"8913:5:29","nodeType":"VariableDeclaration","scope":7194,"src":"8905:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7172,"name":"address","nodeType":"ElementaryTypeName","src":"8905:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8880:39:29"},"returnParameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7194,"src":"8943:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7175,"name":"bool","nodeType":"ElementaryTypeName","src":"8943:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8942:6:29"},"scope":7400,"src":"8863:165:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7208,"nodeType":"Block","src":"9181:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":7204,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"9206:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":7205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"9206:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":7203,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"9198:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9198:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7202,"id":7207,"nodeType":"Return","src":"9191:26:29"}]},"documentation":{"id":7195,"nodeType":"StructuredDocumentation","src":"9034:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":7209,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9118:6:29","nodeType":"FunctionDefinition","parameters":{"id":7199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7198,"mutability":"mutable","name":"set","nameLocation":"9144:3:29","nodeType":"VariableDeclaration","scope":7209,"src":"9125:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":7197,"nodeType":"UserDefinedTypeName","pathNode":{"id":7196,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"9125:10:29"},"referencedDeclaration":7113,"src":"9125:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9124:24:29"},"returnParameters":{"id":7202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7209,"src":"9172:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7200,"name":"uint256","nodeType":"ElementaryTypeName","src":"9172:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9171:9:29"},"scope":7400,"src":"9109:115:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7235,"nodeType":"Block","src":"9649:73:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":7227,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"9694:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":7228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"9694:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":7229,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"9706:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7226,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"9690:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9690:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7224,"name":"uint256","nodeType":"ElementaryTypeName","src":"9682:7:29","typeDescriptions":{}}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9682:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7222,"name":"uint160","nodeType":"ElementaryTypeName","src":"9674:7:29","typeDescriptions":{}}},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9674:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9666:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7220,"name":"address","nodeType":"ElementaryTypeName","src":"9666:7:29","typeDescriptions":{}}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9666:49:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7219,"id":7234,"nodeType":"Return","src":"9659:56:29"}]},"documentation":{"id":7210,"nodeType":"StructuredDocumentation","src":"9230:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7236,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9575:2:29","nodeType":"FunctionDefinition","parameters":{"id":7216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"set","nameLocation":"9597:3:29","nodeType":"VariableDeclaration","scope":7236,"src":"9578:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":7212,"nodeType":"UserDefinedTypeName","pathNode":{"id":7211,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"9578:10:29"},"referencedDeclaration":7113,"src":"9578:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7215,"mutability":"mutable","name":"index","nameLocation":"9610:5:29","nodeType":"VariableDeclaration","scope":7236,"src":"9602:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7214,"name":"uint256","nodeType":"ElementaryTypeName","src":"9602:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9577:39:29"},"returnParameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7236,"src":"9640:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7217,"name":"address","nodeType":"ElementaryTypeName","src":"9640:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9639:9:29"},"scope":7400,"src":"9566:156:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7265,"nodeType":"Block","src":"10343:219:29","statements":[{"assignments":[7250],"declarations":[{"constant":false,"id":7250,"mutability":"mutable","name":"store","nameLocation":"10370:5:29","nodeType":"VariableDeclaration","scope":7265,"src":"10353:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10353:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7249,"nodeType":"ArrayTypeName","src":"10353:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7255,"initialValue":{"arguments":[{"expression":{"id":7252,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"10386:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":7253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7112,"src":"10386:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":7251,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"10378:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10378:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10353:44:29"},{"assignments":[7260],"declarations":[{"constant":false,"id":7260,"mutability":"mutable","name":"result","nameLocation":"10424:6:29","nodeType":"VariableDeclaration","scope":7265,"src":"10407:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7258,"name":"address","nodeType":"ElementaryTypeName","src":"10407:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7259,"nodeType":"ArrayTypeName","src":"10407:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7261,"nodeType":"VariableDeclarationStatement","src":"10407:23:29"},{"AST":{"nodeType":"YulBlock","src":"10493:39:29","statements":[{"nodeType":"YulAssignment","src":"10507:15:29","value":{"name":"store","nodeType":"YulIdentifier","src":"10517:5:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10507:6:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":7260,"isOffset":false,"isSlot":false,"src":"10507:6:29","valueSize":1},{"declaration":7250,"isOffset":false,"isSlot":false,"src":"10517:5:29","valueSize":1}],"id":7262,"nodeType":"InlineAssembly","src":"10484:48:29"},{"expression":{"id":7263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"10549:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":7245,"id":7264,"nodeType":"Return","src":"10542:13:29"}]},"documentation":{"id":7237,"nodeType":"StructuredDocumentation","src":"9728:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7266,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10271:6:29","nodeType":"FunctionDefinition","parameters":{"id":7241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7240,"mutability":"mutable","name":"set","nameLocation":"10297:3:29","nodeType":"VariableDeclaration","scope":7266,"src":"10278:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":7239,"nodeType":"UserDefinedTypeName","pathNode":{"id":7238,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":7113,"src":"10278:10:29"},"referencedDeclaration":7113,"src":"10278:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7113_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10277:24:29"},"returnParameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7266,"src":"10325:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7242,"name":"address","nodeType":"ElementaryTypeName","src":"10325:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7243,"nodeType":"ArrayTypeName","src":"10325:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10324:18:29"},"scope":7400,"src":"10262:300:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":7270,"members":[{"constant":false,"id":7269,"mutability":"mutable","name":"_inner","nameLocation":"10613:6:29","nodeType":"VariableDeclaration","scope":7270,"src":"10609:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":7268,"nodeType":"UserDefinedTypeName","pathNode":{"id":7267,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"10609:3:29"},"referencedDeclaration":6798,"src":"10609:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10591:7:29","nodeType":"StructDefinition","scope":7400,"src":"10584:42:29","visibility":"public"},{"body":{"id":7290,"nodeType":"Block","src":"10869:56:29","statements":[{"expression":{"arguments":[{"expression":{"id":7282,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"10891:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":7283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7269,"src":"10891:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":7286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"10911:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10903:7:29","typeDescriptions":{}}},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10903:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7281,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"10886:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10886:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7280,"id":7289,"nodeType":"Return","src":"10879:39:29"}]},"documentation":{"id":7271,"nodeType":"StructuredDocumentation","src":"10632:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7291,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10805:3:29","nodeType":"FunctionDefinition","parameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7274,"mutability":"mutable","name":"set","nameLocation":"10825:3:29","nodeType":"VariableDeclaration","scope":7291,"src":"10809:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":7273,"nodeType":"UserDefinedTypeName","pathNode":{"id":7272,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":7270,"src":"10809:7:29"},"referencedDeclaration":7270,"src":"10809:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":7276,"mutability":"mutable","name":"value","nameLocation":"10838:5:29","nodeType":"VariableDeclaration","scope":7291,"src":"10830:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7275,"name":"uint256","nodeType":"ElementaryTypeName","src":"10830:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10808:36:29"},"returnParameters":{"id":7280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7291,"src":"10863:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7278,"name":"bool","nodeType":"ElementaryTypeName","src":"10863:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10862:6:29"},"scope":7400,"src":"10796:129:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7311,"nodeType":"Block","src":"11169:59:29","statements":[{"expression":{"arguments":[{"expression":{"id":7303,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"11194:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":7304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7269,"src":"11194:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"11214:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11206:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11206:7:29","typeDescriptions":{}}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11206:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7302,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"11186:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11186:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7301,"id":7310,"nodeType":"Return","src":"11179:42:29"}]},"documentation":{"id":7292,"nodeType":"StructuredDocumentation","src":"10931:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7312,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11102:6:29","nodeType":"FunctionDefinition","parameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7295,"mutability":"mutable","name":"set","nameLocation":"11125:3:29","nodeType":"VariableDeclaration","scope":7312,"src":"11109:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":7294,"nodeType":"UserDefinedTypeName","pathNode":{"id":7293,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":7270,"src":"11109:7:29"},"referencedDeclaration":7270,"src":"11109:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":7297,"mutability":"mutable","name":"value","nameLocation":"11138:5:29","nodeType":"VariableDeclaration","scope":7312,"src":"11130:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7296,"name":"uint256","nodeType":"ElementaryTypeName","src":"11130:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11108:36:29"},"returnParameters":{"id":7301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7312,"src":"11163:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7299,"name":"bool","nodeType":"ElementaryTypeName","src":"11163:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11162:6:29"},"scope":7400,"src":"11093:135:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7332,"nodeType":"Block","src":"11392:61:29","statements":[{"expression":{"arguments":[{"expression":{"id":7324,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"11419:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":7325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7269,"src":"11419:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":7328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"11439:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11431:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11431:7:29","typeDescriptions":{}}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11431:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7323,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"11409:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11409:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7322,"id":7331,"nodeType":"Return","src":"11402:44:29"}]},"documentation":{"id":7313,"nodeType":"StructuredDocumentation","src":"11234:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":7333,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11318:8:29","nodeType":"FunctionDefinition","parameters":{"id":7319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"set","nameLocation":"11343:3:29","nodeType":"VariableDeclaration","scope":7333,"src":"11327:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":7315,"nodeType":"UserDefinedTypeName","pathNode":{"id":7314,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":7270,"src":"11327:7:29"},"referencedDeclaration":7270,"src":"11327:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":7318,"mutability":"mutable","name":"value","nameLocation":"11356:5:29","nodeType":"VariableDeclaration","scope":7333,"src":"11348:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7317,"name":"uint256","nodeType":"ElementaryTypeName","src":"11348:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11326:36:29"},"returnParameters":{"id":7322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7333,"src":"11386:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7320,"name":"bool","nodeType":"ElementaryTypeName","src":"11386:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11385:6:29"},"scope":7400,"src":"11309:144:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7347,"nodeType":"Block","src":"11603:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":7343,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"11628:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":7344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7269,"src":"11628:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":7342,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"11620:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11620:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7341,"id":7346,"nodeType":"Return","src":"11613:26:29"}]},"documentation":{"id":7334,"nodeType":"StructuredDocumentation","src":"11459:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":7348,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11543:6:29","nodeType":"FunctionDefinition","parameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"set","nameLocation":"11566:3:29","nodeType":"VariableDeclaration","scope":7348,"src":"11550:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":7336,"nodeType":"UserDefinedTypeName","pathNode":{"id":7335,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":7270,"src":"11550:7:29"},"referencedDeclaration":7270,"src":"11550:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11549:21:29"},"returnParameters":{"id":7341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7348,"src":"11594:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7339,"name":"uint256","nodeType":"ElementaryTypeName","src":"11594:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11593:9:29"},"scope":7400,"src":"11534:112:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7368,"nodeType":"Block","src":"12068:55:29","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":7362,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"12097:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":7363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7269,"src":"12097:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":7364,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"12109:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7361,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"12093:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12093:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12085:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7359,"name":"uint256","nodeType":"ElementaryTypeName","src":"12085:7:29","typeDescriptions":{}}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12085:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7358,"id":7367,"nodeType":"Return","src":"12078:38:29"}]},"documentation":{"id":7349,"nodeType":"StructuredDocumentation","src":"11652:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7369,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11997:2:29","nodeType":"FunctionDefinition","parameters":{"id":7355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7352,"mutability":"mutable","name":"set","nameLocation":"12016:3:29","nodeType":"VariableDeclaration","scope":7369,"src":"12000:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":7351,"nodeType":"UserDefinedTypeName","pathNode":{"id":7350,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":7270,"src":"12000:7:29"},"referencedDeclaration":7270,"src":"12000:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":7354,"mutability":"mutable","name":"index","nameLocation":"12029:5:29","nodeType":"VariableDeclaration","scope":7369,"src":"12021:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7353,"name":"uint256","nodeType":"ElementaryTypeName","src":"12021:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11999:36:29"},"returnParameters":{"id":7358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7369,"src":"12059:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7356,"name":"uint256","nodeType":"ElementaryTypeName","src":"12059:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12058:9:29"},"scope":7400,"src":"11988:135:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7398,"nodeType":"Block","src":"12741:219:29","statements":[{"assignments":[7383],"declarations":[{"constant":false,"id":7383,"mutability":"mutable","name":"store","nameLocation":"12768:5:29","nodeType":"VariableDeclaration","scope":7398,"src":"12751:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12751:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7382,"nodeType":"ArrayTypeName","src":"12751:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7388,"initialValue":{"arguments":[{"expression":{"id":7385,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"12784:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":7386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7269,"src":"12784:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6798_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":7384,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"12776:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6798_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12776:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12751:44:29"},{"assignments":[7393],"declarations":[{"constant":false,"id":7393,"mutability":"mutable","name":"result","nameLocation":"12822:6:29","nodeType":"VariableDeclaration","scope":7398,"src":"12805:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7391,"name":"uint256","nodeType":"ElementaryTypeName","src":"12805:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7392,"nodeType":"ArrayTypeName","src":"12805:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7394,"nodeType":"VariableDeclarationStatement","src":"12805:23:29"},{"AST":{"nodeType":"YulBlock","src":"12891:39:29","statements":[{"nodeType":"YulAssignment","src":"12905:15:29","value":{"name":"store","nodeType":"YulIdentifier","src":"12915:5:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12905:6:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":7393,"isOffset":false,"isSlot":false,"src":"12905:6:29","valueSize":1},{"declaration":7383,"isOffset":false,"isSlot":false,"src":"12915:5:29","valueSize":1}],"id":7395,"nodeType":"InlineAssembly","src":"12882:48:29"},{"expression":{"id":7396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"12947:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":7378,"id":7397,"nodeType":"Return","src":"12940:13:29"}]},"documentation":{"id":7370,"nodeType":"StructuredDocumentation","src":"12129:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7399,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12672:6:29","nodeType":"FunctionDefinition","parameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"set","nameLocation":"12695:3:29","nodeType":"VariableDeclaration","scope":7399,"src":"12679:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":7372,"nodeType":"UserDefinedTypeName","pathNode":{"id":7371,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":7270,"src":"12679:7:29"},"referencedDeclaration":7270,"src":"12679:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12678:21:29"},"returnParameters":{"id":7378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7399,"src":"12723:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7375,"name":"uint256","nodeType":"ElementaryTypeName","src":"12723:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7376,"nodeType":"ArrayTypeName","src":"12723:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12722:18:29"},"scope":7400,"src":"12663:297:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7401,"src":"1321:11641:29","usedErrors":[]}],"src":"205:12758:29"},"id":29},"contracts/erc20/GENToken.sol":{"ast":{"absolutePath":"contracts/erc20/GENToken.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[144],"AccessControlUpgradeable":[480],"AddressUpgradeable":[3523],"ContextUpgradeable":[3565],"CountersUpgradeable":[3639],"ECDSAUpgradeable":[4175],"EIP712Upgradeable":[4325],"ERC165Upgradeable":[4369],"ERC20BurnableUpgradeable":[1838],"ERC20PausableUpgradeable":[1898],"ERC20PermitUpgradeable":[2907],"ERC20PresetMinterPauserUpgradeable":[3123],"ERC20Upgradeable":[1696],"ERC20VotesCompUpgradeable":[1974],"ERC20VotesUpgradeable":[2691],"EnumerableSetUpgradeable":[7400],"Errors":[7989],"GENToken":[7817],"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578],"IBaseERC721OwnerSeed":[7825],"IERC165Upgradeable":[4381],"IERC20MetadataUpgradeable":[2716],"IERC20PermitUpgradeable":[2943],"IERC20Upgradeable":[1774],"IERC721Upgradeable":[3239],"IGENToken":[7844],"IGenerativeNFT":[7882],"IGenerativeProject":[7902],"IVotesUpgradeable":[788],"Initializable":[957],"MathUpgradeable":[5246],"NFTProject":[8123],"OwnableUpgradeable":[710],"PausableUpgradeable":[1084],"SafeCastUpgradeable":[6787],"StringsUpgradeable":[3814]},"id":7818,"nodeType":"SourceUnit","nodes":[{"id":7402,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:30"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol","id":7403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7818,"sourceUnit":3124,"src":"25:104:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":7404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7818,"sourceUnit":1697,"src":"130:78:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol","id":7405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7818,"sourceUnit":1975,"src":"209:98:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":7406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7818,"sourceUnit":711,"src":"308:75:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","id":7407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7818,"sourceUnit":789,"src":"384:84:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libs/helpers/Errors.sol","file":"../libs/helpers/Errors.sol","id":7408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7818,"sourceUnit":7990,"src":"470:36:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGENToken.sol","file":"../interfaces/IGENToken.sol","id":7409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7818,"sourceUnit":7845,"src":"507:37:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGenerativeProject.sol","file":"../interfaces/IGenerativeProject.sol","id":7410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7818,"sourceUnit":7903,"src":"545:46:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGenerativeNFT.sol","file":"../interfaces/IGenerativeNFT.sol","id":7411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7818,"sourceUnit":7883,"src":"592:42:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7412,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":957,"src":"657:13:30"},"id":7413,"nodeType":"InheritanceSpecifier","src":"657:13:30"},{"baseName":{"id":7414,"name":"ERC20PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1898,"src":"672:24:30"},"id":7415,"nodeType":"InheritanceSpecifier","src":"672:24:30"},{"baseName":{"id":7416,"name":"ERC20BurnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1838,"src":"698:24:30"},"id":7417,"nodeType":"InheritanceSpecifier","src":"698:24:30"},{"baseName":{"id":7418,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":710,"src":"724:18:30"},"id":7419,"nodeType":"InheritanceSpecifier","src":"724:18:30"},{"baseName":{"id":7420,"name":"IGENToken","nodeType":"IdentifierPath","referencedDeclaration":7844,"src":"744:9:30"},"id":7421,"nodeType":"InheritanceSpecifier","src":"744:9:30"},{"baseName":{"id":7422,"name":"ERC20VotesCompUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1974,"src":"755:25:30"},"id":7423,"nodeType":"InheritanceSpecifier","src":"755:25:30"}],"canonicalName":"GENToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7817,"linearizedBaseContracts":[7817,1974,2691,2907,4325,2943,7844,710,1838,1898,1084,1696,2716,1774,3565,788,957],"name":"GENToken","nameLocation":"645:8:30","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"01bc45c9","id":7425,"mutability":"mutable","name":"_admin","nameLocation":"802:6:30","nodeType":"VariableDeclaration","scope":7817,"src":"787:21:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7424,"name":"address","nodeType":"ElementaryTypeName","src":"787:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f4a290f7","id":7427,"mutability":"mutable","name":"_paramAddr","nameLocation":"829:10:30","nodeType":"VariableDeclaration","scope":7817,"src":"814:25:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7426,"name":"address","nodeType":"ElementaryTypeName","src":"814:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"94527729","id":7433,"mutability":"mutable","name":"_claimed","nameLocation":"900:8:30","nodeType":"VariableDeclaration","scope":7817,"src":"845:63:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":7432,"keyType":{"id":7428,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"845:47:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":7431,"keyType":{"id":7429,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"864:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":7430,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"c3678f35","id":7435,"mutability":"mutable","name":"_remainClaimSupply","nameLocation":"961:18:30","nodeType":"VariableDeclaration","scope":7817,"src":"946:33:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7434,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":7517,"nodeType":"Block","src":"1140:536:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7449,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"1158:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7450,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1167:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$7989_$","typeString":"type(library Errors)"}},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_ADDR","nodeType":"MemberAccess","referencedDeclaration":7916,"src":"1167:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1158:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7453,"name":"paramAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"1187:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7454,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1200:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$7989_$","typeString":"type(library Errors)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_ADDR","nodeType":"MemberAccess","referencedDeclaration":7916,"src":"1200:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1187:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1158:58:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7458,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1218:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$7989_$","typeString":"type(library Errors)"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INV_ADD","nodeType":"MemberAccess","referencedDeclaration":7919,"src":"1218:14:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1150:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1150:83:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7461,"nodeType":"ExpressionStatement","src":"1150:83:30"},{"expression":{"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7462,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"1243:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7463,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"1252:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1243:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7465,"nodeType":"ExpressionStatement","src":"1243:14:30"},{"expression":{"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7466,"name":"_paramAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"1267:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7467,"name":"paramAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"1280:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1267:22:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7469,"nodeType":"ExpressionStatement","src":"1267:22:30"},{"assignments":[7471],"declarations":[{"constant":false,"id":7471,"mutability":"mutable","name":"totalSupply","nameLocation":"1308:11:30","nodeType":"VariableDeclaration","scope":7517,"src":"1300:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7484,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":7472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1322:3:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":7475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1329:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":7474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1335:1:30","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"1329:7:30","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}}],"id":7476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1328:9:30","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"1322:15:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1341:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7479,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[7589],"referencedDeclaration":7589,"src":"1347:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint8_$","typeString":"function () pure returns (uint8)"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1347:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1341:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1322:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1300:58:30"},{"expression":{"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7485,"name":"_remainClaimSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"1394:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7486,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"1415:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3730","id":7487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1429:2:30","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},"src":"1415:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1434:3:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1415:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1394:43:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7492,"nodeType":"ExpressionStatement","src":"1394:43:30"},{"assignments":[7494],"declarations":[{"constant":false,"id":7494,"mutability":"mutable","name":"_coreTeam","nameLocation":"1479:9:30","nodeType":"VariableDeclaration","scope":7517,"src":"1471:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1471:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7500,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7495,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"1491:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":7496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1505:2:30","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"1491:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1510:3:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1491:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1471:42:30"},{"expression":{"arguments":[{"id":7502,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"1529:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7503,"name":"_coreTeam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"1537:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7501,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[7662],"referencedDeclaration":7662,"src":"1523:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1523:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7505,"nodeType":"ExpressionStatement","src":"1523:24:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7506,"name":"__ERC20Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"1585:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1585:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7508,"nodeType":"ExpressionStatement","src":"1585:22:30"},{"expression":{"arguments":[{"id":7510,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"1630:4:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7511,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"1636:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7509,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1617:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1617:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7513,"nodeType":"ExpressionStatement","src":"1617:26:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7514,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"1653:14:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1653:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7516,"nodeType":"ExpressionStatement","src":"1653:16:30"}]},"functionSelector":"8f15b414","id":7518,"implemented":true,"kind":"function","modifiers":[{"id":7446,"kind":"modifierInvocation","modifierName":{"id":7445,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":859,"src":"1121:11:30"},"nodeType":"ModifierInvocation","src":"1121:11:30"}],"name":"initialize","nameLocation":"996:10:30","nodeType":"FunctionDefinition","parameters":{"id":7444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7437,"mutability":"mutable","name":"name","nameLocation":"1030:4:30","nodeType":"VariableDeclaration","scope":7518,"src":"1016:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7436,"name":"string","nodeType":"ElementaryTypeName","src":"1016:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7439,"mutability":"mutable","name":"symbol","nameLocation":"1058:6:30","nodeType":"VariableDeclaration","scope":7518,"src":"1044:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7438,"name":"string","nodeType":"ElementaryTypeName","src":"1044:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7441,"mutability":"mutable","name":"admin","nameLocation":"1082:5:30","nodeType":"VariableDeclaration","scope":7518,"src":"1074:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7440,"name":"address","nodeType":"ElementaryTypeName","src":"1074:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7443,"mutability":"mutable","name":"paramAddr","nameLocation":"1105:9:30","nodeType":"VariableDeclaration","scope":7518,"src":"1097:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7442,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1006:114:30"},"returnParameters":{"id":7447,"nodeType":"ParameterList","parameters":[],"src":"1140:0:30"},"scope":7817,"src":"987:689:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7548,"nodeType":"Block","src":"1728:192:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1746:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1746:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7526,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"1760:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1746:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7528,"name":"newAdm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"1770:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1780:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7529,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:30","typeDescriptions":{}}},"id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1780:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1770:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1746:44:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7535,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1792:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$7989_$","typeString":"type(library Errors)"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONLY_ADMIN_ALLOWED","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"1792:25:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1738:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1738:80:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7538,"nodeType":"ExpressionStatement","src":"1738:80:30"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7539,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"1856:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7540,"name":"newAdm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"1866:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1856:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7547,"nodeType":"IfStatement","src":"1852:62:30","trueBody":{"id":7546,"nodeType":"Block","src":"1874:40:30","statements":[{"expression":{"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7542,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"1888:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7543,"name":"newAdm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"1897:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7545,"nodeType":"ExpressionStatement","src":"1888:15:30"}]}}]},"functionSelector":"8f283970","id":7549,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"1691:11:30","nodeType":"FunctionDefinition","parameters":{"id":7521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7520,"mutability":"mutable","name":"newAdm","nameLocation":"1711:6:30","nodeType":"VariableDeclaration","scope":7549,"src":"1703:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7519,"name":"address","nodeType":"ElementaryTypeName","src":"1703:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1702:16:30"},"returnParameters":{"id":7522,"nodeType":"ParameterList","parameters":[],"src":"1728:0:30"},"scope":7817,"src":"1682:238:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7579,"nodeType":"Block","src":"1980:207:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1998:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1998:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7557,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"2012:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1998:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7559,"name":"newAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"2022:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2041:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2033:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7560,"name":"address","nodeType":"ElementaryTypeName","src":"2033:7:30","typeDescriptions":{}}},"id":7563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2033:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2022:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1998:45:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7566,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"2045:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$7989_$","typeString":"type(library Errors)"}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONLY_ADMIN_ALLOWED","nodeType":"MemberAccess","referencedDeclaration":7922,"src":"2045:25:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1990:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1990:81:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7569,"nodeType":"ExpressionStatement","src":"1990:81:30"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7570,"name":"_paramAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"2117:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7571,"name":"newAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"2131:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2117:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7578,"nodeType":"IfStatement","src":"2113:68:30","trueBody":{"id":7577,"nodeType":"Block","src":"2140:41:30","statements":[{"expression":{"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7573,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"2154:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7574,"name":"newAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"2163:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2154:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7576,"nodeType":"ExpressionStatement","src":"2154:16:30"}]}}]},"functionSelector":"16a5041f","id":7580,"implemented":true,"kind":"function","modifiers":[],"name":"changeParamAddress","nameLocation":"1935:18:30","nodeType":"FunctionDefinition","parameters":{"id":7552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7551,"mutability":"mutable","name":"newAddr","nameLocation":"1962:7:30","nodeType":"VariableDeclaration","scope":7580,"src":"1954:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7550,"name":"address","nodeType":"ElementaryTypeName","src":"1954:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1953:17:30"},"returnParameters":{"id":7553,"nodeType":"ParameterList","parameters":[],"src":"1980:0:30"},"scope":7817,"src":"1926:261:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1179],"body":{"id":7588,"nodeType":"Block","src":"2250:26:30","statements":[{"expression":{"hexValue":"3138","id":7586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2267:2:30","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":7585,"id":7587,"nodeType":"Return","src":"2260:9:30"}]},"functionSelector":"313ce567","id":7589,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2202:8:30","nodeType":"FunctionDefinition","overrides":{"id":7582,"nodeType":"OverrideSpecifier","overrides":[],"src":"2225:8:30"},"parameters":{"id":7581,"nodeType":"ParameterList","parameters":[],"src":"2210:2:30"},"returnParameters":{"id":7585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7589,"src":"2243:5:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7583,"name":"uint8","nodeType":"ElementaryTypeName","src":"2243:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2242:7:30"},"scope":7817,"src":"2193:83:30","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1189,1723],"body":{"id":7601,"nodeType":"Block","src":"2381:43:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7597,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2398:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GENToken_$7817_$","typeString":"type(contract super GENToken)"}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1189,"src":"2398:17:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2398:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7596,"id":7600,"nodeType":"Return","src":"2391:26:30"}]},"functionSelector":"18160ddd","id":7602,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2291:11:30","nodeType":"FunctionDefinition","overrides":{"id":7593,"nodeType":"OverrideSpecifier","overrides":[{"id":7591,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"2326:16:30"},{"id":7592,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"2344:17:30"}],"src":"2317:45:30"},"parameters":{"id":7590,"nodeType":"ParameterList","parameters":[],"src":"2302:2:30"},"returnParameters":{"id":7596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7602,"src":"2372:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2372:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2371:9:30"},"scope":7817,"src":"2282:142:30","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1679,1892],"body":{"id":7622,"nodeType":"Block","src":"2576:61:30","statements":[{"expression":{"arguments":[{"id":7617,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"2613:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7618,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"2619:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7619,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"2623:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7614,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2586:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GENToken_$7817_$","typeString":"type(contract super GENToken)"}},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1892,"src":"2586:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2586:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7621,"nodeType":"ExpressionStatement","src":"2586:44:30"}]},"id":7623,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2439:20:30","nodeType":"FunctionDefinition","overrides":{"id":7612,"nodeType":"OverrideSpecifier","overrides":[{"id":7610,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"2528:16:30"},{"id":7611,"name":"ERC20PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1898,"src":"2546:24:30"}],"src":"2519:52:30"},"parameters":{"id":7609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7604,"mutability":"mutable","name":"from","nameLocation":"2468:4:30","nodeType":"VariableDeclaration","scope":7623,"src":"2460:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7603,"name":"address","nodeType":"ElementaryTypeName","src":"2460:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7606,"mutability":"mutable","name":"to","nameLocation":"2482:2:30","nodeType":"VariableDeclaration","scope":7623,"src":"2474:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7605,"name":"address","nodeType":"ElementaryTypeName","src":"2474:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7608,"mutability":"mutable","name":"amount","nameLocation":"2494:6:30","nodeType":"VariableDeclaration","scope":7623,"src":"2486:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2486:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2459:42:30"},"returnParameters":{"id":7613,"nodeType":"ParameterList","parameters":[],"src":"2576:0:30"},"scope":7817,"src":"2430:207:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1690,2433],"body":{"id":7643,"nodeType":"Block","src":"2785:60:30","statements":[{"expression":{"arguments":[{"id":7638,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"2821:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"2827:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7640,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"2831:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7635,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2795:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GENToken_$7817_$","typeString":"type(contract super GENToken)"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"2795:25:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2795:43:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7642,"nodeType":"ExpressionStatement","src":"2795:43:30"}]},"id":7644,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"2652:19:30","nodeType":"FunctionDefinition","overrides":{"id":7633,"nodeType":"OverrideSpecifier","overrides":[{"id":7631,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"2740:16:30"},{"id":7632,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2691,"src":"2758:21:30"}],"src":"2731:49:30"},"parameters":{"id":7630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7625,"mutability":"mutable","name":"from","nameLocation":"2680:4:30","nodeType":"VariableDeclaration","scope":7644,"src":"2672:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7624,"name":"address","nodeType":"ElementaryTypeName","src":"2672:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7627,"mutability":"mutable","name":"to","nameLocation":"2694:2:30","nodeType":"VariableDeclaration","scope":7644,"src":"2686:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7626,"name":"address","nodeType":"ElementaryTypeName","src":"2686:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7629,"mutability":"mutable","name":"amount","nameLocation":"2706:6:30","nodeType":"VariableDeclaration","scope":7644,"src":"2698:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2698:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2671:42:30"},"returnParameters":{"id":7634,"nodeType":"ParameterList","parameters":[],"src":"2785:0:30"},"scope":7817,"src":"2643:202:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1508,2380],"body":{"id":7661,"nodeType":"Block","src":"2965:40:30","statements":[{"expression":{"arguments":[{"id":7657,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"2987:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7658,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"2991:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7654,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2975:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GENToken_$7817_$","typeString":"type(contract super GENToken)"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"2975:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2975:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7660,"nodeType":"ExpressionStatement","src":"2975:23:30"}]},"id":7662,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"2860:5:30","nodeType":"FunctionDefinition","overrides":{"id":7652,"nodeType":"OverrideSpecifier","overrides":[{"id":7650,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"2920:16:30"},{"id":7651,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2691,"src":"2938:21:30"}],"src":"2911:49:30"},"parameters":{"id":7649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7646,"mutability":"mutable","name":"to","nameLocation":"2874:2:30","nodeType":"VariableDeclaration","scope":7662,"src":"2866:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7645,"name":"address","nodeType":"ElementaryTypeName","src":"2866:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7648,"mutability":"mutable","name":"amount","nameLocation":"2886:6:30","nodeType":"VariableDeclaration","scope":7662,"src":"2878:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2878:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2865:28:30"},"returnParameters":{"id":7653,"nodeType":"ParameterList","parameters":[],"src":"2965:0:30"},"scope":7817,"src":"2851:154:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1580,2403],"body":{"id":7679,"nodeType":"Block","src":"3130:45:30","statements":[{"expression":{"arguments":[{"id":7675,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7664,"src":"3152:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7676,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"3161:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7672,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3140:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GENToken_$7817_$","typeString":"type(contract super GENToken)"}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"3140:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3140:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7678,"nodeType":"ExpressionStatement","src":"3140:28:30"}]},"id":7680,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"3020:5:30","nodeType":"FunctionDefinition","overrides":{"id":7670,"nodeType":"OverrideSpecifier","overrides":[{"id":7668,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"3085:16:30"},{"id":7669,"name":"ERC20VotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2691,"src":"3103:21:30"}],"src":"3076:49:30"},"parameters":{"id":7667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7664,"mutability":"mutable","name":"account","nameLocation":"3034:7:30","nodeType":"VariableDeclaration","scope":7680,"src":"3026:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7663,"name":"address","nodeType":"ElementaryTypeName","src":"3026:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7666,"mutability":"mutable","name":"amount","nameLocation":"3051:6:30","nodeType":"VariableDeclaration","scope":7680,"src":"3043:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3043:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3025:33:30"},"returnParameters":{"id":7671,"nodeType":"ParameterList","parameters":[],"src":"3130:0:30"},"scope":7817,"src":"3011:164:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7724,"nodeType":"Block","src":"3304:292:30","statements":[{"assignments":[7691],"declarations":[{"constant":false,"id":7691,"mutability":"mutable","name":"nft","nameLocation":"3329:3:30","nodeType":"VariableDeclaration","scope":7724,"src":"3314:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGenerativeNFT_$7882","typeString":"contract IGenerativeNFT"},"typeName":{"id":7690,"nodeType":"UserDefinedTypeName","pathNode":{"id":7689,"name":"IGenerativeNFT","nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"3314:14:30"},"referencedDeclaration":7882,"src":"3314:14:30","typeDescriptions":{"typeIdentifier":"t_contract$_IGenerativeNFT_$7882","typeString":"contract IGenerativeNFT"}},"visibility":"internal"}],"id":7695,"initialValue":{"arguments":[{"id":7693,"name":"genNFTAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"3350:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7692,"name":"IGenerativeNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"3335:14:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGenerativeNFT_$7882_$","typeString":"type(contract IGenerativeNFT)"}},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3335:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGenerativeNFT_$7882","typeString":"contract IGenerativeNFT"}},"nodeType":"VariableDeclarationStatement","src":"3314:47:30"},{"clauses":[{"block":{"id":7713,"nodeType":"Block","src":"3417:84:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7702,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"3438:5:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7703,"name":"mintPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"3446:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3438:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"baseExpression":{"id":7705,"name":"_claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"3458:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":7708,"indexExpression":{"expression":{"id":7706,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3467:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3467:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3458:20:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7710,"indexExpression":{"id":7709,"name":"genNFTAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"3479:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3458:32:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3438:52:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7688,"id":7712,"nodeType":"Return","src":"3431:59:30"}]},"errorName":"","id":7714,"nodeType":"TryCatchClause","parameters":{"id":7701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"index","nameLocation":"3410:5:30","nodeType":"VariableDeclaration","scope":7714,"src":"3403:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7699,"name":"uint24","nodeType":"ElementaryTypeName","src":"3403:6:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3402:14:30"},"src":"3394:107:30"},{"block":{"id":7719,"nodeType":"Block","src":"3508:64:30","statements":[{"eventCall":{"arguments":[{"id":7716,"name":"genNFTAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"3550:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7715,"name":"NotSupportProjectIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"3527:22:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3527:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7718,"nodeType":"EmitStatement","src":"3522:39:30"}]},"errorName":"","id":7720,"nodeType":"TryCatchClause","src":"3502:70:30"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7696,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"3375:3:30","typeDescriptions":{"typeIdentifier":"t_contract$_IGenerativeNFT_$7882","typeString":"contract IGenerativeNFT"}},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"projectIndex","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"3375:16:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint24_$","typeString":"function () view external returns (uint24)"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3375:18:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":7721,"nodeType":"TryStatement","src":"3371:201:30"},{"expression":{"hexValue":"30","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3588:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7688,"id":7723,"nodeType":"Return","src":"3581:8:30"}]},"functionSelector":"32974838","id":7725,"implemented":true,"kind":"function","modifiers":[],"name":"calculateAmountClaim","nameLocation":"3219:20:30","nodeType":"FunctionDefinition","parameters":{"id":7685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7682,"mutability":"mutable","name":"genNFTAddr","nameLocation":"3248:10:30","nodeType":"VariableDeclaration","scope":7725,"src":"3240:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7681,"name":"address","nodeType":"ElementaryTypeName","src":"3240:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7684,"mutability":"mutable","name":"mintPrice","nameLocation":"3268:9:30","nodeType":"VariableDeclaration","scope":7725,"src":"3260:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7683,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3239:39:30"},"returnParameters":{"id":7688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7725,"src":"3295:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3295:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3294:9:30"},"scope":7817,"src":"3210:386:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7815,"nodeType":"Block","src":"3771:684:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7735,"name":"_remainClaimSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"3789:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3789:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7738,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"3813:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$7989_$","typeString":"type(library Errors)"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"REACH_MAX","nodeType":"MemberAccess","referencedDeclaration":7937,"src":"3813:16:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7734,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3781:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3781:49:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7741,"nodeType":"ExpressionStatement","src":"3781:49:30"},{"assignments":[7744],"declarations":[{"constant":false,"id":7744,"mutability":"mutable","name":"projectContract","nameLocation":"3860:15:30","nodeType":"VariableDeclaration","scope":7815,"src":"3841:34:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGenerativeProject_$7902","typeString":"contract IGenerativeProject"},"typeName":{"id":7743,"nodeType":"UserDefinedTypeName","pathNode":{"id":7742,"name":"IGenerativeProject","nodeType":"IdentifierPath","referencedDeclaration":7902,"src":"3841:18:30"},"referencedDeclaration":7902,"src":"3841:18:30","typeDescriptions":{"typeIdentifier":"t_contract$_IGenerativeProject_$7902","typeString":"contract IGenerativeProject"}},"visibility":"internal"}],"id":7748,"initialValue":{"arguments":[{"id":7746,"name":"generativeProjectAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"3897:21:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7745,"name":"IGenerativeProject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"3878:18:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGenerativeProject_$7902_$","typeString":"type(contract IGenerativeProject)"}},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3878:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGenerativeProject_$7902","typeString":"contract IGenerativeProject"}},"nodeType":"VariableDeclarationStatement","src":"3841:78:30"},{"assignments":[7753],"declarations":[{"constant":false,"id":7753,"mutability":"mutable","name":"project","nameLocation":"3955:7:30","nodeType":"VariableDeclaration","scope":7815,"src":"3929:33:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$8077_memory_ptr","typeString":"struct NFTProject.Project"},"typeName":{"id":7752,"nodeType":"UserDefinedTypeName","pathNode":{"id":7751,"name":"NFTProject.Project","nodeType":"IdentifierPath","referencedDeclaration":8077,"src":"3929:18:30"},"referencedDeclaration":8077,"src":"3929:18:30","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$8077_storage_ptr","typeString":"struct NFTProject.Project"}},"visibility":"internal"}],"id":7758,"initialValue":{"arguments":[{"id":7756,"name":"projectId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7729,"src":"3996:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7754,"name":"projectContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"3965:15:30","typeDescriptions":{"typeIdentifier":"t_contract$_IGenerativeProject_$7902","typeString":"contract IGenerativeProject"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"projectDetails","nodeType":"MemberAccess","referencedDeclaration":7896,"src":"3965:30:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Project_$8077_memory_ptr_$","typeString":"function (uint256) view external returns (struct NFTProject.Project memory)"}},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3965:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Project_$8077_memory_ptr","typeString":"struct NFTProject.Project memory"}},"nodeType":"VariableDeclarationStatement","src":"3929:77:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7760,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"4024:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$8077_memory_ptr","typeString":"struct NFTProject.Project memory"}},"id":7761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_creatorAddr","nodeType":"MemberAccess","referencedDeclaration":8048,"src":"4024:20:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7762,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4048:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4048:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4024:34:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7765,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"4060:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$7989_$","typeString":"type(library Errors)"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INV_ADD","nodeType":"MemberAccess","referencedDeclaration":7919,"src":"4060:14:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7759,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4016:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4016:59:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7768,"nodeType":"ExpressionStatement","src":"4016:59:30"},{"assignments":[7770],"declarations":[{"constant":false,"id":7770,"mutability":"mutable","name":"amount","nameLocation":"4094:6:30","nodeType":"VariableDeclaration","scope":7815,"src":"4086:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7769,"name":"uint256","nodeType":"ElementaryTypeName","src":"4086:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7777,"initialValue":{"arguments":[{"expression":{"id":7772,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"4124:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$8077_memory_ptr","typeString":"struct NFTProject.Project memory"}},"id":7773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_genNFTAddr","nodeType":"MemberAccess","referencedDeclaration":8069,"src":"4124:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7774,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"4145:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$8077_memory_ptr","typeString":"struct NFTProject.Project memory"}},"id":7775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_mintPrice","nodeType":"MemberAccess","referencedDeclaration":8040,"src":"4145:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7771,"name":"calculateAmountClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"4103:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4103:61:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4086:78:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7778,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7770,"src":"4178:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7779,"name":"_remainClaimSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"4187:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4178:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7786,"nodeType":"IfStatement","src":"4174:85:30","trueBody":{"id":7785,"nodeType":"Block","src":"4207:52:30","statements":[{"expression":{"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7781,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7770,"src":"4221:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7782,"name":"_remainClaimSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"4230:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4221:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7784,"nodeType":"ExpressionStatement","src":"4221:27:30"}]}},{"expression":{"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7787,"name":"_claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"4268:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":7792,"indexExpression":{"expression":{"id":7788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4277:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4277:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4268:20:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7793,"indexExpression":{"expression":{"id":7790,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"4289:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$8077_memory_ptr","typeString":"struct NFTProject.Project memory"}},"id":7791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_genNFTAddr","nodeType":"MemberAccess","referencedDeclaration":8069,"src":"4289:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4268:41:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7794,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7770,"src":"4313:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4268:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7796,"nodeType":"ExpressionStatement","src":"4268:51:30"},{"expression":{"arguments":[{"expression":{"id":7798,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4335:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4335:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7800,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7770,"src":"4347:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7797,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[7662],"referencedDeclaration":7662,"src":"4329:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4329:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7802,"nodeType":"ExpressionStatement","src":"4329:25:30"},{"expression":{"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7803,"name":"_remainClaimSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"4364:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7804,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7770,"src":"4386:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4364:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7806,"nodeType":"ExpressionStatement","src":"4364:28:30"},{"eventCall":{"arguments":[{"expression":{"id":7810,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4429:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4429:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7812,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7770,"src":"4441:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7807,"name":"IGENToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7844,"src":"4408:9:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGENToken_$7844_$","typeString":"type(contract IGENToken)"}},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ClaimToken","nodeType":"MemberAccess","referencedDeclaration":7839,"src":"4408:20:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4408:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7814,"nodeType":"EmitStatement","src":"4403:45:30"}]},"functionSelector":"aad3ec96","id":7816,"implemented":true,"kind":"function","modifiers":[{"id":7732,"kind":"modifierInvocation","modifierName":{"id":7731,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"3749:13:30"},"nodeType":"ModifierInvocation","src":"3749:13:30"}],"name":"claim","nameLocation":"3684:5:30","nodeType":"FunctionDefinition","parameters":{"id":7730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7727,"mutability":"mutable","name":"generativeProjectAddr","nameLocation":"3698:21:30","nodeType":"VariableDeclaration","scope":7816,"src":"3690:29:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7726,"name":"address","nodeType":"ElementaryTypeName","src":"3690:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7729,"mutability":"mutable","name":"projectId","nameLocation":"3729:9:30","nodeType":"VariableDeclaration","scope":7816,"src":"3721:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3721:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3689:50:30"},"returnParameters":{"id":7733,"nodeType":"ParameterList","parameters":[],"src":"3771:0:30"},"scope":7817,"src":"3675:780:30","stateMutability":"nonpayable","virtual":true,"visibility":"external"}],"scope":7818,"src":"636:3821:30","usedErrors":[]}],"src":"0:4458:30"},"id":30},"contracts/interfaces/IBaseERC721OwnerSeed.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaseERC721OwnerSeed.sol","exportedSymbols":{"IBaseERC721OwnerSeed":[7825]},"id":7826,"nodeType":"SourceUnit","nodes":[{"id":7819,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:31"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaseERC721OwnerSeed","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7825,"linearizedBaseContracts":[7825],"name":"IBaseERC721OwnerSeed","nameLocation":"35:20:31","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4e69d560","id":7824,"implemented":false,"kind":"function","modifiers":[],"name":"getStatus","nameLocation":"71:9:31","nodeType":"FunctionDefinition","parameters":{"id":7820,"nodeType":"ParameterList","parameters":[],"src":"80:2:31"},"returnParameters":{"id":7823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7824,"src":"106:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7821,"name":"bool","nodeType":"ElementaryTypeName","src":"106:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"105:6:31"},"scope":7825,"src":"62:50:31","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7826,"src":"25:89:31","usedErrors":[]}],"src":"0:115:31"},"id":31},"contracts/interfaces/IGENToken.sol":{"ast":{"absolutePath":"contracts/interfaces/IGENToken.sol","exportedSymbols":{"IERC20Upgradeable":[1774],"IGENToken":[7844],"IVotesUpgradeable":[788]},"id":7845,"nodeType":"SourceUnit","nodes":[{"id":7827,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:32"},{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","id":7828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7845,"sourceUnit":789,"src":"25:84:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","id":7829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7845,"sourceUnit":1775,"src":"110:79:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7830,"name":"IVotesUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":788,"src":"214:17:32"},"id":7831,"nodeType":"InheritanceSpecifier","src":"214:17:32"},{"baseName":{"id":7832,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"233:17:32"},"id":7833,"nodeType":"InheritanceSpecifier","src":"233:17:32"}],"canonicalName":"IGENToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7844,"linearizedBaseContracts":[7844,1774,788],"name":"IGENToken","nameLocation":"201:9:32","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":7839,"name":"ClaimToken","nameLocation":"263:10:32","nodeType":"EventDefinition","parameters":{"id":7838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7835,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"282:2:32","nodeType":"VariableDeclaration","scope":7839,"src":"274:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7834,"name":"address","nodeType":"ElementaryTypeName","src":"274:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7837,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"294:6:32","nodeType":"VariableDeclaration","scope":7839,"src":"286:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7836,"name":"uint256","nodeType":"ElementaryTypeName","src":"286:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"273:28:32"},"src":"257:45:32"},{"anonymous":false,"id":7843,"name":"NotSupportProjectIndex","nameLocation":"313:22:32","nodeType":"EventDefinition","parameters":{"id":7842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"indexed":false,"mutability":"mutable","name":"genNFT","nameLocation":"344:6:32","nodeType":"VariableDeclaration","scope":7843,"src":"336:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7840,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"335:16:32"},"src":"307:45:32"}],"scope":7845,"src":"191:163:32","usedErrors":[]}],"src":"0:355:32"},"id":32},"contracts/interfaces/IGenerativeNFT.sol":{"ast":{"absolutePath":"contracts/interfaces/IGenerativeNFT.sol","exportedSymbols":{"IBaseERC721OwnerSeed":[7825],"IGenerativeNFT":[7882],"NFTProject":[8123]},"id":7883,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7846,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:33"},{"absolutePath":"contracts/libs/structs/NFTProject.sol","file":"../libs/structs/NFTProject.sol","id":7847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7883,"sourceUnit":8124,"src":"57:40:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaseERC721OwnerSeed.sol","file":"./IBaseERC721OwnerSeed.sol","id":7848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7883,"sourceUnit":7826,"src":"98:36:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7849,"name":"IBaseERC721OwnerSeed","nodeType":"IdentifierPath","referencedDeclaration":7825,"src":"164:20:33"},"id":7850,"nodeType":"InheritanceSpecifier","src":"164:20:33"}],"canonicalName":"IGenerativeNFT","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7882,"linearizedBaseContracts":[7882,7825],"name":"IGenerativeNFT","nameLocation":"146:14:33","nodeType":"ContractDefinition","nodes":[{"functionSelector":"fc237452","id":7866,"implemented":false,"kind":"function","modifiers":[],"name":"init","nameLocation":"200:4:33","nodeType":"FunctionDefinition","parameters":{"id":7864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7853,"mutability":"mutable","name":"project","nameLocation":"238:7:33","nodeType":"VariableDeclaration","scope":7866,"src":"205:40:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectMinting_$8117_memory_ptr","typeString":"struct NFTProject.ProjectMinting"},"typeName":{"id":7852,"nodeType":"UserDefinedTypeName","pathNode":{"id":7851,"name":"NFTProject.ProjectMinting","nodeType":"IdentifierPath","referencedDeclaration":8117,"src":"205:25:33"},"referencedDeclaration":8117,"src":"205:25:33","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectMinting_$8117_storage_ptr","typeString":"struct NFTProject.ProjectMinting"}},"visibility":"internal"},{"constant":false,"id":7855,"mutability":"mutable","name":"admin","nameLocation":"255:5:33","nodeType":"VariableDeclaration","scope":7866,"src":"247:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7854,"name":"address","nodeType":"ElementaryTypeName","src":"247:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7857,"mutability":"mutable","name":"paramsAddr","nameLocation":"270:10:33","nodeType":"VariableDeclaration","scope":7866,"src":"262:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7856,"name":"address","nodeType":"ElementaryTypeName","src":"262:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7859,"mutability":"mutable","name":"randomizer","nameLocation":"290:10:33","nodeType":"VariableDeclaration","scope":7866,"src":"282:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7858,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7861,"mutability":"mutable","name":"projectDataContextAddr","nameLocation":"310:22:33","nodeType":"VariableDeclaration","scope":7866,"src":"302:30:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7860,"name":"address","nodeType":"ElementaryTypeName","src":"302:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7863,"mutability":"mutable","name":"disable","nameLocation":"339:7:33","nodeType":"VariableDeclaration","scope":7866,"src":"334:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7862,"name":"bool","nodeType":"ElementaryTypeName","src":"334:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"204:143:33"},"returnParameters":{"id":7865,"nodeType":"ParameterList","parameters":[],"src":"356:0:33"},"scope":7882,"src":"191:166:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c40f6f4","id":7871,"implemented":false,"kind":"function","modifiers":[],"name":"setStatus","nameLocation":"372:9:33","nodeType":"FunctionDefinition","parameters":{"id":7869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7868,"mutability":"mutable","name":"enable","nameLocation":"387:6:33","nodeType":"VariableDeclaration","scope":7871,"src":"382:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7867,"name":"bool","nodeType":"ElementaryTypeName","src":"382:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"381:13:33"},"returnParameters":{"id":7870,"nodeType":"ParameterList","parameters":[],"src":"403:0:33"},"scope":7882,"src":"363:41:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8d6cc56d","id":7876,"implemented":false,"kind":"function","modifiers":[],"name":"updatePrice","nameLocation":"419:11:33","nodeType":"FunctionDefinition","parameters":{"id":7874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7873,"mutability":"mutable","name":"price","nameLocation":"439:5:33","nodeType":"VariableDeclaration","scope":7876,"src":"431:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7872,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"430:15:33"},"returnParameters":{"id":7875,"nodeType":"ParameterList","parameters":[],"src":"454:0:33"},"scope":7882,"src":"410:45:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"63184726","id":7881,"implemented":false,"kind":"function","modifiers":[],"name":"projectIndex","nameLocation":"470:12:33","nodeType":"FunctionDefinition","parameters":{"id":7877,"nodeType":"ParameterList","parameters":[],"src":"482:2:33"},"returnParameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7881,"src":"508:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7878,"name":"uint24","nodeType":"ElementaryTypeName","src":"508:6:33","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"507:8:33"},"scope":7882,"src":"461:55:33","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7883,"src":"136:382:33","usedErrors":[]}],"src":"32:486:33"},"id":33},"contracts/interfaces/IGenerativeProject.sol":{"ast":{"absolutePath":"contracts/interfaces/IGenerativeProject.sol","exportedSymbols":{"IERC165Upgradeable":[4381],"IERC721Upgradeable":[3239],"IGenerativeProject":[7902],"NFTProject":[8123]},"id":7903,"nodeType":"SourceUnit","nodes":[{"id":7884,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:34"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","id":7885,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7903,"sourceUnit":3240,"src":"25:81:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libs/structs/NFTProject.sol","file":"../libs/structs/NFTProject.sol","id":7886,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7903,"sourceUnit":8124,"src":"107:40:34","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7887,"name":"IERC721Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":3239,"src":"181:18:34"},"id":7888,"nodeType":"InheritanceSpecifier","src":"181:18:34"}],"canonicalName":"IGenerativeProject","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7902,"linearizedBaseContracts":[7902,3239,4381],"name":"IGenerativeProject","nameLocation":"159:18:34","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8dd91a56","id":7896,"implemented":false,"kind":"function","modifiers":[],"name":"projectDetails","nameLocation":"215:14:34","nodeType":"FunctionDefinition","parameters":{"id":7891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7890,"mutability":"mutable","name":"_projectId","nameLocation":"238:10:34","nodeType":"VariableDeclaration","scope":7896,"src":"230:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7889,"name":"uint256","nodeType":"ElementaryTypeName","src":"230:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"229:20:34"},"returnParameters":{"id":7895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7894,"mutability":"mutable","name":"project","nameLocation":"299:7:34","nodeType":"VariableDeclaration","scope":7896,"src":"273:33:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$8077_memory_ptr","typeString":"struct NFTProject.Project"},"typeName":{"id":7893,"nodeType":"UserDefinedTypeName","pathNode":{"id":7892,"name":"NFTProject.Project","nodeType":"IdentifierPath","referencedDeclaration":8077,"src":"273:18:34"},"referencedDeclaration":8077,"src":"273:18:34","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$8077_storage_ptr","typeString":"struct NFTProject.Project"}},"visibility":"internal"}],"src":"272:35:34"},"scope":7902,"src":"206:102:34","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2245f152","id":7901,"implemented":false,"kind":"function","modifiers":[],"name":"completeProject","nameLocation":"323:15:34","nodeType":"FunctionDefinition","parameters":{"id":7899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7898,"mutability":"mutable","name":"projectId","nameLocation":"347:9:34","nodeType":"VariableDeclaration","scope":7901,"src":"339:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7897,"name":"uint256","nodeType":"ElementaryTypeName","src":"339:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"338:19:34"},"returnParameters":{"id":7900,"nodeType":"ParameterList","parameters":[],"src":"366:0:34"},"scope":7902,"src":"314:53:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7903,"src":"149:220:34","usedErrors":[]}],"src":"0:369:34"},"id":34},"contracts/libs/helpers/Errors.sol":{"ast":{"absolutePath":"contracts/libs/helpers/Errors.sol","exportedSymbols":{"Errors":[7989]},"id":7990,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":7904,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"37:23:35"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":7989,"linearizedBaseContracts":[7989],"name":"Errors","nameLocation":"70:6:35","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Errors.ReturnCode","id":7907,"members":[{"id":7905,"name":"SUCCESS","nameLocation":"109:7:35","nodeType":"EnumValue","src":"109:7:35"},{"id":7906,"name":"FAILED","nameLocation":"126:6:35","nodeType":"EnumValue","src":"126:6:35"}],"name":"ReturnCode","nameLocation":"88:10:35","nodeType":"EnumDefinition","src":"83:55:35"},{"constant":true,"functionSelector":"d0a6d1a6","id":7910,"mutability":"constant","name":"SUCCESS","nameLocation":"167:7:35","nodeType":"VariableDeclaration","scope":7989,"src":"144:36:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7908,"name":"string","nodeType":"ElementaryTypeName","src":"144:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"30","id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"177:3:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"visibility":"public"},{"constant":true,"functionSelector":"63731080","id":7916,"mutability":"constant","name":"ZERO_ADDR","nameLocation":"211:9:35","nodeType":"VariableDeclaration","scope":7989,"src":"187:48:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7911,"name":"address","nodeType":"ElementaryTypeName","src":"187:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307830","id":7914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"231:3:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"223:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7912,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:35","typeDescriptions":{}}},"id":7915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"223:12:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"72670508","id":7919,"mutability":"constant","name":"INV_ADD","nameLocation":"290:7:35","nodeType":"VariableDeclaration","scope":7989,"src":"267:38:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7917,"name":"string","nodeType":"ElementaryTypeName","src":"267:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"313030","id":7918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"300:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c18210df0d9514f2d2e5d8ca7c100978219ee80d3968ad850ab5ead208287b3","typeString":"literal_string \"100\""},"value":"100"},"visibility":"public"},{"constant":true,"functionSelector":"552e387c","id":7922,"mutability":"constant","name":"ONLY_ADMIN_ALLOWED","nameLocation":"334:18:35","nodeType":"VariableDeclaration","scope":7989,"src":"311:49:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7920,"name":"string","nodeType":"ElementaryTypeName","src":"311:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"313031","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"355:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_f9535bac1c0dacfe011b6a07ce55ad3fdc761de7345d7b004778e93b9d222ae5","typeString":"literal_string \"101\""},"value":"101"},"visibility":"public"},{"constant":true,"functionSelector":"b746287b","id":7925,"mutability":"constant","name":"ONLY_CREATOR","nameLocation":"389:12:35","nodeType":"VariableDeclaration","scope":7989,"src":"366:43:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7923,"name":"string","nodeType":"ElementaryTypeName","src":"366:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"313032","id":7924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"404:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a9063ed52b7d417e441f378325359c9ce274f5d6c3ecf11b7d42f24b9c90b7f","typeString":"literal_string \"102\""},"value":"102"},"visibility":"public"},{"constant":true,"functionSelector":"86f8148f","id":7928,"mutability":"constant","name":"MISSING_NAME","nameLocation":"463:12:35","nodeType":"VariableDeclaration","scope":7989,"src":"440:43:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7926,"name":"string","nodeType":"ElementaryTypeName","src":"440:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323030","id":7927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"478:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_f41e7b65f48549acbe27153aab4b5e1711f410da3acadfca0db9f64a06d0e709","typeString":"literal_string \"200\""},"value":"200"},"visibility":"public"},{"constant":true,"functionSelector":"652b7f31","id":7931,"mutability":"constant","name":"INV_FEE_PROJECT","nameLocation":"512:15:35","nodeType":"VariableDeclaration","scope":7989,"src":"489:46:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7929,"name":"string","nodeType":"ElementaryTypeName","src":"489:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323031","id":7930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"530:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_a882a7942f9c31b62f61719affd7835f08bca3f855f990bbc994d54b51d095ca","typeString":"literal_string \"201\""},"value":"201"},"visibility":"public"},{"constant":true,"functionSelector":"38abf0c9","id":7934,"mutability":"constant","name":"INV_PROJECT","nameLocation":"564:11:35","nodeType":"VariableDeclaration","scope":7989,"src":"541:42:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7932,"name":"string","nodeType":"ElementaryTypeName","src":"541:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323032","id":7933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"578:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a8b6999955579552efb49f9b1ba44e9b405d36c1cd9fda072316c810fd42bbd","typeString":"literal_string \"202\""},"value":"202"},"visibility":"public"},{"constant":true,"functionSelector":"23312297","id":7937,"mutability":"constant","name":"REACH_MAX","nameLocation":"612:9:35","nodeType":"VariableDeclaration","scope":7989,"src":"589:40:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7935,"name":"string","nodeType":"ElementaryTypeName","src":"589:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323033","id":7936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"624:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_4e5869b372f44a1c9aa0923bc94152ac1c74ce415b48c7d3f09c31f435665329","typeString":"literal_string \"203\""},"value":"203"},"visibility":"public"},{"constant":true,"functionSelector":"feff83c3","id":7940,"mutability":"constant","name":"INV_PARAMS","nameLocation":"658:10:35","nodeType":"VariableDeclaration","scope":7989,"src":"635:41:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7938,"name":"string","nodeType":"ElementaryTypeName","src":"635:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323034","id":7939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"671:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_a193fcc33caa07ae168578ccf7b3af2565fac160043aa975f5f8e1204096a380","typeString":"literal_string \"204\""},"value":"204"},"visibility":"public"},{"constant":true,"functionSelector":"585c081c","id":7943,"mutability":"constant","name":"TOO_HIGH","nameLocation":"705:8:35","nodeType":"VariableDeclaration","scope":7989,"src":"682:39:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7941,"name":"string","nodeType":"ElementaryTypeName","src":"682:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323035","id":7942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"716:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_d665d3e31f8da4f93255a62fad5ad42e8302e9c9a226187d84d77d13775d3867","typeString":"literal_string \"205\""},"value":"205"},"visibility":"public"},{"constant":true,"functionSelector":"143c1c36","id":7946,"mutability":"constant","name":"TOKEN_HAS_SEED","nameLocation":"750:14:35","nodeType":"VariableDeclaration","scope":7989,"src":"727:45:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7944,"name":"string","nodeType":"ElementaryTypeName","src":"727:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323036","id":7945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"767:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_1489c895d8db5d7e6f185e0dbf71086576b58a22ab3a9d63e160cbc8cbc1e2cb","typeString":"literal_string \"206\""},"value":"206"},"visibility":"public"},{"constant":true,"functionSelector":"9bf3cfe3","id":7949,"mutability":"constant","name":"ZERO_SEED","nameLocation":"801:9:35","nodeType":"VariableDeclaration","scope":7989,"src":"778:40:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7947,"name":"string","nodeType":"ElementaryTypeName","src":"778:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323037","id":7948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"813:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a6ef89368ff1a2b8692ca514a2b91ca903bdef4de73d135978769728b3bf57","typeString":"literal_string \"207\""},"value":"207"},"visibility":"public"},{"constant":true,"functionSelector":"3a13248f","id":7952,"mutability":"constant","name":"OPENING_SCHEDULE","nameLocation":"847:16:35","nodeType":"VariableDeclaration","scope":7989,"src":"824:47:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7950,"name":"string","nodeType":"ElementaryTypeName","src":"824:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323038","id":7951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"866:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_555b0a599f654d63fa786356aaa3ed32af39ca11efd351bedfbf54d34ad77d1b","typeString":"literal_string \"208\""},"value":"208"},"visibility":"public"},{"constant":true,"functionSelector":"8cb739c6","id":7955,"mutability":"constant","name":"INV_TOKEN","nameLocation":"900:9:35","nodeType":"VariableDeclaration","scope":7989,"src":"877:40:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7953,"name":"string","nodeType":"ElementaryTypeName","src":"877:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323039","id":7954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"912:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_84b3f9c1584778fd0609bd44bae524185bcc8a7d9057a78c14d22945c29b7555","typeString":"literal_string \"209\""},"value":"209"},"visibility":"public"},{"constant":true,"functionSelector":"ef494c25","id":7958,"mutability":"constant","name":"FORBIDDEN_TRANSFER_PROJECT","nameLocation":"946:26:35","nodeType":"VariableDeclaration","scope":7989,"src":"923:57:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7956,"name":"string","nodeType":"ElementaryTypeName","src":"923:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"323130","id":7957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"975:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_73b4e112f18808d78aa7e4e08d4dfcba4c024ffcb9b967f91e35d5094333ff3b","typeString":"literal_string \"210\""},"value":"210"},"visibility":"public"},{"constant":true,"functionSelector":"90131fab","id":7961,"mutability":"constant","name":"INVALID_ERC721_OWNER","nameLocation":"1040:20:35","nodeType":"VariableDeclaration","scope":7989,"src":"1017:51:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7959,"name":"string","nodeType":"ElementaryTypeName","src":"1017:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333030","id":7960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1063:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba463f38d2d1b6be660b783eceb51b835e336e7e2844402930bc83b58866cf56","typeString":"literal_string \"300\""},"value":"300"},"visibility":"public"},{"constant":true,"functionSelector":"c059011b","id":7964,"mutability":"constant","name":"ERC_721_NOT_APPROVED","nameLocation":"1097:20:35","nodeType":"VariableDeclaration","scope":7989,"src":"1074:51:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7962,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333031","id":7963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1120:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_226555216d4597f421fa68bd1a9868d9b0c3bc5894491f1df5f0f5c84a2d1e77","typeString":"literal_string \"301\""},"value":"301"},"visibility":"public"},{"constant":true,"functionSelector":"2b72ddbd","id":7967,"mutability":"constant","name":"OFFERING_CLOSED","nameLocation":"1154:15:35","nodeType":"VariableDeclaration","scope":7989,"src":"1131:46:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7965,"name":"string","nodeType":"ElementaryTypeName","src":"1131:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333032","id":7966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1172:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f614af0018a794ff09cb8ca714ab071e8b31e374cf86f03365750c1a5a0439b","typeString":"literal_string \"302\""},"value":"302"},"visibility":"public"},{"constant":true,"functionSelector":"5560f1f8","id":7970,"mutability":"constant","name":"VALUE_INVALID","nameLocation":"1206:13:35","nodeType":"VariableDeclaration","scope":7989,"src":"1183:44:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7968,"name":"string","nodeType":"ElementaryTypeName","src":"1183:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333033","id":7969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1222:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9d2e5d7dcf681fb037cdc034b01f1fe792271e130f784f84f54ff4ae7a73679","typeString":"literal_string \"303\""},"value":"303"},"visibility":"public"},{"constant":true,"functionSelector":"e81216b5","id":7973,"mutability":"constant","name":"ERC20_BALANCE_INVALID","nameLocation":"1256:21:35","nodeType":"VariableDeclaration","scope":7989,"src":"1233:52:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7971,"name":"string","nodeType":"ElementaryTypeName","src":"1233:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333034","id":7972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1280:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_064aab4cf973af3102587bae83caeab28cf75517d40727c9b952f0d14fb521fa","typeString":"literal_string \"304\""},"value":"304"},"visibility":"public"},{"constant":true,"functionSelector":"35a02d73","id":7976,"mutability":"constant","name":"ERC20_NOT_APPROVED","nameLocation":"1314:18:35","nodeType":"VariableDeclaration","scope":7989,"src":"1291:49:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7974,"name":"string","nodeType":"ElementaryTypeName","src":"1291:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333035","id":7975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1335:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_0dca527fa2004186a377cdb3f738aa71973799617a6a84f5d8cea8f8e3c9b11f","typeString":"literal_string \"305\""},"value":"305"},"visibility":"public"},{"constant":true,"functionSelector":"07475084","id":7979,"mutability":"constant","name":"TRANSFER_FAIL","nameLocation":"1369:13:35","nodeType":"VariableDeclaration","scope":7989,"src":"1346:44:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7977,"name":"string","nodeType":"ElementaryTypeName","src":"1346:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333036","id":7978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_41e56607cad04c134e4e470c9fce76566c1848af363d3617ff5ce2939142f7f3","typeString":"literal_string \"306\""},"value":"306"},"visibility":"public"},{"constant":true,"functionSelector":"d5bec685","id":7982,"mutability":"constant","name":"ERC_20_NOT_ALLOW","nameLocation":"1419:16:35","nodeType":"VariableDeclaration","scope":7989,"src":"1396:47:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7980,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333037","id":7981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1438:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6cb0138da7c8b3468e7e4d8ba389a3263d4efb90e59a6ce914e87b867b16a00","typeString":"literal_string \"307\""},"value":"307"},"visibility":"public"},{"constant":true,"functionSelector":"1557ff24","id":7985,"mutability":"constant","name":"ZERO_PRICE","nameLocation":"1472:10:35","nodeType":"VariableDeclaration","scope":7989,"src":"1449:41:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7983,"name":"string","nodeType":"ElementaryTypeName","src":"1449:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333038","id":7984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1485:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_20cc4125b85dea0acd2bfdcb8266ab27b5078754ab69acc2a86745857274d313","typeString":"literal_string \"308\""},"value":"308"},"visibility":"public"},{"constant":true,"functionSelector":"ec94a577","id":7988,"mutability":"constant","name":"ZERO_DURATION","nameLocation":"1519:13:35","nodeType":"VariableDeclaration","scope":7989,"src":"1496:44:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7986,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"333039","id":7987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1535:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_c14cd0a66bdc419d2e52369cdc9bcc330601a7df1268557a44a8b73b94984cd3","typeString":"literal_string \"309\""},"value":"309"},"visibility":"public"}],"scope":7990,"src":"62:1481:35","usedErrors":[]}],"src":"37:1506:35"},"id":35},"contracts/libs/structs/NFTProject.sol":{"ast":{"absolutePath":"contracts/libs/structs/NFTProject.sol","exportedSymbols":{"NFTProject":[8123]},"id":8124,"nodeType":"SourceUnit","nodes":[{"id":7991,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:36"},{"abstract":false,"baseContracts":[],"canonicalName":"NFTProject","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":8123,"linearizedBaseContracts":[8123],"name":"NFTProject","nameLocation":"33:10:36","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":7997,"name":"CompleteProject","nameLocation":"56:15:36","nodeType":"EventDefinition","parameters":{"id":7996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7993,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"88:9:36","nodeType":"VariableDeclaration","scope":7997,"src":"72:25:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7992,"name":"uint256","nodeType":"ElementaryTypeName","src":"72:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7995,"indexed":true,"mutability":"mutable","name":"time","nameLocation":"115:4:36","nodeType":"VariableDeclaration","scope":7997,"src":"99:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7994,"name":"uint256","nodeType":"ElementaryTypeName","src":"99:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71:49:36"},"src":"50:71:36"},{"anonymous":false,"id":8004,"name":"UpdateProjectSocial","nameLocation":"132:19:36","nodeType":"EventDefinition","parameters":{"id":8003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7999,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"168:9:36","nodeType":"VariableDeclaration","scope":8004,"src":"152:25:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7998,"name":"uint256","nodeType":"ElementaryTypeName","src":"152:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8002,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"193:4:36","nodeType":"VariableDeclaration","scope":8004,"src":"179:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectSocial_$8088_memory_ptr","typeString":"struct NFTProject.ProjectSocial"},"typeName":{"id":8001,"nodeType":"UserDefinedTypeName","pathNode":{"id":8000,"name":"ProjectSocial","nodeType":"IdentifierPath","referencedDeclaration":8088,"src":"179:13:36"},"referencedDeclaration":8088,"src":"179:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectSocial_$8088_storage_ptr","typeString":"struct NFTProject.ProjectSocial"}},"visibility":"internal"}],"src":"151:47:36"},"src":"126:73:36"},{"anonymous":false,"id":8010,"name":"UpdateProjectName","nameLocation":"210:17:36","nodeType":"EventDefinition","parameters":{"id":8009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8006,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"244:9:36","nodeType":"VariableDeclaration","scope":8010,"src":"228:25:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8005,"name":"uint256","nodeType":"ElementaryTypeName","src":"228:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8008,"indexed":true,"mutability":"mutable","name":"data","nameLocation":"270:4:36","nodeType":"VariableDeclaration","scope":8010,"src":"255:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8007,"name":"string","nodeType":"ElementaryTypeName","src":"255:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"227:48:36"},"src":"204:72:36"},{"anonymous":false,"id":8016,"name":"UpdateProjectLicense","nameLocation":"287:20:36","nodeType":"EventDefinition","parameters":{"id":8015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8012,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"324:9:36","nodeType":"VariableDeclaration","scope":8016,"src":"308:25:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8011,"name":"uint256","nodeType":"ElementaryTypeName","src":"308:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8014,"indexed":true,"mutability":"mutable","name":"data","nameLocation":"350:4:36","nodeType":"VariableDeclaration","scope":8016,"src":"335:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8013,"name":"string","nodeType":"ElementaryTypeName","src":"335:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"307:48:36"},"src":"281:75:36"},{"anonymous":false,"id":8022,"name":"UpdateProjectCreatorName","nameLocation":"367:24:36","nodeType":"EventDefinition","parameters":{"id":8021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8018,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"408:9:36","nodeType":"VariableDeclaration","scope":8022,"src":"392:25:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8017,"name":"uint256","nodeType":"ElementaryTypeName","src":"392:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8020,"indexed":true,"mutability":"mutable","name":"data","nameLocation":"434:4:36","nodeType":"VariableDeclaration","scope":8022,"src":"419:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8019,"name":"string","nodeType":"ElementaryTypeName","src":"419:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"391:48:36"},"src":"361:79:36"},{"anonymous":false,"id":8028,"name":"SetProjectStatus","nameLocation":"451:16:36","nodeType":"EventDefinition","parameters":{"id":8027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8024,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"484:9:36","nodeType":"VariableDeclaration","scope":8028,"src":"468:25:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8023,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8026,"indexed":true,"mutability":"mutable","name":"enable","nameLocation":"508:6:36","nodeType":"VariableDeclaration","scope":8028,"src":"495:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8025,"name":"bool","nodeType":"ElementaryTypeName","src":"495:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"467:48:36"},"src":"445:71:36"},{"anonymous":false,"id":8034,"name":"UpdateProjectPrice","nameLocation":"527:18:36","nodeType":"EventDefinition","parameters":{"id":8033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8030,"indexed":true,"mutability":"mutable","name":"projectId","nameLocation":"562:9:36","nodeType":"VariableDeclaration","scope":8034,"src":"546:25:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8029,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8032,"indexed":true,"mutability":"mutable","name":"price","nameLocation":"589:5:36","nodeType":"VariableDeclaration","scope":8034,"src":"573:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8031,"name":"uint256","nodeType":"ElementaryTypeName","src":"573:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"545:50:36"},"src":"521:75:36"},{"canonicalName":"NFTProject.Project","id":8077,"members":[{"constant":false,"id":8036,"mutability":"mutable","name":"_maxSupply","nameLocation":"634:10:36","nodeType":"VariableDeclaration","scope":8077,"src":"627:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8035,"name":"uint24","nodeType":"ElementaryTypeName","src":"627:6:36","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":8038,"mutability":"mutable","name":"_limit","nameLocation":"673:6:36","nodeType":"VariableDeclaration","scope":8077,"src":"666:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8037,"name":"uint24","nodeType":"ElementaryTypeName","src":"666:6:36","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":8040,"mutability":"mutable","name":"_mintPrice","nameLocation":"708:10:36","nodeType":"VariableDeclaration","scope":8077,"src":"700:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8039,"name":"uint256","nodeType":"ElementaryTypeName","src":"700:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8042,"mutability":"mutable","name":"_mintPriceAddr","nameLocation":"750:14:36","nodeType":"VariableDeclaration","scope":8077,"src":"742:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8041,"name":"address","nodeType":"ElementaryTypeName","src":"742:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8044,"mutability":"mutable","name":"_name","nameLocation":"820:5:36","nodeType":"VariableDeclaration","scope":8077,"src":"813:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8043,"name":"string","nodeType":"ElementaryTypeName","src":"813:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8046,"mutability":"mutable","name":"_creator","nameLocation":"853:8:36","nodeType":"VariableDeclaration","scope":8077,"src":"846:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8045,"name":"string","nodeType":"ElementaryTypeName","src":"846:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8048,"mutability":"mutable","name":"_creatorAddr","nameLocation":"890:12:36","nodeType":"VariableDeclaration","scope":8077,"src":"882:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8047,"name":"address","nodeType":"ElementaryTypeName","src":"882:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8050,"mutability":"mutable","name":"_license","nameLocation":"930:8:36","nodeType":"VariableDeclaration","scope":8077,"src":"923:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8049,"name":"string","nodeType":"ElementaryTypeName","src":"923:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8052,"mutability":"mutable","name":"_desc","nameLocation":"955:5:36","nodeType":"VariableDeclaration","scope":8077,"src":"948:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8051,"name":"string","nodeType":"ElementaryTypeName","src":"948:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8054,"mutability":"mutable","name":"_image","nameLocation":"991:6:36","nodeType":"VariableDeclaration","scope":8077,"src":"984:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8053,"name":"string","nodeType":"ElementaryTypeName","src":"984:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8057,"mutability":"mutable","name":"_social","nameLocation":"1039:7:36","nodeType":"VariableDeclaration","scope":8077,"src":"1025:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectSocial_$8088_storage_ptr","typeString":"struct NFTProject.ProjectSocial"},"typeName":{"id":8056,"nodeType":"UserDefinedTypeName","pathNode":{"id":8055,"name":"ProjectSocial","nodeType":"IdentifierPath","referencedDeclaration":8088,"src":"1025:13:36"},"referencedDeclaration":8088,"src":"1025:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectSocial_$8088_storage_ptr","typeString":"struct NFTProject.ProjectSocial"}},"visibility":"internal"},{"constant":false,"id":8060,"mutability":"mutable","name":"_scriptType","nameLocation":"1079:11:36","nodeType":"VariableDeclaration","scope":8077,"src":"1070:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8058,"name":"string","nodeType":"ElementaryTypeName","src":"1070:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8059,"nodeType":"ArrayTypeName","src":"1070:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":8063,"mutability":"mutable","name":"_scripts","nameLocation":"1123:8:36","nodeType":"VariableDeclaration","scope":8077,"src":"1114:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8061,"name":"string","nodeType":"ElementaryTypeName","src":"1114:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8062,"nodeType":"ArrayTypeName","src":"1114:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":8065,"mutability":"mutable","name":"_styles","nameLocation":"1159:7:36","nodeType":"VariableDeclaration","scope":8077,"src":"1152:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8064,"name":"string","nodeType":"ElementaryTypeName","src":"1152:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8067,"mutability":"mutable","name":"_completeTime","nameLocation":"1198:13:36","nodeType":"VariableDeclaration","scope":8077,"src":"1190:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8069,"mutability":"mutable","name":"_genNFTAddr","nameLocation":"1240:11:36","nodeType":"VariableDeclaration","scope":8077,"src":"1232:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8068,"name":"address","nodeType":"ElementaryTypeName","src":"1232:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8071,"mutability":"mutable","name":"_itemDesc","nameLocation":"1282:9:36","nodeType":"VariableDeclaration","scope":8077,"src":"1275:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8070,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8074,"mutability":"mutable","name":"_reserves","nameLocation":"1326:9:36","nodeType":"VariableDeclaration","scope":8077,"src":"1316:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8072,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8073,"nodeType":"ArrayTypeName","src":"1316:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8076,"mutability":"mutable","name":"_royalty","nameLocation":"1398:8:36","nodeType":"VariableDeclaration","scope":8077,"src":"1390:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1390:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Project","nameLocation":"609:7:36","nodeType":"StructDefinition","scope":8123,"src":"602:834:36","visibility":"public"},{"canonicalName":"NFTProject.ProjectSocial","id":8088,"members":[{"constant":false,"id":8079,"mutability":"mutable","name":"_web","nameLocation":"1480:4:36","nodeType":"VariableDeclaration","scope":8088,"src":"1473:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8078,"name":"string","nodeType":"ElementaryTypeName","src":"1473:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8081,"mutability":"mutable","name":"_twitter","nameLocation":"1501:8:36","nodeType":"VariableDeclaration","scope":8088,"src":"1494:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8080,"name":"string","nodeType":"ElementaryTypeName","src":"1494:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8083,"mutability":"mutable","name":"_discord","nameLocation":"1526:8:36","nodeType":"VariableDeclaration","scope":8088,"src":"1519:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8082,"name":"string","nodeType":"ElementaryTypeName","src":"1519:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8085,"mutability":"mutable","name":"_medium","nameLocation":"1551:7:36","nodeType":"VariableDeclaration","scope":8088,"src":"1544:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8084,"name":"string","nodeType":"ElementaryTypeName","src":"1544:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8087,"mutability":"mutable","name":"_instagram","nameLocation":"1575:10:36","nodeType":"VariableDeclaration","scope":8088,"src":"1568:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8086,"name":"string","nodeType":"ElementaryTypeName","src":"1568:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ProjectSocial","nameLocation":"1449:13:36","nodeType":"StructDefinition","scope":8123,"src":"1442:150:36","visibility":"public"},{"canonicalName":"NFTProject.ProjectMinting","id":8117,"members":[{"constant":false,"id":8090,"mutability":"mutable","name":"_projectAddr","nameLocation":"1638:12:36","nodeType":"VariableDeclaration","scope":8117,"src":"1630:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8089,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8092,"mutability":"mutable","name":"_projectId","nameLocation":"1690:10:36","nodeType":"VariableDeclaration","scope":8117,"src":"1682:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1682:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8094,"mutability":"mutable","name":"_maxSupply","nameLocation":"1737:10:36","nodeType":"VariableDeclaration","scope":8117,"src":"1730:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8093,"name":"uint24","nodeType":"ElementaryTypeName","src":"1730:6:36","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":8096,"mutability":"mutable","name":"_limit","nameLocation":"1770:6:36","nodeType":"VariableDeclaration","scope":8117,"src":"1763:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8095,"name":"uint24","nodeType":"ElementaryTypeName","src":"1763:6:36","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":8098,"mutability":"mutable","name":"_index","nameLocation":"1818:6:36","nodeType":"VariableDeclaration","scope":8117,"src":"1811:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8097,"name":"uint24","nodeType":"ElementaryTypeName","src":"1811:6:36","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":8100,"mutability":"mutable","name":"_indexReserve","nameLocation":"1865:13:36","nodeType":"VariableDeclaration","scope":8117,"src":"1858:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8099,"name":"uint24","nodeType":"ElementaryTypeName","src":"1858:6:36","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":8102,"mutability":"mutable","name":"_creator","nameLocation":"1915:8:36","nodeType":"VariableDeclaration","scope":8117,"src":"1908:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8101,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8104,"mutability":"mutable","name":"_mintPrice","nameLocation":"1941:10:36","nodeType":"VariableDeclaration","scope":8117,"src":"1933:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1933:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8106,"mutability":"mutable","name":"_mintPriceAddr","nameLocation":"1969:14:36","nodeType":"VariableDeclaration","scope":8117,"src":"1961:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8105,"name":"address","nodeType":"ElementaryTypeName","src":"1961:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8108,"mutability":"mutable","name":"_name","nameLocation":"2026:5:36","nodeType":"VariableDeclaration","scope":8117,"src":"2019:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8107,"name":"string","nodeType":"ElementaryTypeName","src":"2019:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8111,"mutability":"mutable","name":"_mintingSchedule","nameLocation":"2064:16:36","nodeType":"VariableDeclaration","scope":8117,"src":"2041:39:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectMintingSchedule_$8122_storage_ptr","typeString":"struct NFTProject.ProjectMintingSchedule"},"typeName":{"id":8110,"nodeType":"UserDefinedTypeName","pathNode":{"id":8109,"name":"ProjectMintingSchedule","nodeType":"IdentifierPath","referencedDeclaration":8122,"src":"2041:22:36"},"referencedDeclaration":8122,"src":"2041:22:36","typeDescriptions":{"typeIdentifier":"t_struct$_ProjectMintingSchedule_$8122_storage_ptr","typeString":"struct NFTProject.ProjectMintingSchedule"}},"visibility":"internal"},{"constant":false,"id":8114,"mutability":"mutable","name":"_reserves","nameLocation":"2100:9:36","nodeType":"VariableDeclaration","scope":8117,"src":"2090:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8112,"name":"address","nodeType":"ElementaryTypeName","src":"2090:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8113,"nodeType":"ArrayTypeName","src":"2090:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8116,"mutability":"mutable","name":"_royalty","nameLocation":"2127:8:36","nodeType":"VariableDeclaration","scope":8117,"src":"2119:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2119:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ProjectMinting","nameLocation":"1605:14:36","nodeType":"StructDefinition","scope":8123,"src":"1598:567:36","visibility":"public"},{"canonicalName":"NFTProject.ProjectMintingSchedule","id":8122,"members":[{"constant":false,"id":8119,"mutability":"mutable","name":"_initBlockTime","nameLocation":"2219:14:36","nodeType":"VariableDeclaration","scope":8122,"src":"2211:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8121,"mutability":"mutable","name":"_openingTime","nameLocation":"2289:12:36","nodeType":"VariableDeclaration","scope":8122,"src":"2281:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ProjectMintingSchedule","nameLocation":"2178:22:36","nodeType":"StructDefinition","scope":8123,"src":"2171:162:36","visibility":"public"}],"scope":8124,"src":"25:2310:36","usedErrors":[]}],"src":"0:2336:36"},"id":36}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"AccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":\"AccessControlEnumerableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626\",\"dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x4807db844a856813048b5af81a764fdd25a0ae8876a3132593e8d21ddc6b607c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca2fce75b1b20047a41f6f67d2d1be3d24308bf34668a22c2f971689e319a70\",\"dweb:/ipfs/QmQ8hxhdkDmwK9CBURbV2eaEeFTBYb3bB3ByWw1GmjvEWo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":4368,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":184,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)179_storage)"},{"astId":479,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":33,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_roleMembers","offset":0,"slot":"151","type":"t_mapping(t_bytes32,t_struct(AddressSet)7113_storage)"},{"astId":143,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(AddressSet)7113_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)","numberOfBytes":"32","value":"t_struct(AddressSet)7113_storage"},"t_mapping(t_bytes32,t_struct(RoleData)179_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)179_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)7113_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.AddressSet","members":[{"astId":7112,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)6798_storage"}],"numberOfBytes":"64"},"t_struct(RoleData)179_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":176,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":178,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(Set)6798_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Set","members":[{"astId":6793,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":6797,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:AccessControlEnumerableUpgradeable","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626\",\"dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":4368,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":184,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)179_storage)"},{"astId":479,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)179_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)179_storage"},"t_struct(RoleData)179_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":176,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":178,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"IAccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":\"IAccessControlEnumerableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"IAccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":589,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":709,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"IVotesUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":\"IVotesUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":978,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":1083,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610864806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106a1565b60405180910390f35b6100df6100da366004610712565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461073c565b61024a565b604051601281526020016100c3565b6100df610131366004610712565b61026e565b6100f3610144366004610778565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610712565b61029f565b6100df610188366004610712565b61031f565b6100f361019b36600461079a565b61032d565b6060603680546101af906107cd565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107cd565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610808565b610358565b6060603780546101af906107cd565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106949086815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106ce578581018301518582016040015282016106b2565b818111156106e0576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070d57600080fd5b919050565b6000806040838503121561072557600080fd5b61072e836106f6565b946020939093013593505050565b60008060006060848603121561075157600080fd5b61075a846106f6565b9250610768602085016106f6565b9150604084013590509250925092565b60006020828403121561078a57600080fd5b610793826106f6565b9392505050565b600080604083850312156107ad57600080fd5b6107b6836106f6565b91506107c4602084016106f6565b90509250929050565b600181811c908216806107e157607f821691505b6020821081141561080257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082957634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122032dfabb9c32432a4db85755bda1fd95e628a0ba5ae435873453956f9001d607d64736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x864 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x79A JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x694 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6CE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6B2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72E DUP4 PUSH2 0x6F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75A DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP3 POP PUSH2 0x768 PUSH1 0x20 DUP6 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 DUP3 PUSH2 0x6F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP4 PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C4 PUSH1 0x20 DUP5 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x802 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x829 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xDF 0xAB 0xB9 0xC3 0x24 ORIGIN LOG4 0xDB DUP6 PUSH22 0x5BDA1FD95E628A0BA5AE435873453956F9001D607D64 PUSH20 0x6F6C634300080C00330000000000000000000000 ","sourceMap":"1480:12159:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1690":{"entryPoint":null,"id":1690,"parameterSlots":3,"returnSlots":0},"@_approve_1625":{"entryPoint":856,"id":1625,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1679":{"entryPoint":null,"id":1679,"parameterSlots":3,"returnSlots":0},"@_msgSender_3550":{"entryPoint":null,"id":3550,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1668":{"entryPoint":1148,"id":1668,"parameterSlots":3,"returnSlots":0},"@_transfer_1451":{"entryPoint":1270,"id":1451,"parameterSlots":3,"returnSlots":0},"@allowance_1246":{"entryPoint":813,"id":1246,"parameterSlots":2,"returnSlots":1},"@approve_1271":{"entryPoint":562,"id":1271,"parameterSlots":2,"returnSlots":1},"@balanceOf_1203":{"entryPoint":null,"id":1203,"parameterSlots":1,"returnSlots":1},"@decimals_1179":{"entryPoint":null,"id":1179,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1374":{"entryPoint":671,"id":1374,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1333":{"entryPoint":622,"id":1333,"parameterSlots":2,"returnSlots":1},"@name_1159":{"entryPoint":416,"id":1159,"parameterSlots":0,"returnSlots":1},"@symbol_1169":{"entryPoint":656,"id":1169,"parameterSlots":0,"returnSlots":1},"@totalSupply_1189":{"entryPoint":null,"id":1189,"parameterSlots":0,"returnSlots":1},"@transferFrom_1304":{"entryPoint":586,"id":1304,"parameterSlots":3,"returnSlots":1},"@transfer_1228":{"entryPoint":799,"id":1228,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1782,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1946,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1852,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1810,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2056,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1997,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5806:37","statements":[{"nodeType":"YulBlock","src":"6:3:37","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:37","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:37","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:37","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:37","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:37"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:37"},"nodeType":"YulFunctionCall","src":"166:21:37"},"nodeType":"YulExpressionStatement","src":"166:21:37"},{"nodeType":"YulVariableDeclaration","src":"196:27:37","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:37"},"nodeType":"YulFunctionCall","src":"210:13:37"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:37"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:37"},"nodeType":"YulFunctionCall","src":"239:18:37"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:37"},"nodeType":"YulFunctionCall","src":"232:34:37"},"nodeType":"YulExpressionStatement","src":"232:34:37"},{"nodeType":"YulVariableDeclaration","src":"275:10:37","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:37","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:37","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:37"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:37"},"nodeType":"YulFunctionCall","src":"369:17:37"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:37"},"nodeType":"YulFunctionCall","src":"365:26:37"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:37"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:37"},"nodeType":"YulFunctionCall","src":"403:14:37"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:37"},"nodeType":"YulFunctionCall","src":"399:23:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:37"},"nodeType":"YulFunctionCall","src":"393:30:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:37"},"nodeType":"YulFunctionCall","src":"358:66:37"},"nodeType":"YulExpressionStatement","src":"358:66:37"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:37"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:37"},"nodeType":"YulFunctionCall","src":"302:13:37"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:37","statements":[{"nodeType":"YulAssignment","src":"318:15:37","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:37"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:37"},"nodeType":"YulFunctionCall","src":"323:10:37"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:37"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:37","statements":[]},"src":"294:140:37"},{"body":{"nodeType":"YulBlock","src":"468:66:37","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:37"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:37"},"nodeType":"YulFunctionCall","src":"493:22:37"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:37"},"nodeType":"YulFunctionCall","src":"489:31:37"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:37","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:37"},"nodeType":"YulFunctionCall","src":"482:42:37"},"nodeType":"YulExpressionStatement","src":"482:42:37"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:37"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:37"},"nodeType":"YulFunctionCall","src":"446:13:37"},"nodeType":"YulIf","src":"443:91:37"},{"nodeType":"YulAssignment","src":"543:62:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:37"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:37","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:37"},"nodeType":"YulFunctionCall","src":"574:15:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:37","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:37"},"nodeType":"YulFunctionCall","src":"591:7:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:37"},"nodeType":"YulFunctionCall","src":"570:29:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:37"},"nodeType":"YulFunctionCall","src":"555:45:37"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:37"},"nodeType":"YulFunctionCall","src":"551:54:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:37"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:37","type":""}],"src":"14:597:37"},{"body":{"nodeType":"YulBlock","src":"665:124:37","statements":[{"nodeType":"YulAssignment","src":"675:29:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:37"},"nodeType":"YulFunctionCall","src":"684:20:37"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:37"}]},{"body":{"nodeType":"YulBlock","src":"767:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:37"},"nodeType":"YulFunctionCall","src":"769:12:37"},"nodeType":"YulExpressionStatement","src":"769:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:37"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:37"},"nodeType":"YulFunctionCall","src":"748:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:37"},"nodeType":"YulFunctionCall","src":"744:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:37"},"nodeType":"YulFunctionCall","src":"733:31:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:37"},"nodeType":"YulFunctionCall","src":"723:42:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:37"},"nodeType":"YulFunctionCall","src":"716:50:37"},"nodeType":"YulIf","src":"713:70:37"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:37","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:37","type":""}],"src":"616:173:37"},{"body":{"nodeType":"YulBlock","src":"881:167:37","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:37"},"nodeType":"YulFunctionCall","src":"929:12:37"},"nodeType":"YulExpressionStatement","src":"929:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:37"},"nodeType":"YulFunctionCall","src":"898:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:37"},"nodeType":"YulFunctionCall","src":"894:32:37"},"nodeType":"YulIf","src":"891:52:37"},{"nodeType":"YulAssignment","src":"952:39:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"962:18:37"},"nodeType":"YulFunctionCall","src":"962:29:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:37"}]},{"nodeType":"YulAssignment","src":"1000:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:37"},"nodeType":"YulFunctionCall","src":"1023:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1010:12:37"},"nodeType":"YulFunctionCall","src":"1010:32:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1000:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:37","type":""}],"src":"794:254:37"},{"body":{"nodeType":"YulBlock","src":"1148:92:37","statements":[{"nodeType":"YulAssignment","src":"1158:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:37"},"nodeType":"YulFunctionCall","src":"1166:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:37"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1225:6:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1218:6:37"},"nodeType":"YulFunctionCall","src":"1218:14:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1211:6:37"},"nodeType":"YulFunctionCall","src":"1211:22:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:37"},"nodeType":"YulFunctionCall","src":"1193:41:37"},"nodeType":"YulExpressionStatement","src":"1193:41:37"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1117:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1128:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1139:4:37","type":""}],"src":"1053:187:37"},{"body":{"nodeType":"YulBlock","src":"1346:76:37","statements":[{"nodeType":"YulAssignment","src":"1356:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:37"},"nodeType":"YulFunctionCall","src":"1364:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1356:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"1409:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:37"},"nodeType":"YulFunctionCall","src":"1391:25:37"},"nodeType":"YulExpressionStatement","src":"1391:25:37"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1326:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1337:4:37","type":""}],"src":"1245:177:37"},{"body":{"nodeType":"YulBlock","src":"1531:224:37","statements":[{"body":{"nodeType":"YulBlock","src":"1577:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1586:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1589:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1579:6:37"},"nodeType":"YulFunctionCall","src":"1579:12:37"},"nodeType":"YulExpressionStatement","src":"1579:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1552:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1548:3:37"},"nodeType":"YulFunctionCall","src":"1548:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:37","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1544:3:37"},"nodeType":"YulFunctionCall","src":"1544:32:37"},"nodeType":"YulIf","src":"1541:52:37"},{"nodeType":"YulAssignment","src":"1602:39:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1631:9:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1612:18:37"},"nodeType":"YulFunctionCall","src":"1612:29:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1602:6:37"}]},{"nodeType":"YulAssignment","src":"1650:48:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:37"},"nodeType":"YulFunctionCall","src":"1679:18:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1660:18:37"},"nodeType":"YulFunctionCall","src":"1660:38:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:37"}]},{"nodeType":"YulAssignment","src":"1707:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:37"},"nodeType":"YulFunctionCall","src":"1730:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1717:12:37"},"nodeType":"YulFunctionCall","src":"1717:32:37"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1707:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1481:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1492:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1504:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1512:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1520:6:37","type":""}],"src":"1427:328:37"},{"body":{"nodeType":"YulBlock","src":"1857:87:37","statements":[{"nodeType":"YulAssignment","src":"1867:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:37"},"nodeType":"YulFunctionCall","src":"1875:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1924:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:37","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1920:3:37"},"nodeType":"YulFunctionCall","src":"1920:17:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:37"},"nodeType":"YulFunctionCall","src":"1902:36:37"},"nodeType":"YulExpressionStatement","src":"1902:36:37"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1826:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1837:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:37","type":""}],"src":"1760:184:37"},{"body":{"nodeType":"YulBlock","src":"2019:116:37","statements":[{"body":{"nodeType":"YulBlock","src":"2065:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2074:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2067:6:37"},"nodeType":"YulFunctionCall","src":"2067:12:37"},"nodeType":"YulExpressionStatement","src":"2067:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2036:3:37"},"nodeType":"YulFunctionCall","src":"2036:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:37","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2032:3:37"},"nodeType":"YulFunctionCall","src":"2032:32:37"},"nodeType":"YulIf","src":"2029:52:37"},{"nodeType":"YulAssignment","src":"2090:39:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2119:9:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2100:18:37"},"nodeType":"YulFunctionCall","src":"2100:29:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:37"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1996:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2008:6:37","type":""}],"src":"1949:186:37"},{"body":{"nodeType":"YulBlock","src":"2227:173:37","statements":[{"body":{"nodeType":"YulBlock","src":"2273:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2282:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2285:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2275:6:37"},"nodeType":"YulFunctionCall","src":"2275:12:37"},"nodeType":"YulExpressionStatement","src":"2275:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2248:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"2257:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2244:3:37"},"nodeType":"YulFunctionCall","src":"2244:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"2269:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2240:3:37"},"nodeType":"YulFunctionCall","src":"2240:32:37"},"nodeType":"YulIf","src":"2237:52:37"},{"nodeType":"YulAssignment","src":"2298:39:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2327:9:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2308:18:37"},"nodeType":"YulFunctionCall","src":"2308:29:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2298:6:37"}]},{"nodeType":"YulAssignment","src":"2346:48:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2379:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:37"},"nodeType":"YulFunctionCall","src":"2375:18:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2356:18:37"},"nodeType":"YulFunctionCall","src":"2356:38:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2346:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2196:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2208:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2216:6:37","type":""}],"src":"2140:260:37"},{"body":{"nodeType":"YulBlock","src":"2460:325:37","statements":[{"nodeType":"YulAssignment","src":"2470:22:37","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2484:1:37","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2487:4:37"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2480:3:37"},"nodeType":"YulFunctionCall","src":"2480:12:37"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2470:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"2501:38:37","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2531:4:37"},{"kind":"number","nodeType":"YulLiteral","src":"2537:1:37","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2527:3:37"},"nodeType":"YulFunctionCall","src":"2527:12:37"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2505:18:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"2578:31:37","statements":[{"nodeType":"YulAssignment","src":"2580:27:37","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2594:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"2602:4:37","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2590:3:37"},"nodeType":"YulFunctionCall","src":"2590:17:37"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2580:6:37"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2558:18:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2551:6:37"},"nodeType":"YulFunctionCall","src":"2551:26:37"},"nodeType":"YulIf","src":"2548:61:37"},{"body":{"nodeType":"YulBlock","src":"2668:111:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2696:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2701:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2692:3:37"},"nodeType":"YulFunctionCall","src":"2692:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2682:6:37"},"nodeType":"YulFunctionCall","src":"2682:31:37"},"nodeType":"YulExpressionStatement","src":"2682:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2733:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2736:4:37","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2726:6:37"},"nodeType":"YulFunctionCall","src":"2726:15:37"},"nodeType":"YulExpressionStatement","src":"2726:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2761:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2764:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2754:6:37"},"nodeType":"YulFunctionCall","src":"2754:15:37"},"nodeType":"YulExpressionStatement","src":"2754:15:37"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2624:18:37"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2647:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"2655:2:37","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2644:2:37"},"nodeType":"YulFunctionCall","src":"2644:14:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2621:2:37"},"nodeType":"YulFunctionCall","src":"2621:38:37"},"nodeType":"YulIf","src":"2618:161:37"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2440:4:37","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2449:6:37","type":""}],"src":"2405:380:37"},{"body":{"nodeType":"YulBlock","src":"2838:177:37","statements":[{"body":{"nodeType":"YulBlock","src":"2873:111:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2894:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2901:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2906:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2897:3:37"},"nodeType":"YulFunctionCall","src":"2897:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2887:6:37"},"nodeType":"YulFunctionCall","src":"2887:31:37"},"nodeType":"YulExpressionStatement","src":"2887:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2941:4:37","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2931:6:37"},"nodeType":"YulFunctionCall","src":"2931:15:37"},"nodeType":"YulExpressionStatement","src":"2931:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2966:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2969:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2959:6:37"},"nodeType":"YulFunctionCall","src":"2959:15:37"},"nodeType":"YulExpressionStatement","src":"2959:15:37"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2854:1:37"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2861:1:37"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2857:3:37"},"nodeType":"YulFunctionCall","src":"2857:6:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2851:2:37"},"nodeType":"YulFunctionCall","src":"2851:13:37"},"nodeType":"YulIf","src":"2848:136:37"},{"nodeType":"YulAssignment","src":"2993:16:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3004:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"3007:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:37"},"nodeType":"YulFunctionCall","src":"3000:9:37"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2993:3:37"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2821:1:37","type":""},{"name":"y","nodeType":"YulTypedName","src":"2824:1:37","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2830:3:37","type":""}],"src":"2790:225:37"},{"body":{"nodeType":"YulBlock","src":"3194:227:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3211:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3222:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3204:6:37"},"nodeType":"YulFunctionCall","src":"3204:21:37"},"nodeType":"YulExpressionStatement","src":"3204:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3245:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3256:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3241:3:37"},"nodeType":"YulFunctionCall","src":"3241:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"3261:2:37","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3234:6:37"},"nodeType":"YulFunctionCall","src":"3234:30:37"},"nodeType":"YulExpressionStatement","src":"3234:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3295:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:37"},"nodeType":"YulFunctionCall","src":"3280:18:37"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3300:34:37","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3273:6:37"},"nodeType":"YulFunctionCall","src":"3273:62:37"},"nodeType":"YulExpressionStatement","src":"3273:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3355:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3366:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3351:3:37"},"nodeType":"YulFunctionCall","src":"3351:18:37"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3371:7:37","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3344:6:37"},"nodeType":"YulFunctionCall","src":"3344:35:37"},"nodeType":"YulExpressionStatement","src":"3344:35:37"},{"nodeType":"YulAssignment","src":"3388:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3400:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3411:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3396:3:37"},"nodeType":"YulFunctionCall","src":"3396:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3388:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3171:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3185:4:37","type":""}],"src":"3020:401:37"},{"body":{"nodeType":"YulBlock","src":"3600:226:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3617:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3628:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3610:6:37"},"nodeType":"YulFunctionCall","src":"3610:21:37"},"nodeType":"YulExpressionStatement","src":"3610:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3651:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3662:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:37"},"nodeType":"YulFunctionCall","src":"3647:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"3667:2:37","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3640:6:37"},"nodeType":"YulFunctionCall","src":"3640:30:37"},"nodeType":"YulExpressionStatement","src":"3640:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:37"},"nodeType":"YulFunctionCall","src":"3686:18:37"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3706:34:37","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:37"},"nodeType":"YulFunctionCall","src":"3679:62:37"},"nodeType":"YulExpressionStatement","src":"3679:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3761:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3772:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3757:3:37"},"nodeType":"YulFunctionCall","src":"3757:18:37"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3777:6:37","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3750:6:37"},"nodeType":"YulFunctionCall","src":"3750:34:37"},"nodeType":"YulExpressionStatement","src":"3750:34:37"},{"nodeType":"YulAssignment","src":"3793:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3805:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3816:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3801:3:37"},"nodeType":"YulFunctionCall","src":"3801:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3793:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3577:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3591:4:37","type":""}],"src":"3426:400:37"},{"body":{"nodeType":"YulBlock","src":"4005:224:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4022:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4033:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4015:6:37"},"nodeType":"YulFunctionCall","src":"4015:21:37"},"nodeType":"YulExpressionStatement","src":"4015:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4056:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4067:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4052:3:37"},"nodeType":"YulFunctionCall","src":"4052:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"4072:2:37","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4045:6:37"},"nodeType":"YulFunctionCall","src":"4045:30:37"},"nodeType":"YulExpressionStatement","src":"4045:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4095:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4106:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4091:3:37"},"nodeType":"YulFunctionCall","src":"4091:18:37"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4111:34:37","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4084:6:37"},"nodeType":"YulFunctionCall","src":"4084:62:37"},"nodeType":"YulExpressionStatement","src":"4084:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4166:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4177:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:37"},"nodeType":"YulFunctionCall","src":"4162:18:37"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4182:4:37","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:37"},"nodeType":"YulFunctionCall","src":"4155:32:37"},"nodeType":"YulExpressionStatement","src":"4155:32:37"},{"nodeType":"YulAssignment","src":"4196:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4208:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4219:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4204:3:37"},"nodeType":"YulFunctionCall","src":"4204:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4196:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3982:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3996:4:37","type":""}],"src":"3831:398:37"},{"body":{"nodeType":"YulBlock","src":"4408:179:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4425:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4436:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4418:6:37"},"nodeType":"YulFunctionCall","src":"4418:21:37"},"nodeType":"YulExpressionStatement","src":"4418:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4459:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4470:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:37"},"nodeType":"YulFunctionCall","src":"4455:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"4475:2:37","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4448:6:37"},"nodeType":"YulFunctionCall","src":"4448:30:37"},"nodeType":"YulExpressionStatement","src":"4448:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4498:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4509:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4494:3:37"},"nodeType":"YulFunctionCall","src":"4494:18:37"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4514:31:37","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4487:6:37"},"nodeType":"YulFunctionCall","src":"4487:59:37"},"nodeType":"YulExpressionStatement","src":"4487:59:37"},{"nodeType":"YulAssignment","src":"4555:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4567:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4578:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4563:3:37"},"nodeType":"YulFunctionCall","src":"4563:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4555:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4385:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4399:4:37","type":""}],"src":"4234:353:37"},{"body":{"nodeType":"YulBlock","src":"4766:227:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4783:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4794:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:37"},"nodeType":"YulFunctionCall","src":"4776:21:37"},"nodeType":"YulExpressionStatement","src":"4776:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4817:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4828:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4813:3:37"},"nodeType":"YulFunctionCall","src":"4813:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:37","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4806:6:37"},"nodeType":"YulFunctionCall","src":"4806:30:37"},"nodeType":"YulExpressionStatement","src":"4806:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4856:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4867:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4852:3:37"},"nodeType":"YulFunctionCall","src":"4852:18:37"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4872:34:37","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4845:6:37"},"nodeType":"YulFunctionCall","src":"4845:62:37"},"nodeType":"YulExpressionStatement","src":"4845:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4927:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4938:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4923:3:37"},"nodeType":"YulFunctionCall","src":"4923:18:37"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4943:7:37","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4916:6:37"},"nodeType":"YulFunctionCall","src":"4916:35:37"},"nodeType":"YulExpressionStatement","src":"4916:35:37"},{"nodeType":"YulAssignment","src":"4960:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4983:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:37"},"nodeType":"YulFunctionCall","src":"4968:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4960:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4743:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4757:4:37","type":""}],"src":"4592:401:37"},{"body":{"nodeType":"YulBlock","src":"5172:225:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5189:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5200:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5182:6:37"},"nodeType":"YulFunctionCall","src":"5182:21:37"},"nodeType":"YulExpressionStatement","src":"5182:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5223:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5234:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5219:3:37"},"nodeType":"YulFunctionCall","src":"5219:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"5239:2:37","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5212:6:37"},"nodeType":"YulFunctionCall","src":"5212:30:37"},"nodeType":"YulExpressionStatement","src":"5212:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5262:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5273:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5258:3:37"},"nodeType":"YulFunctionCall","src":"5258:18:37"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5278:34:37","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5251:6:37"},"nodeType":"YulFunctionCall","src":"5251:62:37"},"nodeType":"YulExpressionStatement","src":"5251:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5333:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5344:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5329:3:37"},"nodeType":"YulFunctionCall","src":"5329:18:37"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5349:5:37","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5322:6:37"},"nodeType":"YulFunctionCall","src":"5322:33:37"},"nodeType":"YulExpressionStatement","src":"5322:33:37"},{"nodeType":"YulAssignment","src":"5364:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5387:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5372:3:37"},"nodeType":"YulFunctionCall","src":"5372:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5364:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5149:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5163:4:37","type":""}],"src":"4998:399:37"},{"body":{"nodeType":"YulBlock","src":"5576:228:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5593:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5604:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5586:6:37"},"nodeType":"YulFunctionCall","src":"5586:21:37"},"nodeType":"YulExpressionStatement","src":"5586:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5627:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5623:3:37"},"nodeType":"YulFunctionCall","src":"5623:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"5643:2:37","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5616:6:37"},"nodeType":"YulFunctionCall","src":"5616:30:37"},"nodeType":"YulExpressionStatement","src":"5616:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5666:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5677:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5662:3:37"},"nodeType":"YulFunctionCall","src":"5662:18:37"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5682:34:37","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5655:6:37"},"nodeType":"YulFunctionCall","src":"5655:62:37"},"nodeType":"YulExpressionStatement","src":"5655:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5748:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:37"},"nodeType":"YulFunctionCall","src":"5733:18:37"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5753:8:37","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5726:6:37"},"nodeType":"YulFunctionCall","src":"5726:36:37"},"nodeType":"YulExpressionStatement","src":"5726:36:37"},{"nodeType":"YulAssignment","src":"5771:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5783:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5794:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5779:3:37"},"nodeType":"YulFunctionCall","src":"5779:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5771:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5553:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5567:4:37","type":""}],"src":"5402:402:37"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":37,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106a1565b60405180910390f35b6100df6100da366004610712565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461073c565b61024a565b604051601281526020016100c3565b6100df610131366004610712565b61026e565b6100f3610144366004610778565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610712565b61029f565b6100df610188366004610712565b61031f565b6100f361019b36600461079a565b61032d565b6060603680546101af906107cd565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107cd565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610808565b610358565b6060603780546101af906107cd565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106949086815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106ce578581018301518582016040015282016106b2565b818111156106e0576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070d57600080fd5b919050565b6000806040838503121561072557600080fd5b61072e836106f6565b946020939093013593505050565b60008060006060848603121561075157600080fd5b61075a846106f6565b9250610768602085016106f6565b9150604084013590509250925092565b60006020828403121561078a57600080fd5b610793826106f6565b9392505050565b600080604083850312156107ad57600080fd5b6107b6836106f6565b91506107c4602084016106f6565b90509250929050565b600181811c908216806107e157607f821691505b6020821081141561080257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082957634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122032dfabb9c32432a4db85755bda1fd95e628a0ba5ae435873453956f9001d607d64736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x79A JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x694 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6CE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6B2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72E DUP4 PUSH2 0x6F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75A DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP3 POP PUSH2 0x768 PUSH1 0x20 DUP6 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 DUP3 PUSH2 0x6F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP4 PUSH2 0x6F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C4 PUSH1 0x20 DUP5 ADD PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x802 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x829 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xDF 0xAB 0xB9 0xC3 0x24 ORIGIN LOG4 0xDB DUP6 PUSH22 0x5BDA1FD95E628A0BA5AE435873453956F9001D607D64 PUSH20 0x6F6C634300080C00330000000000000000000000 ","sourceMap":"1480:12159:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:37;;1211:22;1193:41;;1181:2;1166:18;4768:197:8;1053:187:37;3579:106:8;3666:12;;3579:106;;;1391:25:37;;;1379:2;1364:18;3579:106:8;1245:177:37;5527:286:8;;;;;;:::i;:::-;;:::i;3428:91::-;;;3510:2;1902:36:37;;1890:2;1875:18;3428:91:8;1760:184:37;6208:234:8;;;;;;:::i;:::-;;:::i;3743:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3843:18:8;3817:7;3843:18;;;:9;:18;;;;;;;3743:125;2702:102;;;:::i;6929:427::-;;;;;;:::i;:::-;;:::i;4064:189::-;;;;;;:::i;:::-;;:::i;4311:149::-;;;;;;:::i;:::-;;:::i;2491:98::-;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;929:10:20;4905:32:8;929:10:20;4921:7:8;4930:6;4905:8;:32::i;:::-;-1:-1:-1;4954:4:8;;4768:197;-1:-1:-1;;;4768:197:8:o;5527:286::-;5654:4;929:10:20;5710:38:8;5726:4;929:10:20;5741:6:8;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;-1:-1:-1;5802:4:8;;5527:286;-1:-1:-1;;;;5527:286:8:o;6208:234::-;6296:4;929:10:20;6350:64:8;929:10:20;6366:7:8;6403:10;6375:25;929:10:20;6366:7:8;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;2702:102::-;2758:13;2790:7;2783:14;;;;;:::i;6929:427::-;7022:4;929:10:20;7022:4:8;7103:25;929:10:20;7120:7:8;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;-1:-1:-1;;;7138:85:8;;3222:2:37;7138:85:8;;;3204:21:37;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:37;;;3344:35;3396:19;;7138:85:8;;;;;;;;;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;4064:189::-;4143:4;929:10:20;4197:28:8;929:10:20;4214:2:8;4218:6;4197:9;:28::i;4311:149::-;-1:-1:-1;;;;;4426:18:8;;;4400:7;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4311:149::o;10841:370::-;-1:-1:-1;;;;;10972:19:8;;10964:68;;;;-1:-1:-1;;;10964:68:8;;3628:2:37;10964:68:8;;;3610:21:37;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:37;;;3750:34;3801:19;;10964:68:8;3426:400:37;10964:68:8;-1:-1:-1;;;;;11050:21:8;;11042:68;;;;-1:-1:-1;;;11042:68:8;;4033:2:37;11042:68:8;;;4015:21:37;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:37;;;4155:32;4204:19;;11042:68:8;3831:398:37;11042:68:8;-1:-1:-1;;;;;11121:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11172:32;;1391:25:37;;;11172:32:8;;1364:18:37;11172:32:8;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;-1:-1:-1;;11688:16:8;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;-1:-1:-1;;;11741:68:8;;4436:2:37;11741:68:8;;;4418:21:37;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11741:68:8;4234:353:37;11741:68:8;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11612:321;11492:441;;;:::o;7810:818::-;-1:-1:-1;;;;;7936:18:8;;7928:68;;;;-1:-1:-1;;;7928:68:8;;4794:2:37;7928:68:8;;;4776:21:37;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:37;;;4916:35;4968:19;;7928:68:8;4592:401:37;7928:68:8;-1:-1:-1;;;;;8014:16:8;;8006:64;;;;-1:-1:-1;;;8006:64:8;;5200:2:37;8006:64:8;;;5182:21:37;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:37;;;5322:33;5372:19;;8006:64:8;4998:399:37;8006:64:8;-1:-1:-1;;;;;8152:15:8;;8130:19;8152:15;;;:9;:15;;;;;;8185:21;;;;8177:72;;;;-1:-1:-1;;;8177:72:8;;5604:2:37;8177:72:8;;;5586:21:37;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:37;;;5726:36;5779:19;;8177:72:8;5402:402:37;8177:72:8;-1:-1:-1;;;;;8283:15:8;;;;;;;:9;:15;;;;;;8301:20;;;8283:38;;8498:13;;;;;;;;;;:23;;;;;;8547:26;;;;;;8315:6;1391:25:37;;1379:2;1364:18;;1245:177;8547:26:8;;;;;;;;8584:37;12517:121;14:597:37;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:37;574:15;-1:-1:-1;;570:29:37;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:37:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:37;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:37:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:37:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:37;;2790:225::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1103,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1111,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1113,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1115,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1695,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ERC20BurnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1103,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1111,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1113,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1115,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1695,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":1837,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ERC20PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":\"ERC20PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x5bba367c6c5b9bc3ffb2a87f6aa7437955f0697ab8fcd8e38d2a4985be6469fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5cebfffc457ba7de28368a4e36d0543d0ba6247ab4deff8cc6e04654aacf089\",\"dweb:/ipfs/Qmc5rymHyZeMhnJyCf4egyX2nSJwPzFYAgUtcWea4wrQrC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1103,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1111,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1113,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1115,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1695,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":978,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"_paused","offset":0,"slot":"101","type":"t_bool"},{"astId":1083,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":1897,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol":{"ERC20VotesCompUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20VotesUpgradeable.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getCurrentVotes","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPriorVotes","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getCurrentVotes(address)":"b4b5ea57","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getPriorVotes(address,uint256)":"782d6fe1","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound's voting and delegation. This version exactly matches Compound's interface, with the drawback of only supporting supply up to (2^96^ - 1). NOTE: You should use this contract if you need exact compatibility with COMP (for example in order to use your token with Governor Alpha or Bravo) and if you are sure the supply cap of 2^96^ is enough for you. Otherwise, use the {ERC20Votes} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getCurrentVotes} and {getPriorVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getCurrentVotes(address)\":{\"details\":\"Comp version of the {getVotes} accessor, with `uint96` return type.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Comp version of the {getPastVotes} accessor, with `uint96` return type.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol\":\"ERC20VotesCompUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol\":{\"keccak256\":\"0x7597cac938c3b70d6f513e0c9ab1e4ab0bfeeef46f181f80309744d0705ecd80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfa9a838560dbfc44ca52cf03cc1ffd1e40ba5b7e8032a560572d680a1449566\",\"dweb:/ipfs/QmdQ7AfXfLvi4QCQZqTAjHCgjU69XAmMsg3rB5bfA98U21\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x8a6e600bfbdd5a549f0e6f1411ed4153a2a13152d02f245854bc9b42da514581\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e205acf7a1580ac0a319862d08b326d5cc70a24a55e2eec3d85e17aa25ad5798\",\"dweb:/ipfs/QmQs9rpawoUQXB9aCZvDg9u8FgTh4PvWCzv5igd4Sr8HvH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1103,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1111,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1113,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1115,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1695,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":4184,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_HASHED_NAME","offset":0,"slot":"101","type":"t_bytes32"},{"astId":4186,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_HASHED_VERSION","offset":0,"slot":"102","type":"t_bytes32"},{"astId":4324,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"__gap","offset":0,"slot":"103","type":"t_array(t_uint256)50_storage"},{"astId":2742,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_nonces","offset":0,"slot":"153","type":"t_mapping(t_address,t_struct(Counter)3571_storage)"},{"astId":2750,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"154","type":"t_bytes32"},{"astId":2906,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)49_storage"},{"astId":2015,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_delegates","offset":0,"slot":"204","type":"t_mapping(t_address,t_address)"},{"astId":2021,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_checkpoints","offset":0,"slot":"205","type":"t_mapping(t_address,t_array(t_struct(Checkpoint)2006_storage)dyn_storage)"},{"astId":2025,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_totalSupplyCheckpoints","offset":0,"slot":"206","type":"t_array(t_struct(Checkpoint)2006_storage)dyn_storage"},{"astId":2690,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"__gap","offset":0,"slot":"207","type":"t_array(t_uint256)47_storage"},{"astId":1973,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"__gap","offset":0,"slot":"254","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint)2006_storage)dyn_storage":{"base":"t_struct(Checkpoint)2006_storage","encoding":"dynamic_array","label":"struct ERC20VotesUpgradeable.Checkpoint[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_struct(Checkpoint)2006_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])","numberOfBytes":"32","value":"t_array(t_struct(Checkpoint)2006_storage)dyn_storage"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)3571_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)3571_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint)2006_storage":{"encoding":"inplace","label":"struct ERC20VotesUpgradeable.Checkpoint","members":[{"astId":2003,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"fromBlock","offset":0,"slot":"0","type":"t_uint32"},{"astId":2005,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"votes","offset":4,"slot":"0","type":"t_uint224"}],"numberOfBytes":"32"},"t_struct(Counter)3571_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":3570,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol:ERC20VotesCompUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ERC20VotesUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20VotesUpgradeable.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":\"ERC20VotesUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x8a6e600bfbdd5a549f0e6f1411ed4153a2a13152d02f245854bc9b42da514581\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e205acf7a1580ac0a319862d08b326d5cc70a24a55e2eec3d85e17aa25ad5798\",\"dweb:/ipfs/QmQs9rpawoUQXB9aCZvDg9u8FgTh4PvWCzv5igd4Sr8HvH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1103,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1111,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1113,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1115,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1695,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":4184,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_HASHED_NAME","offset":0,"slot":"101","type":"t_bytes32"},{"astId":4186,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_HASHED_VERSION","offset":0,"slot":"102","type":"t_bytes32"},{"astId":4324,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"103","type":"t_array(t_uint256)50_storage"},{"astId":2742,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_nonces","offset":0,"slot":"153","type":"t_mapping(t_address,t_struct(Counter)3571_storage)"},{"astId":2750,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"154","type":"t_bytes32"},{"astId":2906,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)49_storage"},{"astId":2015,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_delegates","offset":0,"slot":"204","type":"t_mapping(t_address,t_address)"},{"astId":2021,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_checkpoints","offset":0,"slot":"205","type":"t_mapping(t_address,t_array(t_struct(Checkpoint)2006_storage)dyn_storage)"},{"astId":2025,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_totalSupplyCheckpoints","offset":0,"slot":"206","type":"t_array(t_struct(Checkpoint)2006_storage)dyn_storage"},{"astId":2690,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"207","type":"t_array(t_uint256)47_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint)2006_storage)dyn_storage":{"base":"t_struct(Checkpoint)2006_storage","encoding":"dynamic_array","label":"struct ERC20VotesUpgradeable.Checkpoint[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_struct(Checkpoint)2006_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])","numberOfBytes":"32","value":"t_array(t_struct(Checkpoint)2006_storage)dyn_storage"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)3571_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)3571_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint)2006_storage":{"encoding":"inplace","label":"struct ERC20VotesUpgradeable.Checkpoint","members":[{"astId":2003,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"fromBlock","offset":0,"slot":"0","type":"t_uint32"},{"astId":2005,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"votes","offset":4,"slot":"0","type":"t_uint224"}],"numberOfBytes":"32"},"t_struct(Counter)3571_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":3570,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"51\",\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1103,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1111,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1113,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1115,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1695,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":4184,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_HASHED_NAME","offset":0,"slot":"101","type":"t_bytes32"},{"astId":4186,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_HASHED_VERSION","offset":0,"slot":"102","type":"t_bytes32"},{"astId":4324,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"103","type":"t_array(t_uint256)50_storage"},{"astId":2742,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_nonces","offset":0,"slot":"153","type":"t_mapping(t_address,t_struct(Counter)3571_storage)"},{"astId":2750,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"154","type":"t_bytes32"},{"astId":2906,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)3571_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)3571_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)3571_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":3570,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol":{"IERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol":{"ERC20PresetMinterPauserUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611ce6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80635c975abb11610104578063a217fddf116100a2578063d539139311610071578063d5391393146103ce578063d547741f146103f5578063dd62ed3e14610408578063e63ab1e91461041b57600080fd5b8063a217fddf1461038d578063a457c2d714610395578063a9059cbb146103a8578063ca15c873146103bb57600080fd5b80638456cb59116100de5780638456cb591461033f5780639010d07c1461034757806391d148541461037257806395d89b411461038557600080fd5b80635c975abb146102f757806370a082311461030357806379cc67901461032c57600080fd5b8063313ce567116101715780633f4ba83a1161014b5780633f4ba83a146102b657806340c10f19146102be57806342966c68146102d15780634cd88b76146102e457600080fd5b8063313ce5671461028157806336568abe1461029057806339509351146102a357600080fd5b806318160ddd116101ad57806318160ddd1461022457806323b872dd14610236578063248a9ca3146102495780632f2ff15d1461026c57600080fd5b806301ffc9a7146101d457806306fdde03146101fc578063095ea7b314610211575b600080fd5b6101e76101e2366004611830565b610430565b60405190151581526020015b60405180910390f35b61020461045b565b6040516101f39190611886565b6101e761021f3660046118d5565b6104ed565b60cb545b6040519081526020016101f3565b6101e76102443660046118ff565b610505565b61022861025736600461193b565b60009081526065602052604090206001015490565b61027f61027a366004611954565b610529565b005b604051601281526020016101f3565b61027f61029e366004611954565b610553565b6101e76102b13660046118d5565b6105d6565b61027f6105f8565b61027f6102cc3660046118d5565b61068c565b61027f6102df36600461193b565b61072b565b61027f6102f2366004611a23565b610738565b61012d5460ff166101e7565b610228610311366004611a87565b6001600160a01b0316600090815260c9602052604090205490565b61027f61033a3660046118d5565b61084c565b61027f610861565b61035a610355366004611aa2565b6108f3565b6040516001600160a01b0390911681526020016101f3565b6101e7610380366004611954565b610912565b61020461093d565b610228600081565b6101e76103a33660046118d5565b61094c565b6101e76103b63660046118d5565b6109c7565b6102286103c936600461193b565b6109d5565b6102287f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61027f610403366004611954565b6109ec565b610228610416366004611ac4565b610a11565b610228600080516020611c9183398151915281565b60006001600160e01b03198216635a05180f60e01b1480610455575061045582610a3c565b92915050565b606060cc805461046a90611aee565b80601f016020809104026020016040519081016040528092919081815260200182805461049690611aee565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b5050505050905090565b6000336104fb818585610a71565b5060019392505050565b600033610513858285610b95565b61051e858585610c0f565b506001949350505050565b60008281526065602052604090206001015461054481610dc5565b61054e8383610dcf565b505050565b6001600160a01b03811633146105c85760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105d28282610df1565b5050565b6000336104fb8185856105e98383610a11565b6105f39190611b3f565b610a71565b610610600080516020611c9183398151915233610912565b6106825760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e70617573650000000000000060648201526084016105bf565b61068a610e13565b565b6106b67f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610912565b6107215760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b60648201526084016105bf565b6105d28282610e66565b6107353382610f33565b50565b600054610100900460ff16158080156107585750600054600160ff909116105b806107725750303b158015610772575060005460ff166001145b6107d55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105bf565b6000805460ff1916600117905580156107f8576000805461ff0019166101001790555b6108028383611073565b801561054e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b610857823383610b95565b6105d28282610f33565b610879600080516020611c9183398151915233610912565b6108eb5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20706175736500000000000000000060648201526084016105bf565b61068a6110b6565b600082815260976020526040812061090b90836110f4565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060cd805461046a90611aee565b6000338161095a8286610a11565b9050838110156109ba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105bf565b61051e8286868403610a71565b6000336104fb818585610c0f565b600081815260976020526040812061045590611100565b600082815260656020526040902060010154610a0781610dc5565b61054e8383610df1565b6001600160a01b03918216600090815260ca6020908152604080832093909416825291909152205490565b60006001600160e01b03198216637965db0b60e01b148061045557506301ffc9a760e01b6001600160e01b0319831614610455565b6001600160a01b038316610ad35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105bf565b6001600160a01b038216610b345760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105bf565b6001600160a01b03838116600081815260ca602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ba18484610a11565b90506000198114610c095781811015610bfc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105bf565b610c098484848403610a71565b50505050565b6001600160a01b038316610c735760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105bf565b6001600160a01b038216610cd55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105bf565b610ce083838361110a565b6001600160a01b038316600090815260c9602052604090205481811015610d585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105bf565b6001600160a01b03808516600081815260c9602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610db89086815260200190565b60405180910390a3610c09565b6107358133611115565b610dd9828261116e565b600082815260976020526040902061054e90826111f4565b610dfb8282611209565b600082815260976020526040902061054e9082611270565b610e1b611285565b61012d805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ebc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105bf565b610ec86000838361110a565b8060cb6000828254610eda9190611b3f565b90915550506001600160a01b038216600081815260c960209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610f935760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105bf565b610f9f8260008361110a565b6001600160a01b038216600090815260c96020526040902054818110156110135760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105bf565b6001600160a01b038316600081815260c960209081526040808320868603905560cb80548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff1661109a5760405162461bcd60e51b81526004016105bf90611b57565b6110a482826112cf565b6110ac61131d565b6105d28282611351565b6110be6113c5565b61012d805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e493390565b600061090b838361140c565b6000610455825490565b61054e838383611436565b61111f8282610912565b6105d25761112c8161149d565b6111378360206114af565b604051602001611148929190611ba2565b60408051601f198184030181529082905262461bcd60e51b82526105bf91600401611886565b6111788282610912565b6105d25760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556111b03390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061090b836001600160a01b03841661164b565b6112138282610912565b156105d25760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061090b836001600160a01b03841661169a565b61012d5460ff1661068a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105bf565b600054610100900460ff166112f65760405162461bcd60e51b81526004016105bf90611b57565b81516113099060cc906020850190611797565b50805161054e9060cd906020840190611797565b600054610100900460ff166113445760405162461bcd60e51b81526004016105bf90611b57565b61012d805460ff19169055565b600054610100900460ff166113785760405162461bcd60e51b81526004016105bf90611b57565b61138360003361178d565b6113ad7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63361178d565b6105d2600080516020611c918339815191523361178d565b61012d5460ff161561068a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105bf565b600082600001828154811061142357611423611c17565b9060005260206000200154905092915050565b61012d5460ff161561054e5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016105bf565b60606104556001600160a01b03831660145b606060006114be836002611c2d565b6114c9906002611b3f565b67ffffffffffffffff8111156114e1576114e1611980565b6040519080825280601f01601f19166020018201604052801561150b576020820181803683370190505b509050600360fc1b8160008151811061152657611526611c17565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061155557611555611c17565b60200101906001600160f81b031916908160001a9053506000611579846002611c2d565b611584906001611b3f565b90505b60018111156115fc576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106115b8576115b8611c17565b1a60f81b8282815181106115ce576115ce611c17565b60200101906001600160f81b031916908160001a90535060049490941c936115f581611c4c565b9050611587565b50831561090b5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105bf565b600081815260018301602052604081205461169257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610455565b506000610455565b600081815260018301602052604081205480156117835760006116be600183611c63565b85549091506000906116d290600190611c63565b90508181146117375760008660000182815481106116f2576116f2611c17565b906000526020600020015490508087600001848154811061171557611715611c17565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061174857611748611c7a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610455565b6000915050610455565b6105d28282610dcf565b8280546117a390611aee565b90600052602060002090601f0160209004810192826117c5576000855561180b565b82601f106117de57805160ff191683800117855561180b565b8280016001018555821561180b579182015b8281111561180b5782518255916020019190600101906117f0565b5061181792915061181b565b5090565b5b80821115611817576000815560010161181c565b60006020828403121561184257600080fd5b81356001600160e01b03198116811461090b57600080fd5b60005b8381101561187557818101518382015260200161185d565b83811115610c095750506000910152565b60208152600082518060208401526118a581604085016020870161185a565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146118d057600080fd5b919050565b600080604083850312156118e857600080fd5b6118f1836118b9565b946020939093013593505050565b60008060006060848603121561191457600080fd5b61191d846118b9565b925061192b602085016118b9565b9150604084013590509250925092565b60006020828403121561194d57600080fd5b5035919050565b6000806040838503121561196757600080fd5b82359150611977602084016118b9565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126119a757600080fd5b813567ffffffffffffffff808211156119c2576119c2611980565b604051601f8301601f19908116603f011681019082821181831017156119ea576119ea611980565b81604052838152866020858801011115611a0357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611a3657600080fd5b823567ffffffffffffffff80821115611a4e57600080fd5b611a5a86838701611996565b93506020850135915080821115611a7057600080fd5b50611a7d85828601611996565b9150509250929050565b600060208284031215611a9957600080fd5b61090b826118b9565b60008060408385031215611ab557600080fd5b50508035926020909101359150565b60008060408385031215611ad757600080fd5b611ae0836118b9565b9150611977602084016118b9565b600181811c90821680611b0257607f821691505b60208210811415611b2357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611b5257611b52611b29565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611bda81601785016020880161185a565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611c0b81602884016020880161185a565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611c4757611c47611b29565b500290565b600081611c5b57611c5b611b29565b506000190190565b600082821015611c7557611c75611b29565b500390565b634e487b7160e01b600052603160045260246000fdfe65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa2646970667358221220deb1ab9baec8227f06f0110655c2e4cfcbf5f026396a1527ee17cc11106d217d64736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x211 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0xCB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FF JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1954 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1954 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH2 0x27F PUSH2 0x861 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x1954 JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x93D JUMP JUMPDEST PUSH2 0x228 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x228 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1954 JUMP JUMPDEST PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x228 PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x228 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C91 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x455 JUMPI POP PUSH2 0x455 DUP3 PUSH2 0xA3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCC DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x1AEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x496 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0xA71 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x513 DUP6 DUP3 DUP6 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x51E DUP6 DUP6 DUP6 PUSH2 0xC0F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x544 DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x54E DUP4 DUP4 PUSH2 0xDCF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0xDF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0x5E9 DUP4 DUP4 PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x610 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C91 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x912 JUMP JUMPDEST PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x76652070617573657220726F6C6520746F20756E706175736500000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x68A PUSH2 0xE13 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B6 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x912 JUMP JUMPDEST PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D99481B5A5B9D195C881C9BDB19481D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x735 CALLER DUP3 PUSH2 0xF33 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x758 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x772 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x772 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x802 DUP4 DUP4 PUSH2 0x1073 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x857 DUP3 CALLER DUP4 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x879 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C91 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x912 JUMP JUMPDEST PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x76652070617573657220726F6C6520746F207061757365000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x68A PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x90B SWAP1 DUP4 PUSH2 0x10F4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCD DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x95A DUP3 DUP7 PUSH2 0xA11 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x51E DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x455 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA07 DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x54E DUP4 DUP4 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x455 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x455 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA1 DUP5 DUP5 PUSH2 0xA11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC09 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0xC09 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA71 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0xCE0 DUP4 DUP4 DUP4 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xDB8 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x735 DUP2 CALLER PUSH2 0x1115 JUMP JUMPDEST PUSH2 0xDD9 DUP3 DUP3 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x54E SWAP1 DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0xDFB DUP3 DUP3 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x54E SWAP1 DUP3 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0xE1B PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0xEC8 PUSH1 0x0 DUP4 DUP4 PUSH2 0x110A JUMP JUMPDEST DUP1 PUSH1 0xCB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0xF9F DUP3 PUSH1 0x0 DUP4 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1013 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0xCB DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x10A4 DUP3 DUP3 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x10AC PUSH2 0x131D JUMP JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x10BE PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xE49 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP4 DUP4 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x54E DUP4 DUP4 DUP4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x111F DUP3 DUP3 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH2 0x112C DUP2 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x1137 DUP4 PUSH1 0x20 PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1148 SWAP3 SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x5BF SWAP2 PUSH1 0x4 ADD PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1178 DUP3 DUP3 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x11B0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1213 DUP3 DUP3 PUSH2 0x912 JUMP JUMPDEST ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x169A JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1309 SWAP1 PUSH1 0xCC SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1797 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x54E SWAP1 PUSH1 0xCD SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1378 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x1383 PUSH1 0x0 CALLER PUSH2 0x178D JUMP JUMPDEST PUSH2 0x13AD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x178D JUMP JUMPDEST PUSH2 0x5D2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C91 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x178D JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x455 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x14BE DUP4 PUSH1 0x2 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x14C9 SWAP1 PUSH1 0x2 PUSH2 0x1B3F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x150B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1526 JUMPI PUSH2 0x1526 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1555 JUMPI PUSH2 0x1555 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1579 DUP5 PUSH1 0x2 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1584 SWAP1 PUSH1 0x1 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x15FC JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x15B8 JUMPI PUSH2 0x15B8 PUSH2 0x1C17 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15CE JUMPI PUSH2 0x15CE PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x15F5 DUP2 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP PUSH2 0x1587 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1692 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x455 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1783 JUMPI PUSH1 0x0 PUSH2 0x16BE PUSH1 0x1 DUP4 PUSH2 0x1C63 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x16D2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1737 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16F2 JUMPI PUSH2 0x16F2 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1715 JUMPI PUSH2 0x1715 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1748 JUMPI PUSH2 0x1748 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x455 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x455 JUMP JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0xDCF JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17A3 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x17C5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x180B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17DE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x180B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x180B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x180B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17F0 JUMP JUMPDEST POP PUSH2 0x1817 SWAP3 SWAP2 POP PUSH2 0x181B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x181C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1875 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x185D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC09 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18A5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x185A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18F1 DUP4 PUSH2 0x18B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191D DUP5 PUSH2 0x18B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x192B PUSH1 0x20 DUP6 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1977 PUSH1 0x20 DUP5 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19C2 JUMPI PUSH2 0x19C2 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19EA PUSH2 0x1980 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5A DUP7 DUP4 DUP8 ADD PUSH2 0x1996 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7D DUP6 DUP3 DUP7 ADD PUSH2 0x1996 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90B DUP3 PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE0 DUP4 PUSH2 0x18B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1977 PUSH1 0x20 DUP5 ADD PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B02 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B52 JUMPI PUSH2 0x1B52 PUSH2 0x1B29 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1BDA DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x185A JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1C0B DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x185A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C47 JUMPI PUSH2 0x1C47 PUSH2 0x1B29 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x1B29 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C75 PUSH2 0x1B29 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH6 0xD7A28E3265B3 PUSH27 0x6474929F336521B332C1681B933F6CB9F3376673440D862AA26469 PUSH17 0x667358221220DEB1AB9BAEC8227F06F011 MOD SSTORE 0xC2 0xE4 0xCF 0xCB CREATE2 CREATE 0x26 CODECOPY PUSH11 0x1527EE17CC11106D217D64 PUSH20 0x6F6C634300080C00330000000000000000000000 ","sourceMap":"1109:2851:17:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_187":{"entryPoint":null,"id":187,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_2982":{"entryPoint":null,"id":2982,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_2987":{"entryPoint":null,"id":2987,"parameterSlots":0,"returnSlots":0},"@__ERC20PresetMinterPauser_init_3011":{"entryPoint":4211,"id":3011,"parameterSlots":2,"returnSlots":0},"@__ERC20PresetMinterPauser_init_unchained_3039":{"entryPoint":4945,"id":3039,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_1149":{"entryPoint":4815,"id":1149,"parameterSlots":2,"returnSlots":0},"@__Pausable_init_unchained_998":{"entryPoint":4893,"id":998,"parameterSlots":0,"returnSlots":0},"@_add_6840":{"entryPoint":5707,"id":6840,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1690":{"entryPoint":null,"id":1690,"parameterSlots":3,"returnSlots":0},"@_approve_1625":{"entryPoint":2673,"id":1625,"parameterSlots":3,"returnSlots":0},"@_at_6974":{"entryPoint":5132,"id":6974,"parameterSlots":2,"returnSlots":1},"@_beforeTokenTransfer_1679":{"entryPoint":null,"id":1679,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1892":{"entryPoint":5174,"id":1892,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_3117":{"entryPoint":4362,"id":3117,"parameterSlots":3,"returnSlots":0},"@_burn_1580":{"entryPoint":3891,"id":1580,"parameterSlots":2,"returnSlots":0},"@_checkRole_252":{"entryPoint":3525,"id":252,"parameterSlots":1,"returnSlots":0},"@_checkRole_291":{"entryPoint":4373,"id":291,"parameterSlots":2,"returnSlots":0},"@_contains_6943":{"entryPoint":null,"id":6943,"parameterSlots":2,"returnSlots":1},"@_grantRole_114":{"entryPoint":3535,"id":114,"parameterSlots":2,"returnSlots":0},"@_grantRole_443":{"entryPoint":4462,"id":443,"parameterSlots":2,"returnSlots":0},"@_length_6957":{"entryPoint":null,"id":6957,"parameterSlots":1,"returnSlots":1},"@_mint_1508":{"entryPoint":3686,"id":1508,"parameterSlots":2,"returnSlots":0},"@_msgSender_3550":{"entryPoint":null,"id":3550,"parameterSlots":0,"returnSlots":1},"@_pause_1062":{"entryPoint":4278,"id":1062,"parameterSlots":0,"returnSlots":0},"@_remove_6924":{"entryPoint":5786,"id":6924,"parameterSlots":2,"returnSlots":1},"@_requireNotPaused_1035":{"entryPoint":5061,"id":1035,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1046":{"entryPoint":4741,"id":1046,"parameterSlots":0,"returnSlots":0},"@_revokeRole_138":{"entryPoint":3569,"id":138,"parameterSlots":2,"returnSlots":0},"@_revokeRole_474":{"entryPoint":4617,"id":474,"parameterSlots":2,"returnSlots":0},"@_setupRole_383":{"entryPoint":6029,"id":383,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_1668":{"entryPoint":2965,"id":1668,"parameterSlots":3,"returnSlots":0},"@_transfer_1451":{"entryPoint":3087,"id":1451,"parameterSlots":3,"returnSlots":0},"@_unpause_1078":{"entryPoint":3603,"id":1078,"parameterSlots":0,"returnSlots":0},"@add_7140":{"entryPoint":4596,"id":7140,"parameterSlots":2,"returnSlots":1},"@allowance_1246":{"entryPoint":2577,"id":1246,"parameterSlots":2,"returnSlots":1},"@approve_1271":{"entryPoint":1261,"id":1271,"parameterSlots":2,"returnSlots":1},"@at_7236":{"entryPoint":4340,"id":7236,"parameterSlots":2,"returnSlots":1},"@balanceOf_1203":{"entryPoint":null,"id":1203,"parameterSlots":1,"returnSlots":1},"@burnFrom_1832":{"entryPoint":2124,"id":1832,"parameterSlots":2,"returnSlots":0},"@burn_1811":{"entryPoint":1835,"id":1811,"parameterSlots":1,"returnSlots":0},"@decimals_1179":{"entryPoint":null,"id":1179,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1374":{"entryPoint":2380,"id":1374,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_306":{"entryPoint":null,"id":306,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_90":{"entryPoint":2517,"id":90,"parameterSlots":1,"returnSlots":1},"@getRoleMember_74":{"entryPoint":2291,"id":74,"parameterSlots":2,"returnSlots":1},"@grantRole_326":{"entryPoint":1321,"id":326,"parameterSlots":2,"returnSlots":0},"@hasRole_239":{"entryPoint":2322,"id":239,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1333":{"entryPoint":1494,"id":1333,"parameterSlots":2,"returnSlots":1},"@initialize_2977":{"entryPoint":1848,"id":2977,"parameterSlots":2,"returnSlots":0},"@isContract_3257":{"entryPoint":null,"id":3257,"parameterSlots":1,"returnSlots":1},"@length_7209":{"entryPoint":4352,"id":7209,"parameterSlots":1,"returnSlots":1},"@mint_3062":{"entryPoint":1676,"id":3062,"parameterSlots":2,"returnSlots":0},"@name_1159":{"entryPoint":1115,"id":1159,"parameterSlots":0,"returnSlots":1},"@pause_3079":{"entryPoint":2145,"id":3079,"parameterSlots":0,"returnSlots":0},"@paused_1023":{"entryPoint":null,"id":1023,"parameterSlots":0,"returnSlots":1},"@remove_7167":{"entryPoint":4720,"id":7167,"parameterSlots":2,"returnSlots":1},"@renounceRole_369":{"entryPoint":1363,"id":369,"parameterSlots":2,"returnSlots":0},"@revokeRole_346":{"entryPoint":2540,"id":346,"parameterSlots":2,"returnSlots":0},"@supportsInterface_220":{"entryPoint":2620,"id":220,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4363":{"entryPoint":null,"id":4363,"parameterSlots":1,"returnSlots":1},"@supportsInterface_55":{"entryPoint":1072,"id":55,"parameterSlots":1,"returnSlots":1},"@symbol_1169":{"entryPoint":2365,"id":1169,"parameterSlots":0,"returnSlots":1},"@toHexString_3793":{"entryPoint":5295,"id":3793,"parameterSlots":2,"returnSlots":1},"@toHexString_3813":{"entryPoint":5277,"id":3813,"parameterSlots":1,"returnSlots":1},"@totalSupply_1189":{"entryPoint":null,"id":1189,"parameterSlots":0,"returnSlots":1},"@transferFrom_1304":{"entryPoint":1285,"id":1304,"parameterSlots":3,"returnSlots":1},"@transfer_1228":{"entryPoint":2503,"id":1228,"parameterSlots":2,"returnSlots":1},"@unpause_3096":{"entryPoint":1528,"id":3096,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":6329,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":6550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6852,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6399,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6357,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":6459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":6484,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":6818,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6192,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":6691,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7074,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6999,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6975,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7213,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7267,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":6234,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":7244,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6894,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6953,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":7290,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7191,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6528,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15702:37","statements":[{"nodeType":"YulBlock","src":"6:3:37","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:37","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:37"},"nodeType":"YulFunctionCall","src":"131:12:37"},"nodeType":"YulExpressionStatement","src":"131:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:37"},"nodeType":"YulFunctionCall","src":"100:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:37","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:37"},"nodeType":"YulFunctionCall","src":"96:32:37"},"nodeType":"YulIf","src":"93:52:37"},{"nodeType":"YulVariableDeclaration","src":"154:36:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:37"},"nodeType":"YulFunctionCall","src":"167:23:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:37"},"nodeType":"YulFunctionCall","src":"256:12:37"},"nodeType":"YulExpressionStatement","src":"256:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:37"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:37","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:37"},"nodeType":"YulFunctionCall","src":"230:20:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:37"},"nodeType":"YulFunctionCall","src":"219:32:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:37"},"nodeType":"YulFunctionCall","src":"209:43:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:37"},"nodeType":"YulFunctionCall","src":"202:51:37"},"nodeType":"YulIf","src":"199:71:37"},{"nodeType":"YulAssignment","src":"279:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:37"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:37","type":""}],"src":"14:286:37"},{"body":{"nodeType":"YulBlock","src":"400:92:37","statements":[{"nodeType":"YulAssignment","src":"410:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:37"},"nodeType":"YulFunctionCall","src":"418:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:37"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:37"},"nodeType":"YulFunctionCall","src":"470:14:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:37"},"nodeType":"YulFunctionCall","src":"463:22:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:37"},"nodeType":"YulFunctionCall","src":"445:41:37"},"nodeType":"YulExpressionStatement","src":"445:41:37"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:37","type":""}],"src":"305:187:37"},{"body":{"nodeType":"YulBlock","src":"550:205:37","statements":[{"nodeType":"YulVariableDeclaration","src":"560:10:37","value":{"kind":"number","nodeType":"YulLiteral","src":"569:1:37","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"564:1:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"629:63:37","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"654:3:37"},{"name":"i","nodeType":"YulIdentifier","src":"659:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"650:3:37"},"nodeType":"YulFunctionCall","src":"650:11:37"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"673:3:37"},{"name":"i","nodeType":"YulIdentifier","src":"678:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"669:3:37"},"nodeType":"YulFunctionCall","src":"669:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"663:5:37"},"nodeType":"YulFunctionCall","src":"663:18:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"643:6:37"},"nodeType":"YulFunctionCall","src":"643:39:37"},"nodeType":"YulExpressionStatement","src":"643:39:37"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"590:1:37"},{"name":"length","nodeType":"YulIdentifier","src":"593:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"587:2:37"},"nodeType":"YulFunctionCall","src":"587:13:37"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"601:19:37","statements":[{"nodeType":"YulAssignment","src":"603:15:37","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"612:1:37"},{"kind":"number","nodeType":"YulLiteral","src":"615:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"608:3:37"},"nodeType":"YulFunctionCall","src":"608:10:37"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"603:1:37"}]}]},"pre":{"nodeType":"YulBlock","src":"583:3:37","statements":[]},"src":"579:113:37"},{"body":{"nodeType":"YulBlock","src":"718:31:37","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"731:3:37"},{"name":"length","nodeType":"YulIdentifier","src":"736:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:37"},"nodeType":"YulFunctionCall","src":"727:16:37"},{"kind":"number","nodeType":"YulLiteral","src":"745:1:37","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"720:6:37"},"nodeType":"YulFunctionCall","src":"720:27:37"},"nodeType":"YulExpressionStatement","src":"720:27:37"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"707:1:37"},{"name":"length","nodeType":"YulIdentifier","src":"710:6:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"704:2:37"},"nodeType":"YulFunctionCall","src":"704:13:37"},"nodeType":"YulIf","src":"701:48:37"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"528:3:37","type":""},{"name":"dst","nodeType":"YulTypedName","src":"533:3:37","type":""},{"name":"length","nodeType":"YulTypedName","src":"538:6:37","type":""}],"src":"497:258:37"},{"body":{"nodeType":"YulBlock","src":"881:262:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"898:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"909:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"891:6:37"},"nodeType":"YulFunctionCall","src":"891:21:37"},"nodeType":"YulExpressionStatement","src":"891:21:37"},{"nodeType":"YulVariableDeclaration","src":"921:27:37","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"941:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"935:5:37"},"nodeType":"YulFunctionCall","src":"935:13:37"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"925:6:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"968:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"979:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"964:3:37"},"nodeType":"YulFunctionCall","src":"964:18:37"},{"name":"length","nodeType":"YulIdentifier","src":"984:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"957:6:37"},"nodeType":"YulFunctionCall","src":"957:34:37"},"nodeType":"YulExpressionStatement","src":"957:34:37"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1026:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"1034:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1022:3:37"},"nodeType":"YulFunctionCall","src":"1022:15:37"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1043:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1054:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1039:3:37"},"nodeType":"YulFunctionCall","src":"1039:18:37"},{"name":"length","nodeType":"YulIdentifier","src":"1059:6:37"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1000:21:37"},"nodeType":"YulFunctionCall","src":"1000:66:37"},"nodeType":"YulExpressionStatement","src":"1000:66:37"},{"nodeType":"YulAssignment","src":"1075:62:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1091:9:37"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1110:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"1118:2:37","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1106:3:37"},"nodeType":"YulFunctionCall","src":"1106:15:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1127:2:37","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1123:3:37"},"nodeType":"YulFunctionCall","src":"1123:7:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1102:3:37"},"nodeType":"YulFunctionCall","src":"1102:29:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1087:3:37"},"nodeType":"YulFunctionCall","src":"1087:45:37"},{"kind":"number","nodeType":"YulLiteral","src":"1134:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1083:3:37"},"nodeType":"YulFunctionCall","src":"1083:54:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1075:4:37"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"850:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"861:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"872:4:37","type":""}],"src":"760:383:37"},{"body":{"nodeType":"YulBlock","src":"1197:124:37","statements":[{"nodeType":"YulAssignment","src":"1207:29:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1229:6:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1216:12:37"},"nodeType":"YulFunctionCall","src":"1216:20:37"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:37"}]},{"body":{"nodeType":"YulBlock","src":"1299:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1308:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1311:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1301:6:37"},"nodeType":"YulFunctionCall","src":"1301:12:37"},"nodeType":"YulExpressionStatement","src":"1301:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1258:5:37"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1269:5:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1284:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1289:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1280:3:37"},"nodeType":"YulFunctionCall","src":"1280:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"1293:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:37"},"nodeType":"YulFunctionCall","src":"1276:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1265:3:37"},"nodeType":"YulFunctionCall","src":"1265:31:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1255:2:37"},"nodeType":"YulFunctionCall","src":"1255:42:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1248:6:37"},"nodeType":"YulFunctionCall","src":"1248:50:37"},"nodeType":"YulIf","src":"1245:70:37"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1176:6:37","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1187:5:37","type":""}],"src":"1148:173:37"},{"body":{"nodeType":"YulBlock","src":"1413:167:37","statements":[{"body":{"nodeType":"YulBlock","src":"1459:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1468:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1471:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1461:6:37"},"nodeType":"YulFunctionCall","src":"1461:12:37"},"nodeType":"YulExpressionStatement","src":"1461:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1434:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"1443:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1430:3:37"},"nodeType":"YulFunctionCall","src":"1430:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"1455:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1426:3:37"},"nodeType":"YulFunctionCall","src":"1426:32:37"},"nodeType":"YulIf","src":"1423:52:37"},{"nodeType":"YulAssignment","src":"1484:39:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1513:9:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1494:18:37"},"nodeType":"YulFunctionCall","src":"1494:29:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1484:6:37"}]},{"nodeType":"YulAssignment","src":"1532:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1559:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1570:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1555:3:37"},"nodeType":"YulFunctionCall","src":"1555:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1542:12:37"},"nodeType":"YulFunctionCall","src":"1542:32:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1532:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1371:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1382:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1394:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1402:6:37","type":""}],"src":"1326:254:37"},{"body":{"nodeType":"YulBlock","src":"1686:76:37","statements":[{"nodeType":"YulAssignment","src":"1696:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1708:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1719:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1704:3:37"},"nodeType":"YulFunctionCall","src":"1704:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1696:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1738:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"1749:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1731:6:37"},"nodeType":"YulFunctionCall","src":"1731:25:37"},"nodeType":"YulExpressionStatement","src":"1731:25:37"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1655:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1666:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1677:4:37","type":""}],"src":"1585:177:37"},{"body":{"nodeType":"YulBlock","src":"1871:224:37","statements":[{"body":{"nodeType":"YulBlock","src":"1917:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1926:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1929:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1919:6:37"},"nodeType":"YulFunctionCall","src":"1919:12:37"},"nodeType":"YulExpressionStatement","src":"1919:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1892:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"1901:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1888:3:37"},"nodeType":"YulFunctionCall","src":"1888:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"1913:2:37","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1884:3:37"},"nodeType":"YulFunctionCall","src":"1884:32:37"},"nodeType":"YulIf","src":"1881:52:37"},{"nodeType":"YulAssignment","src":"1942:39:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1971:9:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1952:18:37"},"nodeType":"YulFunctionCall","src":"1952:29:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1942:6:37"}]},{"nodeType":"YulAssignment","src":"1990:48:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2023:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2034:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2019:3:37"},"nodeType":"YulFunctionCall","src":"2019:18:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2000:18:37"},"nodeType":"YulFunctionCall","src":"2000:38:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1990:6:37"}]},{"nodeType":"YulAssignment","src":"2047:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2074:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2085:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2070:3:37"},"nodeType":"YulFunctionCall","src":"2070:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2057:12:37"},"nodeType":"YulFunctionCall","src":"2057:32:37"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2047:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1821:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1832:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1844:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1852:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1860:6:37","type":""}],"src":"1767:328:37"},{"body":{"nodeType":"YulBlock","src":"2170:110:37","statements":[{"body":{"nodeType":"YulBlock","src":"2216:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2225:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2228:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2218:6:37"},"nodeType":"YulFunctionCall","src":"2218:12:37"},"nodeType":"YulExpressionStatement","src":"2218:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2191:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"2200:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2187:3:37"},"nodeType":"YulFunctionCall","src":"2187:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"2212:2:37","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2183:3:37"},"nodeType":"YulFunctionCall","src":"2183:32:37"},"nodeType":"YulIf","src":"2180:52:37"},{"nodeType":"YulAssignment","src":"2241:33:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2264:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2251:12:37"},"nodeType":"YulFunctionCall","src":"2251:23:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2241:6:37"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:37","type":""}],"src":"2100:180:37"},{"body":{"nodeType":"YulBlock","src":"2386:76:37","statements":[{"nodeType":"YulAssignment","src":"2396:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2408:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2419:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2404:3:37"},"nodeType":"YulFunctionCall","src":"2404:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2396:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2438:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"2449:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2431:6:37"},"nodeType":"YulFunctionCall","src":"2431:25:37"},"nodeType":"YulExpressionStatement","src":"2431:25:37"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2355:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2366:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2377:4:37","type":""}],"src":"2285:177:37"},{"body":{"nodeType":"YulBlock","src":"2554:167:37","statements":[{"body":{"nodeType":"YulBlock","src":"2600:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2609:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2612:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2602:6:37"},"nodeType":"YulFunctionCall","src":"2602:12:37"},"nodeType":"YulExpressionStatement","src":"2602:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2575:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"2584:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2571:3:37"},"nodeType":"YulFunctionCall","src":"2571:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"2596:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2567:3:37"},"nodeType":"YulFunctionCall","src":"2567:32:37"},"nodeType":"YulIf","src":"2564:52:37"},{"nodeType":"YulAssignment","src":"2625:33:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2648:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2635:12:37"},"nodeType":"YulFunctionCall","src":"2635:23:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2625:6:37"}]},{"nodeType":"YulAssignment","src":"2667:48:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2711:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2696:3:37"},"nodeType":"YulFunctionCall","src":"2696:18:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2677:18:37"},"nodeType":"YulFunctionCall","src":"2677:38:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2667:6:37"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2512:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2523:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2535:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2543:6:37","type":""}],"src":"2467:254:37"},{"body":{"nodeType":"YulBlock","src":"2823:87:37","statements":[{"nodeType":"YulAssignment","src":"2833:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2845:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2856:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2841:3:37"},"nodeType":"YulFunctionCall","src":"2841:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2833:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2875:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2890:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"2898:4:37","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2886:3:37"},"nodeType":"YulFunctionCall","src":"2886:17:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2868:6:37"},"nodeType":"YulFunctionCall","src":"2868:36:37"},"nodeType":"YulExpressionStatement","src":"2868:36:37"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2792:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2803:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2814:4:37","type":""}],"src":"2726:184:37"},{"body":{"nodeType":"YulBlock","src":"2985:110:37","statements":[{"body":{"nodeType":"YulBlock","src":"3031:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3040:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3043:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3033:6:37"},"nodeType":"YulFunctionCall","src":"3033:12:37"},"nodeType":"YulExpressionStatement","src":"3033:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3006:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"3015:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3002:3:37"},"nodeType":"YulFunctionCall","src":"3002:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"3027:2:37","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2998:3:37"},"nodeType":"YulFunctionCall","src":"2998:32:37"},"nodeType":"YulIf","src":"2995:52:37"},{"nodeType":"YulAssignment","src":"3056:33:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3079:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3066:12:37"},"nodeType":"YulFunctionCall","src":"3066:23:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3056:6:37"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2951:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2962:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2974:6:37","type":""}],"src":"2915:180:37"},{"body":{"nodeType":"YulBlock","src":"3132:95:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3149:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3156:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3161:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3152:3:37"},"nodeType":"YulFunctionCall","src":"3152:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3142:6:37"},"nodeType":"YulFunctionCall","src":"3142:31:37"},"nodeType":"YulExpressionStatement","src":"3142:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3189:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3192:4:37","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:37"},"nodeType":"YulFunctionCall","src":"3182:15:37"},"nodeType":"YulExpressionStatement","src":"3182:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3213:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3216:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3206:6:37"},"nodeType":"YulFunctionCall","src":"3206:15:37"},"nodeType":"YulExpressionStatement","src":"3206:15:37"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3100:127:37"},{"body":{"nodeType":"YulBlock","src":"3285:666:37","statements":[{"body":{"nodeType":"YulBlock","src":"3334:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3343:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3346:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3336:6:37"},"nodeType":"YulFunctionCall","src":"3336:12:37"},"nodeType":"YulExpressionStatement","src":"3336:12:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3313:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"3321:4:37","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3309:3:37"},"nodeType":"YulFunctionCall","src":"3309:17:37"},{"name":"end","nodeType":"YulIdentifier","src":"3328:3:37"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3305:3:37"},"nodeType":"YulFunctionCall","src":"3305:27:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3298:6:37"},"nodeType":"YulFunctionCall","src":"3298:35:37"},"nodeType":"YulIf","src":"3295:55:37"},{"nodeType":"YulVariableDeclaration","src":"3359:30:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3382:6:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3369:12:37"},"nodeType":"YulFunctionCall","src":"3369:20:37"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3363:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3398:28:37","value":{"kind":"number","nodeType":"YulLiteral","src":"3408:18:37","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3402:2:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"3449:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3451:16:37"},"nodeType":"YulFunctionCall","src":"3451:18:37"},"nodeType":"YulExpressionStatement","src":"3451:18:37"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3441:2:37"},{"name":"_2","nodeType":"YulIdentifier","src":"3445:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3438:2:37"},"nodeType":"YulFunctionCall","src":"3438:10:37"},"nodeType":"YulIf","src":"3435:36:37"},{"nodeType":"YulVariableDeclaration","src":"3480:17:37","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3494:2:37","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3490:3:37"},"nodeType":"YulFunctionCall","src":"3490:7:37"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3484:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3506:23:37","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3526:2:37","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3520:5:37"},"nodeType":"YulFunctionCall","src":"3520:9:37"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3510:6:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3538:71:37","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3560:6:37"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3584:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"3588:4:37","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3580:3:37"},"nodeType":"YulFunctionCall","src":"3580:13:37"},{"name":"_3","nodeType":"YulIdentifier","src":"3595:2:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3576:3:37"},"nodeType":"YulFunctionCall","src":"3576:22:37"},{"kind":"number","nodeType":"YulLiteral","src":"3600:2:37","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3572:3:37"},"nodeType":"YulFunctionCall","src":"3572:31:37"},{"name":"_3","nodeType":"YulIdentifier","src":"3605:2:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3568:3:37"},"nodeType":"YulFunctionCall","src":"3568:40:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3556:3:37"},"nodeType":"YulFunctionCall","src":"3556:53:37"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3542:10:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"3668:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3670:16:37"},"nodeType":"YulFunctionCall","src":"3670:18:37"},"nodeType":"YulExpressionStatement","src":"3670:18:37"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3627:10:37"},{"name":"_2","nodeType":"YulIdentifier","src":"3639:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3624:2:37"},"nodeType":"YulFunctionCall","src":"3624:18:37"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3647:10:37"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3659:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3644:2:37"},"nodeType":"YulFunctionCall","src":"3644:22:37"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3621:2:37"},"nodeType":"YulFunctionCall","src":"3621:46:37"},"nodeType":"YulIf","src":"3618:72:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3706:2:37","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3710:10:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3699:6:37"},"nodeType":"YulFunctionCall","src":"3699:22:37"},"nodeType":"YulExpressionStatement","src":"3699:22:37"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3737:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"3745:2:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3730:6:37"},"nodeType":"YulFunctionCall","src":"3730:18:37"},"nodeType":"YulExpressionStatement","src":"3730:18:37"},{"body":{"nodeType":"YulBlock","src":"3796:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3805:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3808:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3798:6:37"},"nodeType":"YulFunctionCall","src":"3798:12:37"},"nodeType":"YulExpressionStatement","src":"3798:12:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3771:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"3779:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:37"},"nodeType":"YulFunctionCall","src":"3767:15:37"},{"kind":"number","nodeType":"YulLiteral","src":"3784:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3763:3:37"},"nodeType":"YulFunctionCall","src":"3763:26:37"},{"name":"end","nodeType":"YulIdentifier","src":"3791:3:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3760:2:37"},"nodeType":"YulFunctionCall","src":"3760:35:37"},"nodeType":"YulIf","src":"3757:55:37"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3838:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"3846:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3834:3:37"},"nodeType":"YulFunctionCall","src":"3834:17:37"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3857:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"3865:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3853:3:37"},"nodeType":"YulFunctionCall","src":"3853:17:37"},{"name":"_1","nodeType":"YulIdentifier","src":"3872:2:37"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3821:12:37"},"nodeType":"YulFunctionCall","src":"3821:54:37"},"nodeType":"YulExpressionStatement","src":"3821:54:37"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3899:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"3907:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3895:3:37"},"nodeType":"YulFunctionCall","src":"3895:15:37"},{"kind":"number","nodeType":"YulLiteral","src":"3912:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3891:3:37"},"nodeType":"YulFunctionCall","src":"3891:26:37"},{"kind":"number","nodeType":"YulLiteral","src":"3919:1:37","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3884:6:37"},"nodeType":"YulFunctionCall","src":"3884:37:37"},"nodeType":"YulExpressionStatement","src":"3884:37:37"},{"nodeType":"YulAssignment","src":"3930:15:37","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3939:6:37"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3930:5:37"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3259:6:37","type":""},{"name":"end","nodeType":"YulTypedName","src":"3267:3:37","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3275:5:37","type":""}],"src":"3232:719:37"},{"body":{"nodeType":"YulBlock","src":"4063:436:37","statements":[{"body":{"nodeType":"YulBlock","src":"4109:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4118:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4111:6:37"},"nodeType":"YulFunctionCall","src":"4111:12:37"},"nodeType":"YulExpressionStatement","src":"4111:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4084:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"4093:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4080:3:37"},"nodeType":"YulFunctionCall","src":"4080:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"4105:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4076:3:37"},"nodeType":"YulFunctionCall","src":"4076:32:37"},"nodeType":"YulIf","src":"4073:52:37"},{"nodeType":"YulVariableDeclaration","src":"4134:37:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4161:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4148:12:37"},"nodeType":"YulFunctionCall","src":"4148:23:37"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4138:6:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4180:28:37","value":{"kind":"number","nodeType":"YulLiteral","src":"4190:18:37","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4184:2:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"4235:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4244:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4247:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4237:6:37"},"nodeType":"YulFunctionCall","src":"4237:12:37"},"nodeType":"YulExpressionStatement","src":"4237:12:37"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4223:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"4231:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4220:2:37"},"nodeType":"YulFunctionCall","src":"4220:14:37"},"nodeType":"YulIf","src":"4217:34:37"},{"nodeType":"YulAssignment","src":"4260:60:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:37"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:37"},"nodeType":"YulFunctionCall","src":"4288:22:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:37"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4270:17:37"},"nodeType":"YulFunctionCall","src":"4270:50:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4260:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"4329:48:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4362:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4373:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4358:3:37"},"nodeType":"YulFunctionCall","src":"4358:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4345:12:37"},"nodeType":"YulFunctionCall","src":"4345:32:37"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4333:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"4406:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4415:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4418:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4408:6:37"},"nodeType":"YulFunctionCall","src":"4408:12:37"},"nodeType":"YulExpressionStatement","src":"4408:12:37"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4392:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"4402:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4389:2:37"},"nodeType":"YulFunctionCall","src":"4389:16:37"},"nodeType":"YulIf","src":"4386:36:37"},{"nodeType":"YulAssignment","src":"4431:62:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4463:9:37"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4474:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4459:3:37"},"nodeType":"YulFunctionCall","src":"4459:24:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4485:7:37"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4441:17:37"},"nodeType":"YulFunctionCall","src":"4441:52:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4431:6:37"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4021:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4032:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4044:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4052:6:37","type":""}],"src":"3956:543:37"},{"body":{"nodeType":"YulBlock","src":"4574:116:37","statements":[{"body":{"nodeType":"YulBlock","src":"4620:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4629:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4632:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4622:6:37"},"nodeType":"YulFunctionCall","src":"4622:12:37"},"nodeType":"YulExpressionStatement","src":"4622:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4595:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"4604:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4591:3:37"},"nodeType":"YulFunctionCall","src":"4591:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"4616:2:37","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4587:3:37"},"nodeType":"YulFunctionCall","src":"4587:32:37"},"nodeType":"YulIf","src":"4584:52:37"},{"nodeType":"YulAssignment","src":"4645:39:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4674:9:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4655:18:37"},"nodeType":"YulFunctionCall","src":"4655:29:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4645:6:37"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4540:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4551:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4563:6:37","type":""}],"src":"4504:186:37"},{"body":{"nodeType":"YulBlock","src":"4782:161:37","statements":[{"body":{"nodeType":"YulBlock","src":"4828:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4837:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4840:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4830:6:37"},"nodeType":"YulFunctionCall","src":"4830:12:37"},"nodeType":"YulExpressionStatement","src":"4830:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4803:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"4812:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4799:3:37"},"nodeType":"YulFunctionCall","src":"4799:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"4824:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4795:3:37"},"nodeType":"YulFunctionCall","src":"4795:32:37"},"nodeType":"YulIf","src":"4792:52:37"},{"nodeType":"YulAssignment","src":"4853:33:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4876:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4863:12:37"},"nodeType":"YulFunctionCall","src":"4863:23:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4853:6:37"}]},{"nodeType":"YulAssignment","src":"4895:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4922:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"4933:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4918:3:37"},"nodeType":"YulFunctionCall","src":"4918:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4905:12:37"},"nodeType":"YulFunctionCall","src":"4905:32:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4895:6:37"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4740:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4751:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4763:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4771:6:37","type":""}],"src":"4695:248:37"},{"body":{"nodeType":"YulBlock","src":"5049:102:37","statements":[{"nodeType":"YulAssignment","src":"5059:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5071:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5082:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5067:3:37"},"nodeType":"YulFunctionCall","src":"5067:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5059:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5101:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5116:6:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5132:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5137:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5128:3:37"},"nodeType":"YulFunctionCall","src":"5128:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"5141:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5124:3:37"},"nodeType":"YulFunctionCall","src":"5124:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5112:3:37"},"nodeType":"YulFunctionCall","src":"5112:32:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5094:6:37"},"nodeType":"YulFunctionCall","src":"5094:51:37"},"nodeType":"YulExpressionStatement","src":"5094:51:37"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5018:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5029:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5040:4:37","type":""}],"src":"4948:203:37"},{"body":{"nodeType":"YulBlock","src":"5243:173:37","statements":[{"body":{"nodeType":"YulBlock","src":"5289:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5298:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5301:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5291:6:37"},"nodeType":"YulFunctionCall","src":"5291:12:37"},"nodeType":"YulExpressionStatement","src":"5291:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5264:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"5273:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5260:3:37"},"nodeType":"YulFunctionCall","src":"5260:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"5285:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5256:3:37"},"nodeType":"YulFunctionCall","src":"5256:32:37"},"nodeType":"YulIf","src":"5253:52:37"},{"nodeType":"YulAssignment","src":"5314:39:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5343:9:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5324:18:37"},"nodeType":"YulFunctionCall","src":"5324:29:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5314:6:37"}]},{"nodeType":"YulAssignment","src":"5362:48:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5395:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5406:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5391:3:37"},"nodeType":"YulFunctionCall","src":"5391:18:37"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5372:18:37"},"nodeType":"YulFunctionCall","src":"5372:38:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5362:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5201:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5212:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5224:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5232:6:37","type":""}],"src":"5156:260:37"},{"body":{"nodeType":"YulBlock","src":"5476:325:37","statements":[{"nodeType":"YulAssignment","src":"5486:22:37","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5500:1:37","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5503:4:37"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5496:3:37"},"nodeType":"YulFunctionCall","src":"5496:12:37"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5486:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"5517:38:37","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5547:4:37"},{"kind":"number","nodeType":"YulLiteral","src":"5553:1:37","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5543:3:37"},"nodeType":"YulFunctionCall","src":"5543:12:37"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5521:18:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"5594:31:37","statements":[{"nodeType":"YulAssignment","src":"5596:27:37","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5610:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"5618:4:37","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5606:3:37"},"nodeType":"YulFunctionCall","src":"5606:17:37"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5596:6:37"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5574:18:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5567:6:37"},"nodeType":"YulFunctionCall","src":"5567:26:37"},"nodeType":"YulIf","src":"5564:61:37"},{"body":{"nodeType":"YulBlock","src":"5684:111:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5705:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5712:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5717:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5708:3:37"},"nodeType":"YulFunctionCall","src":"5708:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5698:6:37"},"nodeType":"YulFunctionCall","src":"5698:31:37"},"nodeType":"YulExpressionStatement","src":"5698:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5749:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5752:4:37","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5742:6:37"},"nodeType":"YulFunctionCall","src":"5742:15:37"},"nodeType":"YulExpressionStatement","src":"5742:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5777:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5780:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5770:6:37"},"nodeType":"YulFunctionCall","src":"5770:15:37"},"nodeType":"YulExpressionStatement","src":"5770:15:37"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5640:18:37"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5663:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:37","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5660:2:37"},"nodeType":"YulFunctionCall","src":"5660:14:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5637:2:37"},"nodeType":"YulFunctionCall","src":"5637:38:37"},"nodeType":"YulIf","src":"5634:161:37"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5456:4:37","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5465:6:37","type":""}],"src":"5421:380:37"},{"body":{"nodeType":"YulBlock","src":"5980:237:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5997:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6008:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5990:6:37"},"nodeType":"YulFunctionCall","src":"5990:21:37"},"nodeType":"YulExpressionStatement","src":"5990:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6031:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6042:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6027:3:37"},"nodeType":"YulFunctionCall","src":"6027:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"6047:2:37","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6020:6:37"},"nodeType":"YulFunctionCall","src":"6020:30:37"},"nodeType":"YulExpressionStatement","src":"6020:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6070:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6081:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6066:3:37"},"nodeType":"YulFunctionCall","src":"6066:18:37"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"6086:34:37","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6059:6:37"},"nodeType":"YulFunctionCall","src":"6059:62:37"},"nodeType":"YulExpressionStatement","src":"6059:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6141:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6152:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:37"},"nodeType":"YulFunctionCall","src":"6137:18:37"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"6157:17:37","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6130:6:37"},"nodeType":"YulFunctionCall","src":"6130:45:37"},"nodeType":"YulExpressionStatement","src":"6130:45:37"},{"nodeType":"YulAssignment","src":"6184:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6207:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:37"},"nodeType":"YulFunctionCall","src":"6192:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6184:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5957:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5971:4:37","type":""}],"src":"5806:411:37"},{"body":{"nodeType":"YulBlock","src":"6254:95:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6271:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6278:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6283:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6274:3:37"},"nodeType":"YulFunctionCall","src":"6274:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6264:6:37"},"nodeType":"YulFunctionCall","src":"6264:31:37"},"nodeType":"YulExpressionStatement","src":"6264:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6311:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6314:4:37","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6304:6:37"},"nodeType":"YulFunctionCall","src":"6304:15:37"},"nodeType":"YulExpressionStatement","src":"6304:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6335:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6338:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6328:6:37"},"nodeType":"YulFunctionCall","src":"6328:15:37"},"nodeType":"YulExpressionStatement","src":"6328:15:37"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6222:127:37"},{"body":{"nodeType":"YulBlock","src":"6402:80:37","statements":[{"body":{"nodeType":"YulBlock","src":"6429:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6431:16:37"},"nodeType":"YulFunctionCall","src":"6431:18:37"},"nodeType":"YulExpressionStatement","src":"6431:18:37"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6418:1:37"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6425:1:37"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6421:3:37"},"nodeType":"YulFunctionCall","src":"6421:6:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6415:2:37"},"nodeType":"YulFunctionCall","src":"6415:13:37"},"nodeType":"YulIf","src":"6412:39:37"},{"nodeType":"YulAssignment","src":"6460:16:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6471:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"6474:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6467:3:37"},"nodeType":"YulFunctionCall","src":"6467:9:37"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6460:3:37"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6385:1:37","type":""},{"name":"y","nodeType":"YulTypedName","src":"6388:1:37","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6394:3:37","type":""}],"src":"6354:128:37"},{"body":{"nodeType":"YulBlock","src":"6661:247:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6678:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6689:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6671:6:37"},"nodeType":"YulFunctionCall","src":"6671:21:37"},"nodeType":"YulExpressionStatement","src":"6671:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6712:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6723:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6708:3:37"},"nodeType":"YulFunctionCall","src":"6708:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"6728:2:37","type":"","value":"57"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6701:6:37"},"nodeType":"YulFunctionCall","src":"6701:30:37"},"nodeType":"YulExpressionStatement","src":"6701:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6751:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6762:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6747:3:37"},"nodeType":"YulFunctionCall","src":"6747:18:37"},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d757374206861","kind":"string","nodeType":"YulLiteral","src":"6767:34:37","type":"","value":"ERC20PresetMinterPauser: must ha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6740:6:37"},"nodeType":"YulFunctionCall","src":"6740:62:37"},"nodeType":"YulExpressionStatement","src":"6740:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6822:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6833:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6818:3:37"},"nodeType":"YulFunctionCall","src":"6818:18:37"},{"hexValue":"76652070617573657220726f6c6520746f20756e7061757365","kind":"string","nodeType":"YulLiteral","src":"6838:27:37","type":"","value":"ve pauser role to unpause"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6811:6:37"},"nodeType":"YulFunctionCall","src":"6811:55:37"},"nodeType":"YulExpressionStatement","src":"6811:55:37"},{"nodeType":"YulAssignment","src":"6875:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6887:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6898:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6883:3:37"},"nodeType":"YulFunctionCall","src":"6883:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6875:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6638:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6652:4:37","type":""}],"src":"6487:421:37"},{"body":{"nodeType":"YulBlock","src":"7087:244:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7104:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7115:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7097:6:37"},"nodeType":"YulFunctionCall","src":"7097:21:37"},"nodeType":"YulExpressionStatement","src":"7097:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7138:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7149:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7134:3:37"},"nodeType":"YulFunctionCall","src":"7134:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"7154:2:37","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7127:6:37"},"nodeType":"YulFunctionCall","src":"7127:30:37"},"nodeType":"YulExpressionStatement","src":"7127:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7177:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7188:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7173:3:37"},"nodeType":"YulFunctionCall","src":"7173:18:37"},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d757374206861","kind":"string","nodeType":"YulLiteral","src":"7193:34:37","type":"","value":"ERC20PresetMinterPauser: must ha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7166:6:37"},"nodeType":"YulFunctionCall","src":"7166:62:37"},"nodeType":"YulExpressionStatement","src":"7166:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7248:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7259:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7244:3:37"},"nodeType":"YulFunctionCall","src":"7244:18:37"},{"hexValue":"7665206d696e74657220726f6c6520746f206d696e74","kind":"string","nodeType":"YulLiteral","src":"7264:24:37","type":"","value":"ve minter role to mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7237:6:37"},"nodeType":"YulFunctionCall","src":"7237:52:37"},"nodeType":"YulExpressionStatement","src":"7237:52:37"},{"nodeType":"YulAssignment","src":"7298:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7310:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7321:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7306:3:37"},"nodeType":"YulFunctionCall","src":"7306:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7298:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7064:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7078:4:37","type":""}],"src":"6913:418:37"},{"body":{"nodeType":"YulBlock","src":"7510:236:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7527:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7538:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7520:6:37"},"nodeType":"YulFunctionCall","src":"7520:21:37"},"nodeType":"YulExpressionStatement","src":"7520:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7561:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7572:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7557:3:37"},"nodeType":"YulFunctionCall","src":"7557:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"7577:2:37","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7550:6:37"},"nodeType":"YulFunctionCall","src":"7550:30:37"},"nodeType":"YulExpressionStatement","src":"7550:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7600:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7611:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7596:3:37"},"nodeType":"YulFunctionCall","src":"7596:18:37"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"7616:34:37","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7589:6:37"},"nodeType":"YulFunctionCall","src":"7589:62:37"},"nodeType":"YulExpressionStatement","src":"7589:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7671:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7682:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7667:3:37"},"nodeType":"YulFunctionCall","src":"7667:18:37"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"7687:16:37","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7660:6:37"},"nodeType":"YulFunctionCall","src":"7660:44:37"},"nodeType":"YulExpressionStatement","src":"7660:44:37"},{"nodeType":"YulAssignment","src":"7713:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7725:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7736:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7721:3:37"},"nodeType":"YulFunctionCall","src":"7721:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7713:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7487:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7501:4:37","type":""}],"src":"7336:410:37"},{"body":{"nodeType":"YulBlock","src":"7858:87:37","statements":[{"nodeType":"YulAssignment","src":"7868:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7880:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7891:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7876:3:37"},"nodeType":"YulFunctionCall","src":"7876:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7868:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7910:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7925:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"7933:4:37","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7921:3:37"},"nodeType":"YulFunctionCall","src":"7921:17:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7903:6:37"},"nodeType":"YulFunctionCall","src":"7903:36:37"},"nodeType":"YulExpressionStatement","src":"7903:36:37"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7827:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7838:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7849:4:37","type":""}],"src":"7751:194:37"},{"body":{"nodeType":"YulBlock","src":"8124:245:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8141:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8152:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8134:6:37"},"nodeType":"YulFunctionCall","src":"8134:21:37"},"nodeType":"YulExpressionStatement","src":"8134:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8175:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8186:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8171:3:37"},"nodeType":"YulFunctionCall","src":"8171:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"8191:2:37","type":"","value":"55"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8164:6:37"},"nodeType":"YulFunctionCall","src":"8164:30:37"},"nodeType":"YulExpressionStatement","src":"8164:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8214:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8225:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8210:3:37"},"nodeType":"YulFunctionCall","src":"8210:18:37"},{"hexValue":"45524332305072657365744d696e7465725061757365723a206d757374206861","kind":"string","nodeType":"YulLiteral","src":"8230:34:37","type":"","value":"ERC20PresetMinterPauser: must ha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8203:6:37"},"nodeType":"YulFunctionCall","src":"8203:62:37"},"nodeType":"YulExpressionStatement","src":"8203:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8285:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8296:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8281:3:37"},"nodeType":"YulFunctionCall","src":"8281:18:37"},{"hexValue":"76652070617573657220726f6c6520746f207061757365","kind":"string","nodeType":"YulLiteral","src":"8301:25:37","type":"","value":"ve pauser role to pause"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8274:6:37"},"nodeType":"YulFunctionCall","src":"8274:53:37"},"nodeType":"YulExpressionStatement","src":"8274:53:37"},{"nodeType":"YulAssignment","src":"8336:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8348:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8359:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8344:3:37"},"nodeType":"YulFunctionCall","src":"8344:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8336:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8101:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8115:4:37","type":""}],"src":"7950:419:37"},{"body":{"nodeType":"YulBlock","src":"8548:227:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8565:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8576:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8558:6:37"},"nodeType":"YulFunctionCall","src":"8558:21:37"},"nodeType":"YulExpressionStatement","src":"8558:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8599:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8610:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8595:3:37"},"nodeType":"YulFunctionCall","src":"8595:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"8615:2:37","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8588:6:37"},"nodeType":"YulFunctionCall","src":"8588:30:37"},"nodeType":"YulExpressionStatement","src":"8588:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8638:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8649:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8634:3:37"},"nodeType":"YulFunctionCall","src":"8634:18:37"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"8654:34:37","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8627:6:37"},"nodeType":"YulFunctionCall","src":"8627:62:37"},"nodeType":"YulExpressionStatement","src":"8627:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8709:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8720:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8705:3:37"},"nodeType":"YulFunctionCall","src":"8705:18:37"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"8725:7:37","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8698:6:37"},"nodeType":"YulFunctionCall","src":"8698:35:37"},"nodeType":"YulExpressionStatement","src":"8698:35:37"},{"nodeType":"YulAssignment","src":"8742:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8754:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8765:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8750:3:37"},"nodeType":"YulFunctionCall","src":"8750:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8742:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8525:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8539:4:37","type":""}],"src":"8374:401:37"},{"body":{"nodeType":"YulBlock","src":"8954:226:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8971:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8982:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8964:6:37"},"nodeType":"YulFunctionCall","src":"8964:21:37"},"nodeType":"YulExpressionStatement","src":"8964:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9005:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9016:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9001:3:37"},"nodeType":"YulFunctionCall","src":"9001:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"9021:2:37","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8994:6:37"},"nodeType":"YulFunctionCall","src":"8994:30:37"},"nodeType":"YulExpressionStatement","src":"8994:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9044:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9055:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9040:3:37"},"nodeType":"YulFunctionCall","src":"9040:18:37"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"9060:34:37","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9033:6:37"},"nodeType":"YulFunctionCall","src":"9033:62:37"},"nodeType":"YulExpressionStatement","src":"9033:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9115:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9126:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9111:3:37"},"nodeType":"YulFunctionCall","src":"9111:18:37"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"9131:6:37","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9104:6:37"},"nodeType":"YulFunctionCall","src":"9104:34:37"},"nodeType":"YulExpressionStatement","src":"9104:34:37"},{"nodeType":"YulAssignment","src":"9147:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9159:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9170:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9155:3:37"},"nodeType":"YulFunctionCall","src":"9155:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9147:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8931:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8945:4:37","type":""}],"src":"8780:400:37"},{"body":{"nodeType":"YulBlock","src":"9359:224:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9376:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9387:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9369:6:37"},"nodeType":"YulFunctionCall","src":"9369:21:37"},"nodeType":"YulExpressionStatement","src":"9369:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9410:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9421:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9406:3:37"},"nodeType":"YulFunctionCall","src":"9406:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"9426:2:37","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9399:6:37"},"nodeType":"YulFunctionCall","src":"9399:30:37"},"nodeType":"YulExpressionStatement","src":"9399:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9449:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9460:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9445:3:37"},"nodeType":"YulFunctionCall","src":"9445:18:37"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"9465:34:37","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9438:6:37"},"nodeType":"YulFunctionCall","src":"9438:62:37"},"nodeType":"YulExpressionStatement","src":"9438:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9520:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9531:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9516:3:37"},"nodeType":"YulFunctionCall","src":"9516:18:37"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"9536:4:37","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9509:6:37"},"nodeType":"YulFunctionCall","src":"9509:32:37"},"nodeType":"YulExpressionStatement","src":"9509:32:37"},{"nodeType":"YulAssignment","src":"9550:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9562:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9573:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9558:3:37"},"nodeType":"YulFunctionCall","src":"9558:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9550:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9336:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9350:4:37","type":""}],"src":"9185:398:37"},{"body":{"nodeType":"YulBlock","src":"9762:179:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9779:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9790:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9772:6:37"},"nodeType":"YulFunctionCall","src":"9772:21:37"},"nodeType":"YulExpressionStatement","src":"9772:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9813:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9824:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9809:3:37"},"nodeType":"YulFunctionCall","src":"9809:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"9829:2:37","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9802:6:37"},"nodeType":"YulFunctionCall","src":"9802:30:37"},"nodeType":"YulExpressionStatement","src":"9802:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9852:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9863:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9848:3:37"},"nodeType":"YulFunctionCall","src":"9848:18:37"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9868:31:37","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9841:6:37"},"nodeType":"YulFunctionCall","src":"9841:59:37"},"nodeType":"YulExpressionStatement","src":"9841:59:37"},{"nodeType":"YulAssignment","src":"9909:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9921:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9932:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9917:3:37"},"nodeType":"YulFunctionCall","src":"9917:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9909:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9739:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9753:4:37","type":""}],"src":"9588:353:37"},{"body":{"nodeType":"YulBlock","src":"10120:227:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10137:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10148:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10130:6:37"},"nodeType":"YulFunctionCall","src":"10130:21:37"},"nodeType":"YulExpressionStatement","src":"10130:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10171:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10167:3:37"},"nodeType":"YulFunctionCall","src":"10167:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"10187:2:37","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10160:6:37"},"nodeType":"YulFunctionCall","src":"10160:30:37"},"nodeType":"YulExpressionStatement","src":"10160:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10210:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10221:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10206:3:37"},"nodeType":"YulFunctionCall","src":"10206:18:37"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10226:34:37","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10199:6:37"},"nodeType":"YulFunctionCall","src":"10199:62:37"},"nodeType":"YulExpressionStatement","src":"10199:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10281:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10292:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10277:3:37"},"nodeType":"YulFunctionCall","src":"10277:18:37"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10297:7:37","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10270:6:37"},"nodeType":"YulFunctionCall","src":"10270:35:37"},"nodeType":"YulExpressionStatement","src":"10270:35:37"},{"nodeType":"YulAssignment","src":"10314:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10326:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10337:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10322:3:37"},"nodeType":"YulFunctionCall","src":"10322:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10314:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10097:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10111:4:37","type":""}],"src":"9946:401:37"},{"body":{"nodeType":"YulBlock","src":"10526:225:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10543:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10554:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10536:6:37"},"nodeType":"YulFunctionCall","src":"10536:21:37"},"nodeType":"YulExpressionStatement","src":"10536:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10577:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10588:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10573:3:37"},"nodeType":"YulFunctionCall","src":"10573:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"10593:2:37","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10566:6:37"},"nodeType":"YulFunctionCall","src":"10566:30:37"},"nodeType":"YulExpressionStatement","src":"10566:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10616:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10627:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10612:3:37"},"nodeType":"YulFunctionCall","src":"10612:18:37"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"10632:34:37","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10605:6:37"},"nodeType":"YulFunctionCall","src":"10605:62:37"},"nodeType":"YulExpressionStatement","src":"10605:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10687:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10698:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10683:3:37"},"nodeType":"YulFunctionCall","src":"10683:18:37"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"10703:5:37","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10676:6:37"},"nodeType":"YulFunctionCall","src":"10676:33:37"},"nodeType":"YulExpressionStatement","src":"10676:33:37"},{"nodeType":"YulAssignment","src":"10718:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10730:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10741:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10726:3:37"},"nodeType":"YulFunctionCall","src":"10726:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10718:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10503:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10517:4:37","type":""}],"src":"10352:399:37"},{"body":{"nodeType":"YulBlock","src":"10930:228:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10947:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10958:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10940:6:37"},"nodeType":"YulFunctionCall","src":"10940:21:37"},"nodeType":"YulExpressionStatement","src":"10940:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10981:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10992:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10977:3:37"},"nodeType":"YulFunctionCall","src":"10977:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"10997:2:37","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10970:6:37"},"nodeType":"YulFunctionCall","src":"10970:30:37"},"nodeType":"YulExpressionStatement","src":"10970:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11020:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11031:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11016:3:37"},"nodeType":"YulFunctionCall","src":"11016:18:37"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"11036:34:37","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11009:6:37"},"nodeType":"YulFunctionCall","src":"11009:62:37"},"nodeType":"YulExpressionStatement","src":"11009:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11091:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11102:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11087:3:37"},"nodeType":"YulFunctionCall","src":"11087:18:37"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"11107:8:37","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11080:6:37"},"nodeType":"YulFunctionCall","src":"11080:36:37"},"nodeType":"YulExpressionStatement","src":"11080:36:37"},{"nodeType":"YulAssignment","src":"11125:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11137:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11148:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11133:3:37"},"nodeType":"YulFunctionCall","src":"11133:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11125:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10907:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10921:4:37","type":""}],"src":"10756:402:37"},{"body":{"nodeType":"YulBlock","src":"11337:181:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11354:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11365:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11347:6:37"},"nodeType":"YulFunctionCall","src":"11347:21:37"},"nodeType":"YulExpressionStatement","src":"11347:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11388:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11399:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11384:3:37"},"nodeType":"YulFunctionCall","src":"11384:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"11404:2:37","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11377:6:37"},"nodeType":"YulFunctionCall","src":"11377:30:37"},"nodeType":"YulExpressionStatement","src":"11377:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11427:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11438:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11423:3:37"},"nodeType":"YulFunctionCall","src":"11423:18:37"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"11443:33:37","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11416:6:37"},"nodeType":"YulFunctionCall","src":"11416:61:37"},"nodeType":"YulExpressionStatement","src":"11416:61:37"},{"nodeType":"YulAssignment","src":"11486:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11498:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11509:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11494:3:37"},"nodeType":"YulFunctionCall","src":"11494:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11486:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11314:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11328:4:37","type":""}],"src":"11163:355:37"},{"body":{"nodeType":"YulBlock","src":"11697:223:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11714:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11725:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11707:6:37"},"nodeType":"YulFunctionCall","src":"11707:21:37"},"nodeType":"YulExpressionStatement","src":"11707:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11748:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11759:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11744:3:37"},"nodeType":"YulFunctionCall","src":"11744:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"11764:2:37","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11737:6:37"},"nodeType":"YulFunctionCall","src":"11737:30:37"},"nodeType":"YulExpressionStatement","src":"11737:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11787:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11798:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11783:3:37"},"nodeType":"YulFunctionCall","src":"11783:18:37"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"11803:34:37","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11776:6:37"},"nodeType":"YulFunctionCall","src":"11776:62:37"},"nodeType":"YulExpressionStatement","src":"11776:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11858:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11869:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11854:3:37"},"nodeType":"YulFunctionCall","src":"11854:18:37"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"11874:3:37","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11847:6:37"},"nodeType":"YulFunctionCall","src":"11847:31:37"},"nodeType":"YulExpressionStatement","src":"11847:31:37"},{"nodeType":"YulAssignment","src":"11887:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11899:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"11910:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11895:3:37"},"nodeType":"YulFunctionCall","src":"11895:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11887:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11674:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11688:4:37","type":""}],"src":"11523:397:37"},{"body":{"nodeType":"YulBlock","src":"12099:224:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12116:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12127:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12109:6:37"},"nodeType":"YulFunctionCall","src":"12109:21:37"},"nodeType":"YulExpressionStatement","src":"12109:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12150:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12161:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12146:3:37"},"nodeType":"YulFunctionCall","src":"12146:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"12166:2:37","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12139:6:37"},"nodeType":"YulFunctionCall","src":"12139:30:37"},"nodeType":"YulExpressionStatement","src":"12139:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12189:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12200:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12185:3:37"},"nodeType":"YulFunctionCall","src":"12185:18:37"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"12205:34:37","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12178:6:37"},"nodeType":"YulFunctionCall","src":"12178:62:37"},"nodeType":"YulExpressionStatement","src":"12178:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12260:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12271:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12256:3:37"},"nodeType":"YulFunctionCall","src":"12256:18:37"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"12276:4:37","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12249:6:37"},"nodeType":"YulFunctionCall","src":"12249:32:37"},"nodeType":"YulExpressionStatement","src":"12249:32:37"},{"nodeType":"YulAssignment","src":"12290:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12302:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12313:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12298:3:37"},"nodeType":"YulFunctionCall","src":"12298:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12290:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12076:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12090:4:37","type":""}],"src":"11925:398:37"},{"body":{"nodeType":"YulBlock","src":"12502:233:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12519:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12512:6:37"},"nodeType":"YulFunctionCall","src":"12512:21:37"},"nodeType":"YulExpressionStatement","src":"12512:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12553:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12564:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12549:3:37"},"nodeType":"YulFunctionCall","src":"12549:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"12569:2:37","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12542:6:37"},"nodeType":"YulFunctionCall","src":"12542:30:37"},"nodeType":"YulExpressionStatement","src":"12542:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12592:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12603:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12588:3:37"},"nodeType":"YulFunctionCall","src":"12588:18:37"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"12608:34:37","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12581:6:37"},"nodeType":"YulFunctionCall","src":"12581:62:37"},"nodeType":"YulExpressionStatement","src":"12581:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12663:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12674:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12659:3:37"},"nodeType":"YulFunctionCall","src":"12659:18:37"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"12679:13:37","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12652:6:37"},"nodeType":"YulFunctionCall","src":"12652:41:37"},"nodeType":"YulExpressionStatement","src":"12652:41:37"},{"nodeType":"YulAssignment","src":"12702:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12714:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12725:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12710:3:37"},"nodeType":"YulFunctionCall","src":"12710:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12702:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12479:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12493:4:37","type":""}],"src":"12328:407:37"},{"body":{"nodeType":"YulBlock","src":"13129:397:37","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13146:3:37"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"13151:25:37","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13139:6:37"},"nodeType":"YulFunctionCall","src":"13139:38:37"},"nodeType":"YulExpressionStatement","src":"13139:38:37"},{"nodeType":"YulVariableDeclaration","src":"13186:27:37","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13206:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13200:5:37"},"nodeType":"YulFunctionCall","src":"13200:13:37"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13190:6:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13248:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"13256:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13244:3:37"},"nodeType":"YulFunctionCall","src":"13244:17:37"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13267:3:37"},{"kind":"number","nodeType":"YulLiteral","src":"13272:2:37","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13263:3:37"},"nodeType":"YulFunctionCall","src":"13263:12:37"},{"name":"length","nodeType":"YulIdentifier","src":"13277:6:37"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"13222:21:37"},"nodeType":"YulFunctionCall","src":"13222:62:37"},"nodeType":"YulExpressionStatement","src":"13222:62:37"},{"nodeType":"YulVariableDeclaration","src":"13293:26:37","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13307:3:37"},{"name":"length","nodeType":"YulIdentifier","src":"13312:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13303:3:37"},"nodeType":"YulFunctionCall","src":"13303:16:37"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13297:2:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13339:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"13343:2:37","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13335:3:37"},"nodeType":"YulFunctionCall","src":"13335:11:37"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"13348:19:37","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13328:6:37"},"nodeType":"YulFunctionCall","src":"13328:40:37"},"nodeType":"YulExpressionStatement","src":"13328:40:37"},{"nodeType":"YulVariableDeclaration","src":"13377:29:37","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13399:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13393:5:37"},"nodeType":"YulFunctionCall","src":"13393:13:37"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"13381:8:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13441:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"13449:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13437:3:37"},"nodeType":"YulFunctionCall","src":"13437:17:37"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13460:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"13464:2:37","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13456:3:37"},"nodeType":"YulFunctionCall","src":"13456:11:37"},{"name":"length_1","nodeType":"YulIdentifier","src":"13469:8:37"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"13415:21:37"},"nodeType":"YulFunctionCall","src":"13415:63:37"},"nodeType":"YulExpressionStatement","src":"13415:63:37"},{"nodeType":"YulAssignment","src":"13487:33:37","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13502:2:37"},{"name":"length_1","nodeType":"YulIdentifier","src":"13506:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13498:3:37"},"nodeType":"YulFunctionCall","src":"13498:17:37"},{"kind":"number","nodeType":"YulLiteral","src":"13517:2:37","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13494:3:37"},"nodeType":"YulFunctionCall","src":"13494:26:37"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13487:3:37"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13097:3:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13102:6:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13110:6:37","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13121:3:37","type":""}],"src":"12740:786:37"},{"body":{"nodeType":"YulBlock","src":"13705:170:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13722:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"13733:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13715:6:37"},"nodeType":"YulFunctionCall","src":"13715:21:37"},"nodeType":"YulExpressionStatement","src":"13715:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13756:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"13767:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13752:3:37"},"nodeType":"YulFunctionCall","src":"13752:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"13772:2:37","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13745:6:37"},"nodeType":"YulFunctionCall","src":"13745:30:37"},"nodeType":"YulExpressionStatement","src":"13745:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13795:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"13806:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13791:3:37"},"nodeType":"YulFunctionCall","src":"13791:18:37"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"13811:22:37","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13784:6:37"},"nodeType":"YulFunctionCall","src":"13784:50:37"},"nodeType":"YulExpressionStatement","src":"13784:50:37"},{"nodeType":"YulAssignment","src":"13843:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13855:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"13866:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13851:3:37"},"nodeType":"YulFunctionCall","src":"13851:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13843:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13682:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13696:4:37","type":""}],"src":"13531:344:37"},{"body":{"nodeType":"YulBlock","src":"14054:166:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14071:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14082:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14064:6:37"},"nodeType":"YulFunctionCall","src":"14064:21:37"},"nodeType":"YulExpressionStatement","src":"14064:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14105:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14116:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14101:3:37"},"nodeType":"YulFunctionCall","src":"14101:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"14121:2:37","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14094:6:37"},"nodeType":"YulFunctionCall","src":"14094:30:37"},"nodeType":"YulExpressionStatement","src":"14094:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14144:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14155:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14140:3:37"},"nodeType":"YulFunctionCall","src":"14140:18:37"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"14160:18:37","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14133:6:37"},"nodeType":"YulFunctionCall","src":"14133:46:37"},"nodeType":"YulExpressionStatement","src":"14133:46:37"},{"nodeType":"YulAssignment","src":"14188:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14200:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14211:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14196:3:37"},"nodeType":"YulFunctionCall","src":"14196:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14188:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14031:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14045:4:37","type":""}],"src":"13880:340:37"},{"body":{"nodeType":"YulBlock","src":"14257:95:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14274:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14281:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14286:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14277:3:37"},"nodeType":"YulFunctionCall","src":"14277:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14267:6:37"},"nodeType":"YulFunctionCall","src":"14267:31:37"},"nodeType":"YulExpressionStatement","src":"14267:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14314:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14317:4:37","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14307:6:37"},"nodeType":"YulFunctionCall","src":"14307:15:37"},"nodeType":"YulExpressionStatement","src":"14307:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14338:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14341:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14331:6:37"},"nodeType":"YulFunctionCall","src":"14331:15:37"},"nodeType":"YulExpressionStatement","src":"14331:15:37"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14225:127:37"},{"body":{"nodeType":"YulBlock","src":"14531:232:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14548:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14559:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14541:6:37"},"nodeType":"YulFunctionCall","src":"14541:21:37"},"nodeType":"YulExpressionStatement","src":"14541:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14582:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14593:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14578:3:37"},"nodeType":"YulFunctionCall","src":"14578:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"14598:2:37","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14571:6:37"},"nodeType":"YulFunctionCall","src":"14571:30:37"},"nodeType":"YulExpressionStatement","src":"14571:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14621:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14632:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14617:3:37"},"nodeType":"YulFunctionCall","src":"14617:18:37"},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768","kind":"string","nodeType":"YulLiteral","src":"14637:34:37","type":"","value":"ERC20Pausable: token transfer wh"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14610:6:37"},"nodeType":"YulFunctionCall","src":"14610:62:37"},"nodeType":"YulExpressionStatement","src":"14610:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14692:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14703:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14688:3:37"},"nodeType":"YulFunctionCall","src":"14688:18:37"},{"hexValue":"696c6520706175736564","kind":"string","nodeType":"YulLiteral","src":"14708:12:37","type":"","value":"ile paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14681:6:37"},"nodeType":"YulFunctionCall","src":"14681:40:37"},"nodeType":"YulExpressionStatement","src":"14681:40:37"},{"nodeType":"YulAssignment","src":"14730:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14742:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14753:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14738:3:37"},"nodeType":"YulFunctionCall","src":"14738:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14730:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14508:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14522:4:37","type":""}],"src":"14357:406:37"},{"body":{"nodeType":"YulBlock","src":"14820:116:37","statements":[{"body":{"nodeType":"YulBlock","src":"14879:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14881:16:37"},"nodeType":"YulFunctionCall","src":"14881:18:37"},"nodeType":"YulExpressionStatement","src":"14881:18:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14851:1:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14844:6:37"},"nodeType":"YulFunctionCall","src":"14844:9:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14837:6:37"},"nodeType":"YulFunctionCall","src":"14837:17:37"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14859:1:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14870:1:37","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14866:3:37"},"nodeType":"YulFunctionCall","src":"14866:6:37"},{"name":"x","nodeType":"YulIdentifier","src":"14874:1:37"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14862:3:37"},"nodeType":"YulFunctionCall","src":"14862:14:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14856:2:37"},"nodeType":"YulFunctionCall","src":"14856:21:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14833:3:37"},"nodeType":"YulFunctionCall","src":"14833:45:37"},"nodeType":"YulIf","src":"14830:71:37"},{"nodeType":"YulAssignment","src":"14910:20:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14925:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"14928:1:37"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14921:3:37"},"nodeType":"YulFunctionCall","src":"14921:9:37"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"14910:7:37"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14799:1:37","type":""},{"name":"y","nodeType":"YulTypedName","src":"14802:1:37","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14808:7:37","type":""}],"src":"14768:168:37"},{"body":{"nodeType":"YulBlock","src":"14988:89:37","statements":[{"body":{"nodeType":"YulBlock","src":"15015:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15017:16:37"},"nodeType":"YulFunctionCall","src":"15017:18:37"},"nodeType":"YulExpressionStatement","src":"15017:18:37"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15008:5:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15001:6:37"},"nodeType":"YulFunctionCall","src":"15001:13:37"},"nodeType":"YulIf","src":"14998:39:37"},{"nodeType":"YulAssignment","src":"15046:25:37","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15057:5:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15068:1:37","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15064:3:37"},"nodeType":"YulFunctionCall","src":"15064:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15053:3:37"},"nodeType":"YulFunctionCall","src":"15053:18:37"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15046:3:37"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14970:5:37","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14980:3:37","type":""}],"src":"14941:136:37"},{"body":{"nodeType":"YulBlock","src":"15256:182:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15273:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"15284:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15266:6:37"},"nodeType":"YulFunctionCall","src":"15266:21:37"},"nodeType":"YulExpressionStatement","src":"15266:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15307:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"15318:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15303:3:37"},"nodeType":"YulFunctionCall","src":"15303:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"15323:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15296:6:37"},"nodeType":"YulFunctionCall","src":"15296:30:37"},"nodeType":"YulExpressionStatement","src":"15296:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15346:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"15357:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15342:3:37"},"nodeType":"YulFunctionCall","src":"15342:18:37"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"15362:34:37","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15335:6:37"},"nodeType":"YulFunctionCall","src":"15335:62:37"},"nodeType":"YulExpressionStatement","src":"15335:62:37"},{"nodeType":"YulAssignment","src":"15406:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15418:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"15429:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15414:3:37"},"nodeType":"YulFunctionCall","src":"15414:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15406:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15233:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15247:4:37","type":""}],"src":"15082:356:37"},{"body":{"nodeType":"YulBlock","src":"15492:76:37","statements":[{"body":{"nodeType":"YulBlock","src":"15514:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15516:16:37"},"nodeType":"YulFunctionCall","src":"15516:18:37"},"nodeType":"YulExpressionStatement","src":"15516:18:37"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15508:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"15511:1:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15505:2:37"},"nodeType":"YulFunctionCall","src":"15505:8:37"},"nodeType":"YulIf","src":"15502:34:37"},{"nodeType":"YulAssignment","src":"15545:17:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15557:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"15560:1:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15553:3:37"},"nodeType":"YulFunctionCall","src":"15553:9:37"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"15545:4:37"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15474:1:37","type":""},{"name":"y","nodeType":"YulTypedName","src":"15477:1:37","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15483:4:37","type":""}],"src":"15443:125:37"},{"body":{"nodeType":"YulBlock","src":"15605:95:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15622:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15629:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15634:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15625:3:37"},"nodeType":"YulFunctionCall","src":"15625:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15615:6:37"},"nodeType":"YulFunctionCall","src":"15615:31:37"},"nodeType":"YulExpressionStatement","src":"15615:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15662:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15665:4:37","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15655:6:37"},"nodeType":"YulFunctionCall","src":"15655:15:37"},"nodeType":"YulExpressionStatement","src":"15655:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15686:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15689:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15679:6:37"},"nodeType":"YulFunctionCall","src":"15679:15:37"},"nodeType":"YulExpressionStatement","src":"15679:15:37"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"15573:127:37"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve pauser role to unpause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve minter role to mint\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve pauser role to pause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":37,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x211 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0xCB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FF JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1954 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1954 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH2 0x27F PUSH2 0x861 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x1954 JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x93D JUMP JUMPDEST PUSH2 0x228 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH2 0x228 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1954 JUMP JUMPDEST PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x228 PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC4 JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x228 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C91 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x455 JUMPI POP PUSH2 0x455 DUP3 PUSH2 0xA3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCC DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x1AEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x496 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0xA71 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x513 DUP6 DUP3 DUP6 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x51E DUP6 DUP6 DUP6 PUSH2 0xC0F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x544 DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x54E DUP4 DUP4 PUSH2 0xDCF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0xDF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0x5E9 DUP4 DUP4 PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x610 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C91 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x912 JUMP JUMPDEST PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x76652070617573657220726F6C6520746F20756E706175736500000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x68A PUSH2 0xE13 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B6 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x912 JUMP JUMPDEST PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D99481B5A5B9D195C881C9BDB19481D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x735 CALLER DUP3 PUSH2 0xF33 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x758 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x772 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x772 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x802 DUP4 DUP4 PUSH2 0x1073 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x857 DUP3 CALLER DUP4 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x879 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C91 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x912 JUMP JUMPDEST PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305072657365744D696E7465725061757365723A206D757374206861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x76652070617573657220726F6C6520746F207061757365000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x68A PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x90B SWAP1 DUP4 PUSH2 0x10F4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCD DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x95A DUP3 DUP7 PUSH2 0xA11 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x51E DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x455 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA07 DUP2 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x54E DUP4 DUP4 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x455 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x455 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA1 DUP5 DUP5 PUSH2 0xA11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC09 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0xC09 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA71 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0xCE0 DUP4 DUP4 DUP4 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xDB8 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x735 DUP2 CALLER PUSH2 0x1115 JUMP JUMPDEST PUSH2 0xDD9 DUP3 DUP3 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x54E SWAP1 DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0xDFB DUP3 DUP3 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x54E SWAP1 DUP3 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0xE1B PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0xEC8 PUSH1 0x0 DUP4 DUP4 PUSH2 0x110A JUMP JUMPDEST DUP1 PUSH1 0xCB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0xF9F DUP3 PUSH1 0x0 DUP4 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1013 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0xCB DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x10A4 DUP3 DUP3 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x10AC PUSH2 0x131D JUMP JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x10BE PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xE49 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP4 DUP4 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x54E DUP4 DUP4 DUP4 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x111F DUP3 DUP3 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH2 0x112C DUP2 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x1137 DUP4 PUSH1 0x20 PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1148 SWAP3 SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x5BF SWAP2 PUSH1 0x4 ADD PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1178 DUP3 DUP3 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x11B0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1213 DUP3 DUP3 PUSH2 0x912 JUMP JUMPDEST ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x169A JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1309 SWAP1 PUSH1 0xCC SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1797 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x54E SWAP1 PUSH1 0xCD SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1378 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x1383 PUSH1 0x0 CALLER PUSH2 0x178D JUMP JUMPDEST PUSH2 0x13AD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x178D JUMP JUMPDEST PUSH2 0x5D2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C91 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x178D JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x455 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x14BE DUP4 PUSH1 0x2 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x14C9 SWAP1 PUSH1 0x2 PUSH2 0x1B3F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x150B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1526 JUMPI PUSH2 0x1526 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1555 JUMPI PUSH2 0x1555 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1579 DUP5 PUSH1 0x2 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1584 SWAP1 PUSH1 0x1 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x15FC JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x15B8 JUMPI PUSH2 0x15B8 PUSH2 0x1C17 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15CE JUMPI PUSH2 0x15CE PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x15F5 DUP2 PUSH2 0x1C4C JUMP JUMPDEST SWAP1 POP PUSH2 0x1587 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1692 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x455 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1783 JUMPI PUSH1 0x0 PUSH2 0x16BE PUSH1 0x1 DUP4 PUSH2 0x1C63 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x16D2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1737 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16F2 JUMPI PUSH2 0x16F2 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1715 JUMPI PUSH2 0x1715 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1748 JUMPI PUSH2 0x1748 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x455 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x455 JUMP JUMPDEST PUSH2 0x5D2 DUP3 DUP3 PUSH2 0xDCF JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17A3 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x17C5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x180B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17DE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x180B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x180B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x180B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17F0 JUMP JUMPDEST POP PUSH2 0x1817 SWAP3 SWAP2 POP PUSH2 0x181B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x181C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1875 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x185D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC09 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18A5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x185A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18F1 DUP4 PUSH2 0x18B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191D DUP5 PUSH2 0x18B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x192B PUSH1 0x20 DUP6 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1977 PUSH1 0x20 DUP5 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19C2 JUMPI PUSH2 0x19C2 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19EA PUSH2 0x1980 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5A DUP7 DUP4 DUP8 ADD PUSH2 0x1996 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7D DUP6 DUP3 DUP7 ADD PUSH2 0x1996 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90B DUP3 PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE0 DUP4 PUSH2 0x18B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1977 PUSH1 0x20 DUP5 ADD PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B02 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B52 JUMPI PUSH2 0x1B52 PUSH2 0x1B29 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1BDA DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x185A JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1C0B DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x185A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C47 JUMPI PUSH2 0x1C47 PUSH2 0x1B29 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x1B29 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C75 PUSH2 0x1B29 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH6 0xD7A28E3265B3 PUSH27 0x6474929F336521B332C1681B933F6CB9F3376673440D862AA26469 PUSH17 0x667358221220DEB1AB9BAEC8227F06F011 MOD SSTORE 0xC2 0xE4 0xCF 0xCB CREATE2 CREATE 0x26 CODECOPY PUSH11 0x1527EE17CC11106D217D64 PUSH20 0x6F6C634300080C00330000000000000000000000 ","sourceMap":"1109:2851:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:223:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:37;;463:22;445:41;;433:2;418:18;962:223:0;;;;;;;;2491:98:8;;;:::i;:::-;;;;;;;:::i;4768:197::-;;;;;;:::i;:::-;;:::i;3579:106::-;3666:12;;3579:106;;;1731:25:37;;;1719:2;1704:18;3579:106:8;1585:177:37;5527:286:8;;;;;;:::i;:::-;;:::i;4708:129:1:-;;;;;;:::i;:::-;4782:7;4808:12;;;:6;:12;;;;;:22;;;;4708:129;5133:145;;;;;;:::i;:::-;;:::i;:::-;;3428:91:8;;;3510:2;2868:36:37;;2856:2;2841:18;3428:91:8;2726:184:37;6242:214:1;;;;;;:::i;:::-;;:::i;6208:234:8:-;;;;;;:::i;:::-;;:::i;3253:175:17:-;;;:::i;2472:202::-;;;;;;:::i;:::-;;:::i;848:89:10:-;;;;;;:::i;:::-;;:::i;1284:150:17:-;;;;;;:::i;:::-;;:::i;1858:84:7:-;1928:7;;;;1858:84;;3743:125:8;;;;;;:::i;:::-;-1:-1:-1;;;;;3843:18:8;3817:7;3843:18;;;:9;:18;;;;;;;3743:125;1243:161:10;;;;;;:::i;:::-;;:::i;2877:169:17:-;;;:::i;1770:151:0:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5112:32:37;;;5094:51;;5082:2;5067:18;1770:151:0;4948:203:37;3203:145:1;;;;;;:::i;:::-;;:::i;2702:102:8:-;;;:::i;2324:49:1:-;;2369:4;2324:49;;6929:427:8;;;;;;:::i;:::-;;:::i;4064:189::-;;;;;;:::i;:::-;;:::i;2089:140:0:-;;;;;;:::i;:::-;;:::i;1439:62:17:-;;1477:24;1439:62;;5558:147:1;;;;;;:::i;:::-;;:::i;4311:149:8:-;;;;;;:::i;:::-;;:::i;1507:62:17:-;;-1:-1:-1;;;;;;;;;;;1507:62:17;;962:223:0;1047:4;-1:-1:-1;;;;;;1070:68:0;;-1:-1:-1;;;1070:68:0;;:108;;;1142:36;1166:11;1142:23;:36::i;:::-;1063:115;962:223;-1:-1:-1;;962:223:0:o;2491:98:8:-;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;929:10:20;4905:32:8;929:10:20;4921:7:8;4930:6;4905:8;:32::i;:::-;-1:-1:-1;4954:4:8;;4768:197;-1:-1:-1;;;4768:197:8:o;5527:286::-;5654:4;929:10:20;5710:38:8;5726:4;929:10:20;5741:6:8;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;-1:-1:-1;5802:4:8;;5527:286;-1:-1:-1;;;;5527:286:8:o;5133:145:1:-;4782:7;4808:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5246:25:::1;5257:4;5263:7;5246:10;:25::i;:::-;5133:145:::0;;;:::o;6242:214::-;-1:-1:-1;;;;;6337:23:1;;929:10:20;6337:23:1;6329:83;;;;-1:-1:-1;;;6329:83:1;;6008:2:37;6329:83:1;;;5990:21:37;6047:2;6027:18;;;6020:30;6086:34;6066:18;;;6059:62;-1:-1:-1;;;6137:18:37;;;6130:45;6192:19;;6329:83:1;;;;;;;;;6423:26;6435:4;6441:7;6423:11;:26::i;:::-;6242:214;;:::o;6208:234:8:-;6296:4;929:10:20;6350:64:8;929:10:20;6366:7:8;6403:10;6375:25;929:10:20;6366:7:8;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;3253:175:17:-;3305:34;-1:-1:-1;;;;;;;;;;;929:10:20;3203:145:1;:::i;3305:34:17:-;3297:104;;;;-1:-1:-1;;;3297:104:17;;6689:2:37;3297:104:17;;;6671:21:37;6728:2;6708:18;;;6701:30;6767:34;6747:18;;;6740:62;6838:27;6818:18;;;6811:55;6883:19;;3297:104:17;6487:421:37;3297:104:17;3411:10;:8;:10::i;:::-;3253:175::o;2472:202::-;2547:34;1477:24;929:10:20;3203:145:1;:::i;2547:34:17:-;2539:101;;;;-1:-1:-1;;;2539:101:17;;7115:2:37;2539:101:17;;;7097:21:37;7154:2;7134:18;;;7127:30;7193:34;7173:18;;;7166:62;-1:-1:-1;;;7244:18:37;;;7237:52;7306:19;;2539:101:17;6913:418:37;2539:101:17;2650:17;2656:2;2660:6;2650:5;:17::i;848:89:10:-;903:27;929:10:20;923:6:10;903:5;:27::i;:::-;848:89;:::o;1284:150:17:-;3268:19:6;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:6;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:6;1476:19:19;:23;;;3376:66:6;;-1:-1:-1;3425:12:6;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:6;;7538:2:37;3314:201:6;;;7520:21:37;7577:2;7557:18;;;7550:30;7616:34;7596:18;;;7589:62;-1:-1:-1;;;7667:18:37;;;7660:44;7721:19;;3314:201:6;7336:410:37;3314:201:6;3525:12;:16;;-1:-1:-1;;3525:16:6;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:6;;;;;3551:65;1383:44:17::1;1414:4;1420:6;1383:30;:44::i;:::-;3640:14:6::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:6;;;3710:14;;-1:-1:-1;2868:36:37;;3710:14:6;;2856:2:37;2841:18;3710:14:6;;;;;;;3258:483;1284:150:17;;:::o;1243:161:10:-;1319:46;1335:7;929:10:20;1358:6:10;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;2877:169:17:-;2927:34;-1:-1:-1;;;;;;;;;;;929:10:20;3203:145:1;:::i;2927:34:17:-;2919:102;;;;-1:-1:-1;;;2919:102:17;;8152:2:37;2919:102:17;;;8134:21:37;8191:2;8171:18;;;8164:30;8230:34;8210:18;;;8203:62;8301:25;8281:18;;;8274:53;8344:19;;2919:102:17;7950:419:37;2919:102:17;3031:8;:6;:8::i;1770:151:0:-;1860:7;1886:18;;;:12;:18;;;;;:28;;1908:5;1886:21;:28::i;:::-;1879:35;1770:151;-1:-1:-1;;;1770:151:0:o;3203:145:1:-;3289:4;3312:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3312:29:1;;;;;;;;;;;;;;;3203:145::o;2702:102:8:-;2758:13;2790:7;2783:14;;;;;:::i;6929:427::-;7022:4;929:10:20;7022:4:8;7103:25;929:10:20;7120:7:8;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;-1:-1:-1;;;7138:85:8;;8576:2:37;7138:85:8;;;8558:21:37;8615:2;8595:18;;;8588:30;8654:34;8634:18;;;8627:62;-1:-1:-1;;;8705:18:37;;;8698:35;8750:19;;7138:85:8;8374:401:37;7138:85:8;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;4064:189::-;4143:4;929:10:20;4197:28:8;929:10:20;4214:2:8;4218:6;4197:9;:28::i;2089:140:0:-;2169:7;2195:18;;;:12;:18;;;;;:27;;:25;:27::i;5558:147:1:-;4782:7;4808:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5672:26:::1;5684:4;5690:7;5672:11;:26::i;4311:149:8:-:0;-1:-1:-1;;;;;4426:18:8;;;4400:7;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4311:149::o;2903:213:1:-;2988:4;-1:-1:-1;;;;;;3011:58:1;;-1:-1:-1;;;3011:58:1;;:98;;-1:-1:-1;;;;;;;;;;1168:51:25;;;3073:36:1;1060:166:25;10841:370:8;-1:-1:-1;;;;;10972:19:8;;10964:68;;;;-1:-1:-1;;;10964:68:8;;8982:2:37;10964:68:8;;;8964:21:37;9021:2;9001:18;;;8994:30;9060:34;9040:18;;;9033:62;-1:-1:-1;;;9111:18:37;;;9104:34;9155:19;;10964:68:8;8780:400:37;10964:68:8;-1:-1:-1;;;;;11050:21:8;;11042:68;;;;-1:-1:-1;;;11042:68:8;;9387:2:37;11042:68:8;;;9369:21:37;9426:2;9406:18;;;9399:30;9465:34;9445:18;;;9438:62;-1:-1:-1;;;9516:18:37;;;9509:32;9558:19;;11042:68:8;9185:398:37;11042:68:8;-1:-1:-1;;;;;11121:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11172:32;;1731:25:37;;;11172:32:8;;1704:18:37;11172:32:8;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;-1:-1:-1;;11688:16:8;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;-1:-1:-1;;;11741:68:8;;9790:2:37;11741:68:8;;;9772:21:37;9829:2;9809:18;;;9802:30;9868:31;9848:18;;;9841:59;9917:18;;11741:68:8;9588:353:37;11741:68:8;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11612:321;11492:441;;;:::o;7810:818::-;-1:-1:-1;;;;;7936:18:8;;7928:68;;;;-1:-1:-1;;;7928:68:8;;10148:2:37;7928:68:8;;;10130:21:37;10187:2;10167:18;;;10160:30;10226:34;10206:18;;;10199:62;-1:-1:-1;;;10277:18:37;;;10270:35;10322:19;;7928:68:8;9946:401:37;7928:68:8;-1:-1:-1;;;;;8014:16:8;;8006:64;;;;-1:-1:-1;;;8006:64:8;;10554:2:37;8006:64:8;;;10536:21:37;10593:2;10573:18;;;10566:30;10632:34;10612:18;;;10605:62;-1:-1:-1;;;10683:18:37;;;10676:33;10726:19;;8006:64:8;10352:399:37;8006:64:8;8081:38;8102:4;8108:2;8112:6;8081:20;:38::i;:::-;-1:-1:-1;;;;;8152:15:8;;8130:19;8152:15;;;:9;:15;;;;;;8185:21;;;;8177:72;;;;-1:-1:-1;;;8177:72:8;;10958:2:37;8177:72:8;;;10940:21:37;10997:2;10977:18;;;10970:30;11036:34;11016:18;;;11009:62;-1:-1:-1;;;11087:18:37;;;11080:36;11133:19;;8177:72:8;10756:402:37;8177:72:8;-1:-1:-1;;;;;8283:15:8;;;;;;;:9;:15;;;;;;8301:20;;;8283:38;;8498:13;;;;;;;;;;:23;;;;;;8547:26;;;;;;8315:6;1731:25:37;;1719:2;1704:18;;1585:177;8547:26:8;;;;;;;;8584:37;5133:145:1;3642:103;3708:30;3719:4;929:10:20;3708::1;:30::i;2317:166:0:-;2404:31;2421:4;2427:7;2404:16;:31::i;:::-;2445:18;;;;:12;:18;;;;;:31;;2468:7;2445:22;:31::i;2572:171::-;2660:32;2678:4;2684:7;2660:17;:32::i;:::-;2702:18;;;;:12;:18;;;;;:34;;2728:7;2702:25;:34::i;2676:117:7:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:7::1;::::0;;2764:22:::1;929:10:20::0;2773:12:7::1;2764:22;::::0;-1:-1:-1;;;;;5112:32:37;;;5094:51;;5082:2;5067:18;2764:22:7::1;;;;;;;2676:117::o:0;8904:535:8:-;-1:-1:-1;;;;;8987:21:8;;8979:65;;;;-1:-1:-1;;;8979:65:8;;11365:2:37;8979:65:8;;;11347:21:37;11404:2;11384:18;;;11377:30;11443:33;11423:18;;;11416:61;11494:18;;8979:65:8;11163:355:37;8979:65:8;9055:49;9084:1;9088:7;9097:6;9055:20;:49::i;:::-;9131:6;9115:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9283:18:8;;;;;;:9;:18;;;;;;;;:28;;;;;;9336:37;1731:25:37;;;9336:37:8;;1704:18:37;9336:37:8;;;;;;;6242:214:1;;:::o;9759:659:8:-;-1:-1:-1;;;;;9842:21:8;;9834:67;;;;-1:-1:-1;;;9834:67:8;;11725:2:37;9834:67:8;;;11707:21:37;11764:2;11744:18;;;11737:30;11803:34;11783:18;;;11776:62;-1:-1:-1;;;11854:18:37;;;11847:31;11895:19;;9834:67:8;11523:397:37;9834:67:8;9912:49;9933:7;9950:1;9954:6;9912:20;:49::i;:::-;-1:-1:-1;;;;;9997:18:8;;9972:22;9997:18;;;:9;:18;;;;;;10033:24;;;;10025:71;;;;-1:-1:-1;;;10025:71:8;;12127:2:37;10025:71:8;;;12109:21:37;12166:2;12146:18;;;12139:30;12205:34;12185:18;;;12178:62;-1:-1:-1;;;12256:18:37;;;12249:32;12298:19;;10025:71:8;11925:398:37;10025:71:8;-1:-1:-1;;;;;10130:18:8;;;;;;:9;:18;;;;;;;;10151:23;;;10130:44;;10267:12;:22;;;;;;;10315:37;1731:25:37;;;10130:18:8;;;10315:37;;1704:18:37;10315:37:8;;;;;;;5133:145:1;;;:::o;1753:262:17:-;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;1871:36:17::1;1894:4;1900:6;1871:22;:36::i;:::-;1917:27;:25;:27::i;:::-;1954:54;1995:4;2001:6;1954:40;:54::i;2429:115:7:-:0;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:7::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:20::0;;850:96;9566:156:29;9640:7;9690:22;9694:3;9706:5;9690:3;:22::i;9109:115::-;9172:7;9198:19;9206:3;4548:18;;4466:107;3434:233:17;3616:44;3643:4;3649:2;3653:6;3616:26;:44::i;4026:501:1:-;4114:22;4122:4;4128:7;4114;:22::i;:::-;4109:412;;4297:39;4328:7;4297:30;:39::i;:::-;4407:49;4446:4;4453:2;4407:30;:49::i;:::-;4204:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4204:274:1;;;;;;;;;;-1:-1:-1;;;4152:358:1;;;;;;;:::i;7791:233::-;7874:22;7882:4;7888:7;7874;:22::i;:::-;7869:149;;7912:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7912:29:1;;;;;;;;;:36;;-1:-1:-1;;7912:36:1;7944:4;7912:36;;;7994:12;929:10:20;;850:96;7994:12:1;-1:-1:-1;;;;;7967:40:1;7985:7;-1:-1:-1;;;;;7967:40:1;7979:4;7967:40;;;;;;;;;;7791:233;;:::o;8308:150:29:-;8378:4;8401:50;8406:3;-1:-1:-1;;;;;8426:23:29;;8401:4;:50::i;8195:234:1:-;8278:22;8286:4;8292:7;8278;:22::i;:::-;8274:149;;;8348:5;8316:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8316:29:1;;;;;;;;;;:37;;-1:-1:-1;;8316:37:1;;;8372:40;929:10:20;;8316:12:1;;8372:40;;8348:5;8372:40;8195:234;;:::o;8626:156:29:-;8699:4;8722:53;8730:3;-1:-1:-1;;;;;8750:23:29;;8722:7;:53::i;2188:106:7:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:7;;13733:2:37;2246:41:7;;;13715:21:37;13772:2;13752:18;;;13745:30;-1:-1:-1;;;13791:18:37;;;13784:50;13851:18;;2246:41:7;13531:344:37;2267:159:8;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;2379:13:8;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2402:17:8;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;1166:95:7:-:0;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;1239:7:7::1;:15:::0;;-1:-1:-1;;1239:15:7::1;::::0;;1166:95::o;2021:262:17:-;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;2137:44:17::1;2369:4:1;929:10:20::0;2137::17::1;:44::i;:::-;2192:37;1477:24;929:10:20::0;2137::17::1;:44::i;2192:37::-;2239;-1:-1:-1::0;;;;;;;;;;;929:10:20;2137::17::1;:44::i;2010:106:7:-:0;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:7;;14082:2:37;2071:38:7;;;14064:21:37;14121:2;14101:18;;;14094:30;-1:-1:-1;;;14140:18:37;;;14133:46;14196:18;;2071:38:7;13880:340:37;4915:118:29;4982:7;5008:3;:11;;5020:5;5008:18;;;;;;;;:::i;:::-;;;;;;;;;5001:25;;4915:118;;;;:::o;972:264:11:-;1928:7:7;;;;1173:9:11;1165:64;;;;-1:-1:-1;;;1165:64:11;;14559:2:37;1165:64:11;;;14541:21:37;14598:2;14578:18;;;14571:30;14637:34;14617:18;;;14610:62;-1:-1:-1;;;14688:18:37;;;14681:40;14738:19;;1165:64:11;14357:406:37;2146:149:22;2204:13;2236:52;-1:-1:-1;;;;;2248:22:22;;333:2;1557:437;1632:13;1657:19;1689:10;1693:6;1689:1;:10;:::i;:::-;:14;;1702:1;1689:14;:::i;:::-;1679:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1679:25:22;;1657:47;;-1:-1:-1;;;1714:6:22;1721:1;1714:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1714:15:22;;;;;;;;;-1:-1:-1;;;1739:6:22;1746:1;1739:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1739:15:22;;;;;;;;-1:-1:-1;1769:9:22;1781:10;1785:6;1781:1;:10;:::i;:::-;:14;;1794:1;1781:14;:::i;:::-;1769:26;;1764:128;1801:1;1797;:5;1764:128;;;-1:-1:-1;;;1844:5:22;1852:3;1844:11;1835:21;;;;;;;:::i;:::-;;;;1823:6;1830:1;1823:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1823:33:22;;;;;;;;-1:-1:-1;1880:1:22;1870:11;;;;;1804:3;;;:::i;:::-;;;1764:128;;;-1:-1:-1;1909:10:22;;1901:55;;;;-1:-1:-1;;;1901:55:22;;15284:2:37;1901:55:22;;;15266:21:37;;;15303:18;;;15296:30;15362:34;15342:18;;;15335:62;15414:18;;1901:55:22;15082:356:37;2217:404:29;2280:4;4354:19;;;:12;;;:19;;;;;;2296:319;;-1:-1:-1;2338:23:29;;;;;;;;:11;:23;;;;;;;;;;;;;2518:18;;2496:19;;;:12;;;:19;;;;;;:40;;;;2550:11;;2296:319;-1:-1:-1;2599:5:29;2592:12;;2789:1388;2855:4;2992:19;;;:12;;;:19;;;;;;3026:15;;3022:1149;;3395:21;3419:14;3432:1;3419:10;:14;:::i;:::-;3467:18;;3395:38;;-1:-1:-1;3447:17:29;;3467:22;;3488:1;;3467:22;:::i;:::-;3447:42;;3521:13;3508:9;:26;3504:398;;3554:17;3574:3;:11;;3586:9;3574:22;;;;;;;;:::i;:::-;;;;;;;;;3554:42;;3725:9;3696:3;:11;;3708:13;3696:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3808:23;;;:12;;;:23;;;;;:36;;;3504:398;3980:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4072:3;:12;;:19;4085:5;4072:19;;;;;;;;;;;4065:26;;;4113:4;4106:11;;;;;;;3022:1149;4155:5;4148:12;;;;;7141:110:1;7219:25;7230:4;7236:7;7219:10;:25::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:286:37;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:37;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;-1:-1:-1;;745:1:37;727:16;;720:27;497:258::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:37;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:37:o;1148:173::-;1216:20;;-1:-1:-1;;;;;1265:31:37;;1255:42;;1245:70;;1311:1;1308;1301:12;1245:70;1148:173;;;:::o;1326:254::-;1394:6;1402;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;1494:29;1513:9;1494:29;:::i;:::-;1484:39;1570:2;1555:18;;;;1542:32;;-1:-1:-1;;;1326:254:37:o;1767:328::-;1844:6;1852;1860;1913:2;1901:9;1892:7;1888:23;1884:32;1881:52;;;1929:1;1926;1919:12;1881:52;1952:29;1971:9;1952:29;:::i;:::-;1942:39;;2000:38;2034:2;2023:9;2019:18;2000:38;:::i;:::-;1990:48;;2085:2;2074:9;2070:18;2057:32;2047:42;;1767:328;;;;;:::o;2100:180::-;2159:6;2212:2;2200:9;2191:7;2187:23;2183:32;2180:52;;;2228:1;2225;2218:12;2180:52;-1:-1:-1;2251:23:37;;2100:180;-1:-1:-1;2100:180:37:o;2467:254::-;2535:6;2543;2596:2;2584:9;2575:7;2571:23;2567:32;2564:52;;;2612:1;2609;2602:12;2564:52;2648:9;2635:23;2625:33;;2677:38;2711:2;2700:9;2696:18;2677:38;:::i;:::-;2667:48;;2467:254;;;;;:::o;3100:127::-;3161:10;3156:3;3152:20;3149:1;3142:31;3192:4;3189:1;3182:15;3216:4;3213:1;3206:15;3232:719;3275:5;3328:3;3321:4;3313:6;3309:17;3305:27;3295:55;;3346:1;3343;3336:12;3295:55;3382:6;3369:20;3408:18;3445:2;3441;3438:10;3435:36;;;3451:18;;:::i;:::-;3526:2;3520:9;3494:2;3580:13;;-1:-1:-1;;3576:22:37;;;3600:2;3572:31;3568:40;3556:53;;;3624:18;;;3644:22;;;3621:46;3618:72;;;3670:18;;:::i;:::-;3710:10;3706:2;3699:22;3745:2;3737:6;3730:18;3791:3;3784:4;3779:2;3771:6;3767:15;3763:26;3760:35;3757:55;;;3808:1;3805;3798:12;3757:55;3872:2;3865:4;3857:6;3853:17;3846:4;3838:6;3834:17;3821:54;3919:1;3912:4;3907:2;3899:6;3895:15;3891:26;3884:37;3939:6;3930:15;;;;;;3232:719;;;;:::o;3956:543::-;4044:6;4052;4105:2;4093:9;4084:7;4080:23;4076:32;4073:52;;;4121:1;4118;4111:12;4073:52;4161:9;4148:23;4190:18;4231:2;4223:6;4220:14;4217:34;;;4247:1;4244;4237:12;4217:34;4270:50;4312:7;4303:6;4292:9;4288:22;4270:50;:::i;:::-;4260:60;;4373:2;4362:9;4358:18;4345:32;4329:48;;4402:2;4392:8;4389:16;4386:36;;;4418:1;4415;4408:12;4386:36;;4441:52;4485:7;4474:8;4463:9;4459:24;4441:52;:::i;:::-;4431:62;;;3956:543;;;;;:::o;4504:186::-;4563:6;4616:2;4604:9;4595:7;4591:23;4587:32;4584:52;;;4632:1;4629;4622:12;4584:52;4655:29;4674:9;4655:29;:::i;4695:248::-;4763:6;4771;4824:2;4812:9;4803:7;4799:23;4795:32;4792:52;;;4840:1;4837;4830:12;4792:52;-1:-1:-1;;4863:23:37;;;4933:2;4918:18;;;4905:32;;-1:-1:-1;4695:248:37:o;5156:260::-;5224:6;5232;5285:2;5273:9;5264:7;5260:23;5256:32;5253:52;;;5301:1;5298;5291:12;5253:52;5324:29;5343:9;5324:29;:::i;:::-;5314:39;;5372:38;5406:2;5395:9;5391:18;5372:38;:::i;5421:380::-;5500:1;5496:12;;;;5543;;;5564:61;;5618:4;5610:6;5606:17;5596:27;;5564:61;5671:2;5663:6;5660:14;5640:18;5637:38;5634:161;;;5717:10;5712:3;5708:20;5705:1;5698:31;5752:4;5749:1;5742:15;5780:4;5777:1;5770:15;5634:161;;5421:380;;;:::o;6222:127::-;6283:10;6278:3;6274:20;6271:1;6264:31;6314:4;6311:1;6304:15;6338:4;6335:1;6328:15;6354:128;6394:3;6425:1;6421:6;6418:1;6415:13;6412:39;;;6431:18;;:::i;:::-;-1:-1:-1;6467:9:37;;6354:128::o;12328:407::-;12530:2;12512:21;;;12569:2;12549:18;;;12542:30;12608:34;12603:2;12588:18;;12581:62;-1:-1:-1;;;12674:2:37;12659:18;;12652:41;12725:3;12710:19;;12328:407::o;12740:786::-;13151:25;13146:3;13139:38;13121:3;13206:6;13200:13;13222:62;13277:6;13272:2;13267:3;13263:12;13256:4;13248:6;13244:17;13222:62;:::i;:::-;-1:-1:-1;;;13343:2:37;13303:16;;;13335:11;;;13328:40;13393:13;;13415:63;13393:13;13464:2;13456:11;;13449:4;13437:17;;13415:63;:::i;:::-;13498:17;13517:2;13494:26;;12740:786;-1:-1:-1;;;;12740:786:37:o;14225:127::-;14286:10;14281:3;14277:20;14274:1;14267:31;14317:4;14314:1;14307:15;14341:4;14338:1;14331:15;14768:168;14808:7;14874:1;14870;14866:6;14862:14;14859:1;14856:21;14851:1;14844:9;14837:17;14833:45;14830:71;;;14881:18;;:::i;:::-;-1:-1:-1;14921:9:37;;14768:168::o;14941:136::-;14980:3;15008:5;14998:39;;15017:18;;:::i;:::-;-1:-1:-1;;;15053:18:37;;14941:136::o;15443:125::-;15483:4;15511:1;15508;15505:8;15502:34;;;15516:18;;:::i;:::-;-1:-1:-1;15553:9:37;;15443:125::o;15573:127::-;15634:10;15629:3;15625:20;15622:1;15615:31;15665:4;15662:1;15655:15;15689:4;15686:1;15679:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","initialize(string,string)":"4cd88b76","mint(address,uint256)":"40c10f19","name()":"06fdde03","pause()":"8456cb59","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts. _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol\":\"ERC20PresetMinterPauserUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626\",\"dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x5bba367c6c5b9bc3ffb2a87f6aa7437955f0697ab8fcd8e38d2a4985be6469fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5cebfffc457ba7de28368a4e36d0543d0ba6247ab4deff8cc6e04654aacf089\",\"dweb:/ipfs/Qmc5rymHyZeMhnJyCf4egyX2nSJwPzFYAgUtcWea4wrQrC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol\":{\"keccak256\":\"0x68f6d4e1626a003cac2d4b0a91b1c78788b592a02e39432854b1d66ca3991455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e550ef6832c1293b071422f6bc20ef2891bf2e8235ef66b6409c12c18d2d6ef5\",\"dweb:/ipfs/QmcwMFSt8oUa5GV7Mz4TzwcRCkXiXre1qic8RkjWjbS89p\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x4807db844a856813048b5af81a764fdd25a0ae8876a3132593e8d21ddc6b607c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca2fce75b1b20047a41f6f67d2d1be3d24308bf34668a22c2f971689e319a70\",\"dweb:/ipfs/QmQ8hxhdkDmwK9CBURbV2eaEeFTBYb3bB3ByWw1GmjvEWo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":4368,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":184,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)179_storage)"},{"astId":479,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":33,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_roleMembers","offset":0,"slot":"151","type":"t_mapping(t_bytes32,t_struct(AddressSet)7113_storage)"},{"astId":143,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":1103,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_balances","offset":0,"slot":"201","type":"t_mapping(t_address,t_uint256)"},{"astId":1109,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_allowances","offset":0,"slot":"202","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1111,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_totalSupply","offset":0,"slot":"203","type":"t_uint256"},{"astId":1113,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_name","offset":0,"slot":"204","type":"t_string_storage"},{"astId":1115,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_symbol","offset":0,"slot":"205","type":"t_string_storage"},{"astId":1695,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"__gap","offset":0,"slot":"206","type":"t_array(t_uint256)45_storage"},{"astId":1837,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"__gap","offset":0,"slot":"251","type":"t_array(t_uint256)50_storage"},{"astId":978,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_paused","offset":0,"slot":"301","type":"t_bool"},{"astId":1083,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"__gap","offset":0,"slot":"302","type":"t_array(t_uint256)49_storage"},{"astId":1897,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"__gap","offset":0,"slot":"351","type":"t_array(t_uint256)50_storage"},{"astId":3122,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"__gap","offset":0,"slot":"401","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(AddressSet)7113_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)","numberOfBytes":"32","value":"t_struct(AddressSet)7113_storage"},"t_mapping(t_bytes32,t_struct(RoleData)179_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)179_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AddressSet)7113_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.AddressSet","members":[{"astId":7112,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)6798_storage"}],"numberOfBytes":"64"},"t_struct(RoleData)179_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":176,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":178,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(Set)6798_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Set","members":[{"astId":6793,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":6797,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol:ERC20PresetMinterPauserUpgradeable","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"IERC721Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eaccc244f0f6e7384956c52a0fc00b45d3401a89daaa03c3978bf89b6481ec7564736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xCC 0xC2 DIFFICULTY CREATE 0xF6 0xE7 CODESIZE 0x49 JUMP 0xC5 0x2A 0xF 0xC0 SIGNEXTEND GASLIMIT 0xD3 BLOCKHASH BYTE DUP10 0xDA 0xAA SUB 0xC3 SWAP8 DUP12 0xF8 SWAP12 PUSH5 0x81EC756473 PUSH16 0x6C634300080C00330000000000000000 ","sourceMap":"194:8087:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8087:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eaccc244f0f6e7384956c52a0fc00b45d3401a89daaa03c3978bf89b6481ec7564736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xCC 0xC2 DIFFICULTY CREATE 0xF6 0xE7 CODESIZE 0x49 JUMP 0xC5 0x2A 0xF 0xC0 SIGNEXTEND GASLIMIT 0xD3 BLOCKHASH BYTE DUP10 0xDA 0xAA SUB 0xC3 SWAP8 DUP12 0xF8 SWAP12 PUSH5 0x81EC756473 PUSH16 0x6C634300080C00330000000000000000 ","sourceMap":"194:8087:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e5fd91da5c54fd830a615723c350a0dfe7aab158c6bfcb3be4fff336065059d64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x5F 0xD9 SAR 0xA5 0xC5 0x4F 0xD8 ADDRESS 0xA6 ISZERO PUSH19 0x3C350A0DFE7AAB158C6BFCB3BE4FFF33606505 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"424:982:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:982:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e5fd91da5c54fd830a615723c350a0dfe7aab158c6bfcb3be4fff336065059d64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x5F 0xD9 SAR 0xA5 0xC5 0x4F 0xD8 ADDRESS 0xA6 ISZERO PUSH19 0x3C350A0DFE7AAB158C6BFCB3BE4FFF33606505 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"424:982:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e9b282b9caeb07ae25126fa2b621a739faa31b8ba098d76fa3b9fea2a613bc664736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP12 0x28 0x2B SWAP13 0xAE 0xB0 PUSH27 0xE25126FA2B621A739FAA31B8BA098D76FA3B9FEA2A613BC664736F PUSH13 0x634300080C0033000000000000 ","sourceMap":"199:2098:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;199:2098:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e9b282b9caeb07ae25126fa2b621a739faa31b8ba098d76fa3b9fea2a613bc664736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP12 0x28 0x2B SWAP13 0xAE 0xB0 PUSH27 0xE25126FA2B621A739FAA31B8BA098D76FA3B9FEA2A613BC664736F PUSH13 0x634300080C0033000000000000 ","sourceMap":"199:2098:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ECDSAUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9eb65a3523286e9361a342520a082e4aa7582e7f175c0758133bcd7fcefc9db64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xEB PUSH6 0xA3523286E936 BYTE CALLVALUE 0x25 KECCAK256 LOG0 DUP3 0xE4 0xAA PUSH22 0x82E7F175C0758133BCD7FCEFC9DB64736F6C63430008 0xC STOP CALLER ","sourceMap":"380:8190:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;380:8190:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b9eb65a3523286e9361a342520a082e4aa7582e7f175c0758133bcd7fcefc9db64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xEB PUSH6 0xA3523286E936 BYTE CALLVALUE 0x25 KECCAK256 LOG0 DUP3 0xE4 0xAA PUSH22 0x82E7F175C0758133BCD7FCEFC9DB64736F6C63430008 0xC STOP CALLER ","sourceMap":"380:8190:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":\"ECDSAUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:storage-size\":\"52\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":4184,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_HASHED_NAME","offset":0,"slot":"1","type":"t_bytes32"},{"astId":4186,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_HASHED_VERSION","offset":0,"slot":"2","type":"t_bytes32"},{"astId":4324,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"__gap","offset":0,"slot":"3","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":4368,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f2e02ad6f029a5aa5e9075b601aab536e98246d83a648c11579430386d6835c64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0x2E MUL 0xAD PUSH16 0x29A5AA5E9075B601AAB536E98246D83 0xA6 BASEFEE 0xC1 ISZERO PUSH26 0x430386D6835C64736F6C634300080C0033000000000000000000 ","sourceMap":"202:12313:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12313:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f2e02ad6f029a5aa5e9075b601aab536e98246d83a648c11579430386d6835c64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0x2E MUL 0xAD PUSH16 0x29A5AA5E9075B601AAB536E98246D83 0xA6 BASEFEE 0xC1 ISZERO PUSH26 0x430386D6835C64736F6C634300080C0033000000000000000000 ","sourceMap":"202:12313:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"SafeCastUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eab2e5c082b66f86f2df2cd75281dffbd646bba7aa3c45e778bf7d99da257e9e64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB2 0xE5 0xC0 DUP3 0xB6 PUSH16 0x86F2DF2CD75281DFFBD646BBA7AA3C45 0xE7 PUSH25 0xBF7D99DA257E9E64736F6C634300080C003300000000000000 ","sourceMap":"927:34164:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;927:34164:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eab2e5c082b66f86f2df2cd75281dffbd646bba7aa3c45e778bf7d99da257e9e64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB2 0xE5 0xC0 DUP3 0xB6 PUSH16 0x86F2DF2CD75281DFFBD646BBA7AA3C45 0xE7 PUSH25 0xBF7D99DA257E9E64736F6C634300080C003300000000000000 ","sourceMap":"927:34164:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":\"SafeCastUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d10d4dd7c405046caae15acb81dc2155e89882bda74dae5aa73b4a590128509064736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xD 0x4D 0xD7 0xC4 SDIV DIV PUSH13 0xAAE15ACB81DC2155E89882BDA7 0x4D 0xAE GAS 0xA7 EXTCODESIZE 0x4A MSIZE ADD 0x28 POP SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"1321:11641:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1321:11641:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d10d4dd7c405046caae15acb81dc2155e89882bda74dae5aa73b4a590128509064736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xD 0x4D 0xD7 0xC4 SDIV DIV PUSH13 0xAAE15ACB81DC2155E89882BDA7 0x4D 0xAE GAS 0xA7 EXTCODESIZE 0x4A MSIZE ADD 0x28 POP SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"1321:11641:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x4807db844a856813048b5af81a764fdd25a0ae8876a3132593e8d21ddc6b607c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca2fce75b1b20047a41f6f67d2d1be3d24308bf34668a22c2f971689e319a70\",\"dweb:/ipfs/QmQ8hxhdkDmwK9CBURbV2eaEeFTBYb3bB3ByWw1GmjvEWo\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/erc20/GENToken.sol":{"GENToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"genNFT","type":"address"}],"name":"NotSupportProjectIndex","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"_claimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_paramAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_remainClaimSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"genNFTAddr","type":"address"},{"internalType":"uint256","name":"mintPrice","type":"uint256"}],"name":"calculateAmountClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAdm","type":"address"}],"name":"changeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAddr","type":"address"}],"name":"changeParamAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20VotesUpgradeable.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"generativeProjectAddr","type":"address"},{"internalType":"uint256","name":"projectId","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getCurrentVotes","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPriorVotes","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"address","name":"paramAddr","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50613268806100206000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c806379cc67901161013b578063a9059cbb116100b8578063d505accf1161007c578063d505accf1461053b578063dd62ed3e1461054e578063f1127ed814610561578063f2fde38b1461059e578063f4a290f7146105b157600080fd5b8063a9059cbb146104e5578063aad3ec96146104f8578063b4b5ea571461050b578063c3678f351461051e578063c3cda5201461052857600080fd5b80638f283970116100ff5780638f28397014610478578063945277291461048b57806395d89b41146104b75780639ab24eb0146104bf578063a457c2d7146104d257600080fd5b806379cc67901461041b5780637ecebe001461042e5780638da5cb5b146104415780638e539e8c146104525780638f15b4141461046557600080fd5b806339509351116101c95780635c975abb1161018d5780635c975abb1461038c5780636fcfff451461039757806370a08231146103bf578063715018a6146103e8578063782d6fe1146103f057600080fd5b806339509351146103135780633a46b1a81461032657806342966c6814610339578063587cde1e1461034c5780635c19a95c1461037957600080fd5b806318160ddd1161021057806318160ddd146102c057806323b872dd146102d6578063313ce567146102e957806332974838146102f85780633644e5151461030b57600080fd5b806301bc45c91461024257806306fdde0314610273578063095ea7b31461028857806316a5041f146102ab575b600080fd5b6101f854610256906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61027b6105c5565b60405161026a919061274b565b61029b610296366004612793565b610657565b604051901515815260200161026a565b6102be6102b93660046127bf565b610671565b005b6102c861070e565b60405190815260200161026a565b61029b6102e43660046127dc565b61071e565b6040516012815260200161026a565b6102c8610306366004612793565b610742565b6102c8610838565b61029b610321366004612793565b610842565b6102c8610334366004612793565b610864565b6102be61034736600461281d565b6108df565b61025661035a3660046127bf565b6001600160a01b03908116600090815261019460205260409020541690565b6102be6103873660046127bf565b6108e9565b60655460ff1661029b565b6103aa6103a53660046127bf565b6108f3565b60405163ffffffff909116815260200161026a565b6102c86103cd3660046127bf565b6001600160a01b031660009081526033602052604090205490565b6102be610916565b6104036103fe366004612793565b61092a565b6040516001600160601b03909116815260200161026a565b6102be610429366004612793565b61093e565b6102c861043c3660046127bf565b610957565b60fb546001600160a01b0316610256565b6102c861046036600461281d565b610976565b6102be610473366004612948565b6109d3565b6102be6104863660046127bf565b610bfd565b6102c86104993660046129d1565b6101fa60209081526000928352604080842090915290825290205481565b61027b610c92565b6102c86104cd3660046127bf565b610ca1565b61029b6104e0366004612793565b610d2a565b61029b6104f3366004612793565b610da5565b6102be610506366004612793565b610db3565b6104036105193660046127bf565b610f79565b6102c86101fb5481565b6102be610536366004612a20565b610f87565b6102be610549366004612a7a565b6110bd565b6102c861055c3660046129d1565b611221565b61057461056f366004612ae8565b61124c565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161026a565b6102be6105ac3660046127bf565b6112d1565b6101f954610256906001600160a01b031681565b6060603680546105d490612b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461060090612b1f565b801561064d5780601f106106225761010080835404028352916020019161064d565b820191906000526020600020905b81548152906001019060200180831161063057829003601f168201915b5050505050905090565b600033610665818585611347565b60019150505b92915050565b6101f8546001600160a01b03163314801561069457506001600160a01b03811615155b6040518060400160405280600381526020016231303160e81b815250906106d75760405162461bcd60e51b81526004016106ce919061274b565b60405180910390fd5b506101f9546001600160a01b0382811691161461070b576101f880546001600160a01b0319166001600160a01b0383161790555b50565b600061071960355490565b905090565b60003361072c85828561146b565b6107378585856114e5565b506001949350505050565b600080839050806001600160a01b031663631847266040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107a2575060408051601f3d908101601f1916820190925261079f91810190612b67565b60015b6107e7576040516001600160a01b03851681527fa2d47e5e61369d0bde38a716e62f1ea16d8124813f8ea55b832c218216e91dfc9060200160405180910390a161082e565b3360009081526101fa602090815260408083206001600160a01b038916845290915290205461081b8562ffffff8416612b98565b6108259190612bb7565b9250505061066b565b5060009392505050565b60006107196116a1565b6000336106658185856108558383611221565b61085f9190612bce565b611347565b60004382106108b55760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016106ce565b6001600160a01b0383166000908152610195602052604090206108d8908361171e565b9392505050565b61070b3382611815565b61070b338261181f565b6001600160a01b0381166000908152610195602052604081205461066b9061189a565b61091e611903565b610928600061195d565b565b60006108d86109398484610864565b6119af565b61094982338361146b565b6109538282611815565b5050565b6001600160a01b0381166000908152610161602052604081205461066b565b60004382106109c75760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016106ce565b61066b6101968361171e565b600054610100900460ff16158080156109f35750600054600160ff909116105b80610a0d5750303b158015610a0d575060005460ff166001145b610a705760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106ce565b6000805460ff191660011790558015610a93576000805461ff0019166101001790555b6001600160a01b03831615801590610ab357506001600160a01b03821615155b6040518060400160405280600381526020016203130360ec1b81525090610aed5760405162461bcd60e51b81526004016106ce919061274b565b506101f880546001600160a01b038086166001600160a01b0319928316179092556101f98054928516929091169190911790556000610b2a601290565b610b3590600a612cca565b610b43906305f5e100612b98565b90506064610b52826046612b98565b610b5c9190612cef565b6101fb5560006064610b6f836014612b98565b610b799190612cef565b6101f854909150610b93906001600160a01b031682611a17565b610b9b611a21565b610ba58787611a50565b610bad611a81565b50508015610bf6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050505050565b6101f8546001600160a01b031633148015610c2057506001600160a01b03811615155b6040518060400160405280600381526020016231303160e81b81525090610c5a5760405162461bcd60e51b81526004016106ce919061274b565b506101f8546001600160a01b0382811691161461070b576101f880546001600160a01b0383166001600160a01b031990911617905550565b6060603780546105d490612b1f565b6001600160a01b038116600090815261019560205260408120548015610d17576001600160a01b038316600090815261019560205260409020610ce5600183612bb7565b81548110610cf557610cf5612d11565b60009182526020909120015464010000000090046001600160e01b0316610d1a565b60005b6001600160e01b03169392505050565b60003381610d388286611221565b905083811015610d985760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106ce565b6107378286868403611347565b6000336106658185856114e5565b610dbb611ab0565b60006101fb54116040518060400160405280600381526020016232303360e81b81525090610dfc5760405162461bcd60e51b81526004016106ce919061274b565b506040516346ec8d2b60e11b81526004810182905282906000906001600160a01b03831690638dd91a5690602401600060405180830381865afa158015610e47573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e6f9190810190612f70565b60c081015160408051808201909152600381526203130360ec1b60208201529192506001600160a01b03163314610eb95760405162461bcd60e51b81526004016106ce919061274b565b506000610ecf826101e001518360400151610742565b90506101fb54811115610ee257506101fb545b3360009081526101fa602090815260408083206101e08601516001600160a01b0316845290915281208054839290610f1b908490612bce565b90915550610f2b90503382611a17565b806101fb6000828254610f3e9190612bb7565b909155505060408051338152602081018390527f5d425a3a6a3d5a60fbf147dc6659ce3dfeb701fc44fe90058c32783b8807c5749101610bed565b600061066b61093983610ca1565b83421115610fd75760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016106ce565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090611051906110499060a00160405160208183030381529060405280519060200120611af6565b858585611b44565b905061105c81611b6c565b86146110aa5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016106ce565b6110b4818861181f565b50505050505050565b8342111561110d5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106ce565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861113c8c611b6c565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061119782611af6565b905060006111a782878787611b44565b9050896001600160a01b0316816001600160a01b03161461120a5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106ce565b6112158a8a8a611347565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b038316600090815261019560205260409020805463ffffffff841690811061129157611291612d11565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6112d9611903565b6001600160a01b03811661133e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ce565b61070b8161195d565b6001600160a01b0383166113a95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106ce565b6001600160a01b03821661140a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106ce565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006114778484611221565b905060001981146114df57818110156114d25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106ce565b6114df8484848403611347565b50505050565b6001600160a01b0383166115495760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106ce565b6001600160a01b0382166115ab5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106ce565b6115b6838383611b95565b6001600160a01b0383166000908152603360205260409020548181101561162e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106ce565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061168e9086815260200190565b60405180910390a36114df848484611ba5565b60006107197f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6116d161012d5490565b61012e546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b81546000908181600581111561177857600061173984611bb0565b6117439085612bb7565b600088815260209020909150869082015463ffffffff16111561176857809150611776565b611773816001612bce565b92505b505b808210156117c557600061178c8383611c95565b600088815260209020909150869082015463ffffffff1611156117b1578091506117bf565b6117bc816001612bce565b92505b50611778565b80156117ff576117e8866117da600184612bb7565b600091825260209091200190565b5464010000000090046001600160e01b0316611802565b60005b6001600160e01b03169695505050505050565b6109538282611cb0565b6001600160a01b0382811660008181526101946020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46114df828483611cc9565b600063ffffffff8211156118ff5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016106ce565b5090565b60fb546001600160a01b031633146109285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ce565b60fb80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160601b038211156118ff5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084016106ce565b6109538282611e08565b600054610100900460ff16611a485760405162461bcd60e51b81526004016106ce906131d1565b610928611e98565b600054610100900460ff16611a775760405162461bcd60e51b81526004016106ce906131d1565b6109538282611ecb565b600054610100900460ff16611aa85760405162461bcd60e51b81526004016106ce906131d1565b610928611f19565b60655460ff16156109285760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106ce565b600061066b611b036116a1565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611b5587878787611f49565b91509150611b628161200d565b5095945050505050565b6001600160a01b0381166000908152610161602052604090208054600181018255905b50919050565b611ba083838361215b565b505050565b611ba08383836121c1565b600081611bbf57506000919050565b60006001611bcc846121f4565b901c6001901b90506001818481611be557611be5612cd9565b048201901c90506001818481611bfd57611bfd612cd9565b048201901c90506001818481611c1557611c15612cd9565b048201901c90506001818481611c2d57611c2d612cd9565b048201901c90506001818481611c4557611c45612cd9565b048201901c90506001818481611c5d57611c5d612cd9565b048201901c90506001818481611c7557611c75612cd9565b048201901c90506108d881828581611c8f57611c8f612cd9565b04612288565b6000611ca46002848418612cef565b6108d890848416612bce565b611cba828261229e565b6114df6101966123e5836123f1565b816001600160a01b0316836001600160a01b031614158015611ceb5750600081115b15611ba0576001600160a01b03831615611d7a576001600160a01b0383166000908152610195602052604081208190611d27906123e5856123f1565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611d6f929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611ba0576001600160a01b0382166000908152610195602052604081208190611db190612545856123f1565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611df9929190918252602082015260400190565b60405180910390a25050505050565b611e128282612551565b6001600160601b03611e2261070e565b1115611e895760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016106ce565b6114df610196612545836123f1565b600054610100900460ff16611ebf5760405162461bcd60e51b81526004016106ce906131d1565b6065805460ff19169055565b600054610100900460ff16611ef25760405162461bcd60e51b81526004016106ce906131d1565b8151611f0590603690602085019061268f565b508051611ba090603790602084019061268f565b600054610100900460ff16611f405760405162461bcd60e51b81526004016106ce906131d1565b6109283361195d565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611f805750600090506003612004565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611fd4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ffd57600060019250925050612004565b9150600090505b94509492505050565b60008160048111156120215761202161321c565b141561202a5750565b600181600481111561203e5761203e61321c565b141561208c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106ce565b60028160048111156120a0576120a061321c565b14156120ee5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106ce565b60038160048111156121025761210261321c565b141561070b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106ce565b60655460ff1615611ba05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016106ce565b6001600160a01b0383811660009081526101946020526040808220548584168352912054611ba092918216911683611cc9565b600080608083901c1561220957608092831c92015b604083901c1561221b57604092831c92015b602083901c1561222d57602092831c92015b601083901c1561223f57601092831c92015b600883901c1561225157600892831c92015b600483901c1561226357600492831c92015b600283901c1561227557600292831c92015b600183901c1561066b5760010192915050565b600081831061229757816108d8565b5090919050565b6001600160a01b0382166122fe5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106ce565b61230a82600083611b95565b6001600160a01b0382166000908152603360205260409020548181101561237e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106ce565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611ba083600084611ba5565b60006108d88284612bb7565b8254600090819081811561243e5761240e876117da600185612bb7565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152612453565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061247384868863ffffffff16565b925060008211801561248b5750805163ffffffff1643145b156124d05761249983612626565b6124a8886117da600186612bb7565b80546001600160e01b03929092166401000000000263ffffffff90921691909117905561253b565b8660405180604001604052806124e54361189a565b63ffffffff1681526020016124f986612626565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b60006108d88284612bce565b6001600160a01b0382166125a75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106ce565b6125b360008383611b95565b80603560008282546125c59190612bce565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361095360008383611ba5565b60006001600160e01b038211156118ff5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016106ce565b82805461269b90612b1f565b90600052602060002090601f0160209004810192826126bd5760008555612703565b82601f106126d657805160ff1916838001178555612703565b82800160010185558215612703579182015b828111156127035782518255916020019190600101906126e8565b506118ff9291505b808211156118ff576000815560010161270b565b60005b8381101561273a578181015183820152602001612722565b838111156114df5750506000910152565b602081526000825180602084015261276a81604085016020870161271f565b601f01601f19169190910160400192915050565b6001600160a01b038116811461070b57600080fd5b600080604083850312156127a657600080fd5b82356127b18161277e565b946020939093013593505050565b6000602082840312156127d157600080fd5b81356108d88161277e565b6000806000606084860312156127f157600080fd5b83356127fc8161277e565b9250602084013561280c8161277e565b929592945050506040919091013590565b60006020828403121561282f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561286f5761286f612836565b60405290565b604051610260810167ffffffffffffffff8111828210171561286f5761286f612836565b604051601f8201601f1916810167ffffffffffffffff811182821017156128c2576128c2612836565b604052919050565b600067ffffffffffffffff8211156128e4576128e4612836565b50601f01601f191660200190565b600082601f83011261290357600080fd5b8135612916612911826128ca565b612899565b81815284602083860101111561292b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561295e57600080fd5b843567ffffffffffffffff8082111561297657600080fd5b612982888389016128f2565b9550602087013591508082111561299857600080fd5b506129a5878288016128f2565b93505060408501356129b68161277e565b915060608501356129c68161277e565b939692955090935050565b600080604083850312156129e457600080fd5b82356129ef8161277e565b915060208301356129ff8161277e565b809150509250929050565b803560ff81168114612a1b57600080fd5b919050565b60008060008060008060c08789031215612a3957600080fd5b8635612a448161277e565b95506020870135945060408701359350612a6060608801612a0a565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215612a9557600080fd5b8735612aa08161277e565b96506020880135612ab08161277e565b95506040880135945060608801359350612acc60808901612a0a565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215612afb57600080fd5b8235612b068161277e565b9150602083013563ffffffff811681146129ff57600080fd5b600181811c90821680612b3357607f821691505b60208210811415611b8f57634e487b7160e01b600052602260045260246000fd5b805162ffffff81168114612a1b57600080fd5b600060208284031215612b7957600080fd5b6108d882612b54565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612bb257612bb2612b82565b500290565b600082821015612bc957612bc9612b82565b500390565b60008219821115612be157612be1612b82565b500190565b600181815b80851115612c21578160001904821115612c0757612c07612b82565b80851615612c1457918102915b93841c9390800290612beb565b509250929050565b600082612c385750600161066b565b81612c455750600061066b565b8160018114612c5b5760028114612c6557612c81565b600191505061066b565b60ff841115612c7657612c76612b82565b50506001821b61066b565b5060208310610133831016604e8410600b8410161715612ca4575081810a61066b565b612cae8383612be6565b8060001904821115612cc257612cc2612b82565b029392505050565b60006108d860ff841683612c29565b634e487b7160e01b600052601260045260246000fd5b600082612d0c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b8051612a1b8161277e565b600082601f830112612d4357600080fd5b8151612d51612911826128ca565b818152846020838601011115612d6657600080fd5b612d7782602083016020870161271f565b949350505050565b600060a08284031215612d9157600080fd5b612d9961284c565b9050815167ffffffffffffffff80821115612db357600080fd5b612dbf85838601612d32565b83526020840151915080821115612dd557600080fd5b612de185838601612d32565b60208401526040840151915080821115612dfa57600080fd5b612e0685838601612d32565b60408401526060840151915080821115612e1f57600080fd5b612e2b85838601612d32565b60608401526080840151915080821115612e4457600080fd5b50612e5184828501612d32565b60808301525092915050565b600067ffffffffffffffff821115612e7757612e77612836565b5060051b60200190565b600082601f830112612e9257600080fd5b81516020612ea261291183612e5d565b82815260059290921b84018101918181019086841115612ec157600080fd5b8286015b84811015612f0157805167ffffffffffffffff811115612ee55760008081fd5b612ef38986838b0101612d32565b845250918301918301612ec5565b509695505050505050565b600082601f830112612f1d57600080fd5b81516020612f2d61291183612e5d565b82815260059290921b84018101918181019086841115612f4c57600080fd5b8286015b84811015612f01578051612f638161277e565b8352918301918301612f50565b600060208284031215612f8257600080fd5b815167ffffffffffffffff80821115612f9a57600080fd5b908301906102608286031215612faf57600080fd5b612fb7612875565b612fc083612b54565b8152612fce60208401612b54565b602082015260408301516040820152612fe960608401612d27565b606082015260808301518281111561300057600080fd5b61300c87828601612d32565b60808301525060a08301518281111561302457600080fd5b61303087828601612d32565b60a08301525061304260c08401612d27565b60c082015260e08301518281111561305957600080fd5b61306587828601612d32565b60e083015250610100808401518381111561307f57600080fd5b61308b88828701612d32565b82840152505061012080840151838111156130a557600080fd5b6130b188828701612d32565b82840152505061014080840151838111156130cb57600080fd5b6130d788828701612d7f565b82840152505061016080840151838111156130f157600080fd5b6130fd88828701612e81565b828401525050610180808401518381111561311757600080fd5b61312388828701612e81565b8284015250506101a0808401518381111561313d57600080fd5b61314988828701612d32565b8284015250506101c08084015181830152506101e0613169818501612d27565b90820152610200838101518381111561318157600080fd5b61318d88828701612d32565b82840152505061022080840151838111156131a757600080fd5b6131b388828701612f0c565b91830191909152506102409283015192810192909252509392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220762485e01e1eaa4d010e2a4e94b49f10301c765602e81042b3a49b58da4b8bdc64736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3268 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xF4A290F7 EQ PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0xAAD3EC96 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xC3678F35 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F283970 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x94527729 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x32974838 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BC45C9 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x16A5041F EQ PUSH2 0x2AB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 SLOAD PUSH2 0x256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x29B PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x281D JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x256 PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x194 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x29B JUMP JUMPDEST PUSH2 0x3AA PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x916 JUMP JUMPDEST PUSH2 0x403 PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x256 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x281D JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x2948 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x486 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D1 JUMP JUMPDEST PUSH2 0x1FA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27B PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x4E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST PUSH2 0x29B PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0xDA5 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x506 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x403 PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x1FB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x536 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0xF87 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7A JUMP JUMPDEST PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x29D1 JUMP JUMPDEST PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x574 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE8 JUMP JUMPDEST PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x5AC CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0x1F9 SLOAD PUSH2 0x256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x5D4 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x600 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x64D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x622 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x630 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x665 DUP2 DUP6 DUP6 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x694 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x313031 PUSH1 0xE8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1F9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x70B JUMPI PUSH2 0x1F8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x72C DUP6 DUP3 DUP6 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x737 DUP6 DUP6 DUP6 PUSH2 0x14E5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x63184726 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x7A2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x79F SWAP2 DUP2 ADD SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH32 0xA2D47E5E61369D0BDE38A716E62F1EA16D8124813F8EA55B832C218216E91DFC SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x82E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x1FA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x81B DUP6 PUSH3 0xFFFFFF DUP5 AND PUSH2 0x2B98 JUMP JUMPDEST PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x2BB7 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x66B JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x665 DUP2 DUP6 DUP6 PUSH2 0x855 DUP4 DUP4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8D8 SWAP1 DUP4 PUSH2 0x171E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x70B CALLER DUP3 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x70B CALLER DUP3 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x66B SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x91E PUSH2 0x1903 JUMP JUMPDEST PUSH2 0x928 PUSH1 0x0 PUSH2 0x195D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 PUSH2 0x939 DUP5 DUP5 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x949 DUP3 CALLER DUP4 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x953 DUP3 DUP3 PUSH2 0x1815 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x161 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x66B PUSH2 0x196 DUP4 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x9F3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xA0D JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA0D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xA93 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xAB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x31303 PUSH1 0xEC SHL DUP2 MSTORE POP SWAP1 PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST POP PUSH2 0x1F8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH2 0x1F9 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0xB2A PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 PUSH1 0xA PUSH2 0x2CCA JUMP JUMPDEST PUSH2 0xB43 SWAP1 PUSH4 0x5F5E100 PUSH2 0x2B98 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0xB52 DUP3 PUSH1 0x46 PUSH2 0x2B98 JUMP JUMPDEST PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x1FB SSTORE PUSH1 0x0 PUSH1 0x64 PUSH2 0xB6F DUP4 PUSH1 0x14 PUSH2 0x2B98 JUMP JUMPDEST PUSH2 0xB79 SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x1F8 SLOAD SWAP1 SWAP2 POP PUSH2 0xB93 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0xB9B PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0xBA5 DUP8 DUP8 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0xBAD PUSH2 0x1A81 JUMP JUMPDEST POP POP DUP1 ISZERO PUSH2 0xBF6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0xC20 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x313031 PUSH1 0xE8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST POP PUSH2 0x1F8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x70B JUMPI PUSH2 0x1F8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x5D4 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD17 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xCE5 PUSH1 0x1 DUP4 PUSH2 0x2BB7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCF5 JUMPI PUSH2 0xCF5 PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xD38 DUP3 DUP7 PUSH2 0x1221 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x737 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x665 DUP2 DUP6 DUP6 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0xDBB PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB SLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323033 PUSH1 0xE8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xDFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x46EC8D2B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x8DD91A56 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xE6F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2F70 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x31303 PUSH1 0xEC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xECF DUP3 PUSH2 0x1E0 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x742 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB SLOAD DUP2 GT ISZERO PUSH2 0xEE2 JUMPI POP PUSH2 0x1FB SLOAD JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x1FA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0x1E0 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF1B SWAP1 DUP5 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF2B SWAP1 POP CALLER DUP3 PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH2 0x1FB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x2BB7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x5D425A3A6A3D5A60FBF147DC6659CE3DFEB701FC44FE90058C32783B8807C574 SWAP2 ADD PUSH2 0xBED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B PUSH2 0x939 DUP4 PUSH2 0xCA1 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xFD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1051 SWAP1 PUSH2 0x1049 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1AF6 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH2 0x105C DUP2 PUSH2 0x1B6C JUMP JUMPDEST DUP7 EQ PUSH2 0x10AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x10B4 DUP2 DUP9 PUSH2 0x181F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x113C DUP13 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1197 DUP3 PUSH2 0x1AF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11A7 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x120A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x1215 DUP11 DUP11 DUP11 PUSH2 0x1347 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x1291 JUMPI PUSH2 0x1291 PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12D9 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x133E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x70B DUP2 PUSH2 0x195D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x140A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1477 DUP5 DUP5 PUSH2 0x1221 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x14DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x14DF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1347 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x15B6 DUP4 DUP4 DUP4 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x162E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x168E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x14DF DUP5 DUP5 DUP5 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x16D1 PUSH2 0x12D SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1778 JUMPI PUSH1 0x0 PUSH2 0x1739 DUP5 PUSH2 0x1BB0 JUMP JUMPDEST PUSH2 0x1743 SWAP1 DUP6 PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1768 JUMPI DUP1 SWAP2 POP PUSH2 0x1776 JUMP JUMPDEST PUSH2 0x1773 DUP2 PUSH1 0x1 PUSH2 0x2BCE JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x0 PUSH2 0x178C DUP4 DUP4 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x17B1 JUMPI DUP1 SWAP2 POP PUSH2 0x17BF JUMP JUMPDEST PUSH2 0x17BC DUP2 PUSH1 0x1 PUSH2 0x2BCE JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1778 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17FF JUMPI PUSH2 0x17E8 DUP7 PUSH2 0x17DA PUSH1 0x1 DUP5 PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x953 DUP3 DUP3 PUSH2 0x1CB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x194 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x33 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x14DF DUP3 DUP5 DUP4 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0xFB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2039 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x362062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x953 DUP3 DUP3 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH2 0x928 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH2 0x953 DUP3 DUP3 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH2 0x928 PUSH2 0x1F19 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B PUSH2 0x1B03 PUSH2 0x16A1 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1B55 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1B62 DUP2 PUSH2 0x200D JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x161 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA0 DUP4 DUP4 DUP4 PUSH2 0x215B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1BA0 DUP4 DUP4 DUP4 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1BBF JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1BCC DUP5 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BE5 JUMPI PUSH2 0x1BE5 PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BFD JUMPI PUSH2 0x1BFD PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C15 JUMPI PUSH2 0x1C15 PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C2D JUMPI PUSH2 0x1C2D PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C45 JUMPI PUSH2 0x1C45 PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C5D JUMPI PUSH2 0x1C5D PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C75 JUMPI PUSH2 0x1C75 PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x8D8 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1C8F JUMPI PUSH2 0x1C8F PUSH2 0x2CD9 JUMP JUMPDEST DIV PUSH2 0x2288 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x8D8 SWAP1 DUP5 DUP5 AND PUSH2 0x2BCE JUMP JUMPDEST PUSH2 0x1CBA DUP3 DUP3 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x14DF PUSH2 0x196 PUSH2 0x23E5 DUP4 PUSH2 0x23F1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1CEB JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1D27 SWAP1 PUSH2 0x23E5 DUP6 PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D6F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1DB1 SWAP1 PUSH2 0x2545 DUP6 PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DF9 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E12 DUP3 DUP3 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x1E22 PUSH2 0x70E JUMP JUMPDEST GT ISZERO PUSH2 0x1E89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x766572666C6F77696E6720766F746573 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x14DF PUSH2 0x196 PUSH2 0x2545 DUP4 PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1F05 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x268F JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1BA0 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH2 0x928 CALLER PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1F80 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x2004 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FFD JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2004 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2021 JUMPI PUSH2 0x2021 PUSH2 0x321C JUMP JUMPDEST EQ ISZERO PUSH2 0x202A JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x203E JUMPI PUSH2 0x203E PUSH2 0x321C JUMP JUMPDEST EQ ISZERO PUSH2 0x208C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x20A0 PUSH2 0x321C JUMP JUMPDEST EQ ISZERO PUSH2 0x20EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2102 JUMPI PUSH2 0x2102 PUSH2 0x321C JUMP JUMPDEST EQ ISZERO PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x194 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1BA0 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x2209 JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x221B JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x222D JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x223F JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x2251 JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x2263 JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x2275 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0x66B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2297 JUMPI DUP2 PUSH2 0x8D8 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x22FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x230A DUP3 PUSH1 0x0 DUP4 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1BA0 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 DUP3 DUP5 PUSH2 0x2BB7 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 DUP2 ISZERO PUSH2 0x243E JUMPI PUSH2 0x240E DUP8 PUSH2 0x17DA PUSH1 0x1 DUP6 PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 POP PUSH2 0x2473 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x248B JUMPI POP DUP1 MLOAD PUSH4 0xFFFFFFFF AND NUMBER EQ JUMPDEST ISZERO PUSH2 0x24D0 JUMPI PUSH2 0x2499 DUP4 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x24A8 DUP9 PUSH2 0x17DA PUSH1 0x1 DUP7 PUSH2 0x2BB7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x253B JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x24E5 NUMBER PUSH2 0x189A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24F9 DUP7 PUSH2 0x2626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 DUP3 DUP5 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x25B3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B95 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x25C5 SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x953 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x269B SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x26BD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2703 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x26D6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2703 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2703 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2703 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x26E8 JUMP JUMPDEST POP PUSH2 0x18FF SWAP3 SWAP2 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x270B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2722 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14DF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x276A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x271F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x27B1 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D8 DUP2 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x27FC DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x280C DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x282F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x286F JUMPI PUSH2 0x286F PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x286F JUMPI PUSH2 0x286F PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28C2 JUMPI PUSH2 0x28C2 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28E4 JUMPI PUSH2 0x28E4 PUSH2 0x2836 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2916 PUSH2 0x2911 DUP3 PUSH2 0x28CA JUMP JUMPDEST PUSH2 0x2899 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x292B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x295E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2982 DUP9 DUP4 DUP10 ADD PUSH2 0x28F2 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A5 DUP8 DUP3 DUP9 ADD PUSH2 0x28F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x29B6 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x29C6 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x29EF DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x29FF DUP2 PUSH2 0x277E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2A44 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2A60 PUSH1 0x60 DUP9 ADD PUSH2 0x2A0A JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2AA0 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x2AB0 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2ACC PUSH1 0x80 DUP10 ADD PUSH2 0x2A0A JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B06 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x29FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2B33 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D8 DUP3 PUSH2 0x2B54 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2BB2 JUMPI PUSH2 0x2BB2 PUSH2 0x2B82 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2BC9 JUMPI PUSH2 0x2BC9 PUSH2 0x2B82 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2BE1 JUMPI PUSH2 0x2BE1 PUSH2 0x2B82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2C21 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2C07 JUMPI PUSH2 0x2C07 PUSH2 0x2B82 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2C14 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2BEB JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C38 JUMPI POP PUSH1 0x1 PUSH2 0x66B JUMP JUMPDEST DUP2 PUSH2 0x2C45 JUMPI POP PUSH1 0x0 PUSH2 0x66B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2C5B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2C65 JUMPI PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x66B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2C76 JUMPI PUSH2 0x2C76 PUSH2 0x2B82 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x66B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2CA4 JUMPI POP DUP2 DUP2 EXP PUSH2 0x66B JUMP JUMPDEST PUSH2 0x2CAE DUP4 DUP4 PUSH2 0x2BE6 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2CC2 JUMPI PUSH2 0x2CC2 PUSH2 0x2B82 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2C29 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2D0C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2A1B DUP2 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2D51 PUSH2 0x2911 DUP3 PUSH2 0x28CA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D77 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x271F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D99 PUSH2 0x284C JUMP JUMPDEST SWAP1 POP DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DBF DUP6 DUP4 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DE1 DUP6 DUP4 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E06 DUP6 DUP4 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2B DUP6 DUP4 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E51 DUP5 DUP3 DUP6 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E77 JUMPI PUSH2 0x2E77 PUSH2 0x2836 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x2EA2 PUSH2 0x2911 DUP4 PUSH2 0x2E5D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F01 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EE5 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2EF3 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x2D32 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2EC5 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x2F2D PUSH2 0x2911 DUP4 PUSH2 0x2E5D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2F4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F01 JUMPI DUP1 MLOAD PUSH2 0x2F63 DUP2 PUSH2 0x277E JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2F50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x260 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x2FAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FB7 PUSH2 0x2875 JUMP JUMPDEST PUSH2 0x2FC0 DUP4 PUSH2 0x2B54 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2FCE PUSH1 0x20 DUP5 ADD PUSH2 0x2B54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x2FE9 PUSH1 0x60 DUP5 ADD PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x3000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x300C DUP8 DUP3 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x3024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3030 DUP8 DUP3 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x3042 PUSH1 0xC0 DUP5 ADD PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x3059 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3065 DUP8 DUP3 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x307F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x308B DUP9 DUP3 DUP8 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x30A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30B1 DUP9 DUP3 DUP8 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x30CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30D7 DUP9 DUP3 DUP8 ADD PUSH2 0x2D7F JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x30F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30FD DUP9 DUP3 DUP8 ADD PUSH2 0x2E81 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x180 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x3117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3123 DUP9 DUP3 DUP8 ADD PUSH2 0x2E81 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x1A0 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x313D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3149 DUP9 DUP3 DUP8 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x1C0 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x1E0 PUSH2 0x3169 DUP2 DUP6 ADD PUSH2 0x2D27 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x200 DUP4 DUP2 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x3181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318D DUP9 DUP3 DUP8 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x220 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x31A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B3 DUP9 DUP3 DUP8 ADD PUSH2 0x2F0C JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x240 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x2485E01E1EAA4D010E2A4E94B49F10301C765602E81042 0xB3 LOG4 SWAP12 PC 0xDA 0x4B DUP12 0xDC PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"636:3821:30:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_2872":{"entryPoint":2104,"id":2872,"parameterSlots":0,"returnSlots":1},"@_EIP712NameHash_4310":{"entryPoint":null,"id":4310,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_4319":{"entryPoint":null,"id":4319,"parameterSlots":0,"returnSlots":1},"@__ERC20Pausable_init_1859":{"entryPoint":6689,"id":1859,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_1131":{"entryPoint":6736,"id":1131,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_1149":{"entryPoint":7883,"id":1149,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_605":{"entryPoint":6785,"id":605,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_616":{"entryPoint":7961,"id":616,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_998":{"entryPoint":7832,"id":998,"parameterSlots":0,"returnSlots":0},"@_add_2657":{"entryPoint":9541,"id":2657,"parameterSlots":2,"returnSlots":1},"@_admin_7425":{"entryPoint":null,"id":7425,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1690":{"entryPoint":null,"id":1690,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_2433":{"entryPoint":8641,"id":2433,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_7644":{"entryPoint":7077,"id":7644,"parameterSlots":3,"returnSlots":0},"@_approve_1625":{"entryPoint":4935,"id":1625,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1679":{"entryPoint":null,"id":1679,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1892":{"entryPoint":8539,"id":1892,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_7623":{"entryPoint":7061,"id":7623,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_4285":{"entryPoint":null,"id":4285,"parameterSlots":3,"returnSlots":1},"@_burn_1580":{"entryPoint":8862,"id":1580,"parameterSlots":2,"returnSlots":0},"@_burn_2403":{"entryPoint":7344,"id":2403,"parameterSlots":2,"returnSlots":0},"@_burn_7680":{"entryPoint":6165,"id":7680,"parameterSlots":2,"returnSlots":0},"@_checkOwner_647":{"entryPoint":6403,"id":647,"parameterSlots":0,"returnSlots":0},"@_checkpointsLookup_2261":{"entryPoint":5918,"id":2261,"parameterSlots":2,"returnSlots":1},"@_claimed_7433":{"entryPoint":null,"id":7433,"parameterSlots":0,"returnSlots":0},"@_delegate_2472":{"entryPoint":6175,"id":2472,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_4258":{"entryPoint":5793,"id":4258,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_4301":{"entryPoint":6902,"id":4301,"parameterSlots":1,"returnSlots":1},"@_maxSupply_1968":{"entryPoint":null,"id":1968,"parameterSlots":0,"returnSlots":1},"@_mint_1508":{"entryPoint":9553,"id":1508,"parameterSlots":2,"returnSlots":0},"@_mint_2380":{"entryPoint":7688,"id":2380,"parameterSlots":2,"returnSlots":0},"@_mint_7662":{"entryPoint":6679,"id":7662,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_2543":{"entryPoint":7369,"id":2543,"parameterSlots":3,"returnSlots":0},"@_msgSender_3550":{"entryPoint":null,"id":3550,"parameterSlots":0,"returnSlots":1},"@_paramAddr_7427":{"entryPoint":null,"id":7427,"parameterSlots":0,"returnSlots":0},"@_remainClaimSupply_7435":{"entryPoint":null,"id":7435,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1035":{"entryPoint":6832,"id":1035,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1668":{"entryPoint":5227,"id":1668,"parameterSlots":3,"returnSlots":0},"@_subtract_2671":{"entryPoint":9189,"id":2671,"parameterSlots":2,"returnSlots":1},"@_throwError_3868":{"entryPoint":8205,"id":3868,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_704":{"entryPoint":6493,"id":704,"parameterSlots":1,"returnSlots":0},"@_transfer_1451":{"entryPoint":5349,"id":1451,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_2685":{"entryPoint":null,"id":2685,"parameterSlots":2,"returnSlots":1},"@_useNonce_2901":{"entryPoint":7020,"id":2901,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_2643":{"entryPoint":9201,"id":2643,"parameterSlots":3,"returnSlots":2},"@allowance_1246":{"entryPoint":4641,"id":1246,"parameterSlots":2,"returnSlots":1},"@approve_1271":{"entryPoint":1623,"id":1271,"parameterSlots":2,"returnSlots":1},"@average_4447":{"entryPoint":7317,"id":4447,"parameterSlots":2,"returnSlots":1},"@balanceOf_1203":{"entryPoint":null,"id":1203,"parameterSlots":1,"returnSlots":1},"@burnFrom_1832":{"entryPoint":2366,"id":1832,"parameterSlots":2,"returnSlots":0},"@burn_1811":{"entryPoint":2271,"id":1811,"parameterSlots":1,"returnSlots":0},"@calculateAmountClaim_7725":{"entryPoint":1858,"id":7725,"parameterSlots":2,"returnSlots":1},"@changeAdmin_7549":{"entryPoint":3069,"id":7549,"parameterSlots":1,"returnSlots":0},"@changeParamAddress_7580":{"entryPoint":1649,"id":7580,"parameterSlots":1,"returnSlots":0},"@checkpoints_2043":{"entryPoint":4684,"id":2043,"parameterSlots":2,"returnSlots":1},"@claim_7816":{"entryPoint":3507,"id":7816,"parameterSlots":2,"returnSlots":0},"@current_3583":{"entryPoint":null,"id":3583,"parameterSlots":1,"returnSlots":1},"@decimals_7589":{"entryPoint":null,"id":7589,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1374":{"entryPoint":3370,"id":1374,"parameterSlots":2,"returnSlots":1},"@delegateBySig_2335":{"entryPoint":3975,"id":2335,"parameterSlots":6,"returnSlots":0},"@delegate_2275":{"entryPoint":2281,"id":2275,"parameterSlots":1,"returnSlots":0},"@delegates_2074":{"entryPoint":null,"id":2074,"parameterSlots":1,"returnSlots":1},"@getCurrentVotes_1935":{"entryPoint":3961,"id":1935,"parameterSlots":1,"returnSlots":1},"@getPastTotalSupply_2155":{"entryPoint":2422,"id":2155,"parameterSlots":1,"returnSlots":1},"@getPastVotes_2132":{"entryPoint":2148,"id":2132,"parameterSlots":2,"returnSlots":1},"@getPriorVotes_1954":{"entryPoint":2346,"id":1954,"parameterSlots":2,"returnSlots":1},"@getVotes_2105":{"entryPoint":3233,"id":2105,"parameterSlots":1,"returnSlots":1},"@increaseAllowance_1333":{"entryPoint":2114,"id":1333,"parameterSlots":2,"returnSlots":1},"@increment_3597":{"entryPoint":null,"id":3597,"parameterSlots":1,"returnSlots":0},"@initialize_7518":{"entryPoint":2515,"id":7518,"parameterSlots":4,"returnSlots":0},"@isContract_3257":{"entryPoint":null,"id":3257,"parameterSlots":1,"returnSlots":1},"@log2_4918":{"entryPoint":8692,"id":4918,"parameterSlots":1,"returnSlots":1},"@min_4424":{"entryPoint":8840,"id":4424,"parameterSlots":2,"returnSlots":1},"@name_1159":{"entryPoint":1477,"id":1159,"parameterSlots":0,"returnSlots":1},"@nonces_2861":{"entryPoint":2391,"id":2861,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_2060":{"entryPoint":2291,"id":2060,"parameterSlots":1,"returnSlots":1},"@owner_633":{"entryPoint":null,"id":633,"parameterSlots":0,"returnSlots":1},"@paused_1023":{"entryPoint":null,"id":1023,"parameterSlots":0,"returnSlots":1},"@permit_2845":{"entryPoint":4285,"id":2845,"parameterSlots":7,"returnSlots":0},"@recover_4115":{"entryPoint":6980,"id":4115,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_661":{"entryPoint":2326,"id":661,"parameterSlots":0,"returnSlots":0},"@sqrt_4750":{"entryPoint":7088,"id":4750,"parameterSlots":1,"returnSlots":1},"@symbol_1169":{"entryPoint":3218,"id":1169,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_4174":{"entryPoint":null,"id":4174,"parameterSlots":2,"returnSlots":1},"@toUint224_5349":{"entryPoint":9766,"id":5349,"parameterSlots":1,"returnSlots":1},"@toUint32_5949":{"entryPoint":6298,"id":5949,"parameterSlots":1,"returnSlots":1},"@toUint96_5749":{"entryPoint":6575,"id":5749,"parameterSlots":1,"returnSlots":1},"@totalSupply_1189":{"entryPoint":null,"id":1189,"parameterSlots":0,"returnSlots":1},"@totalSupply_7602":{"entryPoint":1806,"id":7602,"parameterSlots":0,"returnSlots":1},"@transferFrom_1304":{"entryPoint":1822,"id":1304,"parameterSlots":3,"returnSlots":1},"@transferOwnership_684":{"entryPoint":4817,"id":684,"parameterSlots":1,"returnSlots":0},"@transfer_1228":{"entryPoint":3493,"id":1228,"parameterSlots":2,"returnSlots":1},"@tryRecover_4082":{"entryPoint":8009,"id":4082,"parameterSlots":4,"returnSlots":2},"abi_decode_address_fromMemory":{"entryPoint":11559,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":12044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_string_dyn_fromMemory":{"entryPoint":11905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":10482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":11570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_ProjectSocial_fromMemory":{"entryPoint":11647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10705,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10204,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10874,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10131,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10784,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":10984,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address":{"entryPoint":10568,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$_Project_$8077_memory_ptr_fromMemory":{"entryPoint":12144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint24_fromMemory":{"entryPoint":11111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10269,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint24_fromMemory":{"entryPoint":11092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint8":{"entryPoint":10762,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12753,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$2006_memory_ptr__to_t_struct$_Checkpoint_$2006_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10393,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_4196":{"entryPoint":10316,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_4198":{"entryPoint":10357,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_string_dyn":{"entryPoint":11869,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":10442,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11214,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11503,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":11238,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":11466,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":11305,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11160,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11191,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":10015,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11039,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":11138,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11481,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12828,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11537,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10294,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":10110,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:32465:37","statements":[{"nodeType":"YulBlock","src":"6:3:37","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:37","statements":[{"nodeType":"YulAssignment","src":"125:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:37"},"nodeType":"YulFunctionCall","src":"133:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:37"},"nodeType":"YulFunctionCall","src":"194:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:37"},"nodeType":"YulFunctionCall","src":"190:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:37"},"nodeType":"YulFunctionCall","src":"178:32:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:37"},"nodeType":"YulFunctionCall","src":"160:51:37"},"nodeType":"YulExpressionStatement","src":"160:51:37"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:37","type":""}],"src":"14:203:37"},{"body":{"nodeType":"YulBlock","src":"275:205:37","statements":[{"nodeType":"YulVariableDeclaration","src":"285:10:37","value":{"kind":"number","nodeType":"YulLiteral","src":"294:1:37","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"289:1:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"354:63:37","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"379:3:37"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"375:3:37"},"nodeType":"YulFunctionCall","src":"375:11:37"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"398:3:37"},{"name":"i","nodeType":"YulIdentifier","src":"403:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:37"},"nodeType":"YulFunctionCall","src":"394:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"388:5:37"},"nodeType":"YulFunctionCall","src":"388:18:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"368:6:37"},"nodeType":"YulFunctionCall","src":"368:39:37"},"nodeType":"YulExpressionStatement","src":"368:39:37"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"315:1:37"},{"name":"length","nodeType":"YulIdentifier","src":"318:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"312:2:37"},"nodeType":"YulFunctionCall","src":"312:13:37"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"326:19:37","statements":[{"nodeType":"YulAssignment","src":"328:15:37","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"337:1:37"},{"kind":"number","nodeType":"YulLiteral","src":"340:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"333:3:37"},"nodeType":"YulFunctionCall","src":"333:10:37"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"328:1:37"}]}]},"pre":{"nodeType":"YulBlock","src":"308:3:37","statements":[]},"src":"304:113:37"},{"body":{"nodeType":"YulBlock","src":"443:31:37","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"456:3:37"},{"name":"length","nodeType":"YulIdentifier","src":"461:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"452:3:37"},"nodeType":"YulFunctionCall","src":"452:16:37"},{"kind":"number","nodeType":"YulLiteral","src":"470:1:37","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:37"},"nodeType":"YulFunctionCall","src":"445:27:37"},"nodeType":"YulExpressionStatement","src":"445:27:37"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"432:1:37"},{"name":"length","nodeType":"YulIdentifier","src":"435:6:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"429:2:37"},"nodeType":"YulFunctionCall","src":"429:13:37"},"nodeType":"YulIf","src":"426:48:37"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"253:3:37","type":""},{"name":"dst","nodeType":"YulTypedName","src":"258:3:37","type":""},{"name":"length","nodeType":"YulTypedName","src":"263:6:37","type":""}],"src":"222:258:37"},{"body":{"nodeType":"YulBlock","src":"606:262:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"623:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"634:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"616:6:37"},"nodeType":"YulFunctionCall","src":"616:21:37"},"nodeType":"YulExpressionStatement","src":"616:21:37"},{"nodeType":"YulVariableDeclaration","src":"646:27:37","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"666:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"660:5:37"},"nodeType":"YulFunctionCall","src":"660:13:37"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"650:6:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"693:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"704:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"689:3:37"},"nodeType":"YulFunctionCall","src":"689:18:37"},{"name":"length","nodeType":"YulIdentifier","src":"709:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"682:6:37"},"nodeType":"YulFunctionCall","src":"682:34:37"},"nodeType":"YulExpressionStatement","src":"682:34:37"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"751:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"747:3:37"},"nodeType":"YulFunctionCall","src":"747:15:37"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"768:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"779:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"764:3:37"},"nodeType":"YulFunctionCall","src":"764:18:37"},{"name":"length","nodeType":"YulIdentifier","src":"784:6:37"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"725:21:37"},"nodeType":"YulFunctionCall","src":"725:66:37"},"nodeType":"YulExpressionStatement","src":"725:66:37"},{"nodeType":"YulAssignment","src":"800:62:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"816:9:37"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"835:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"843:2:37","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:37"},"nodeType":"YulFunctionCall","src":"831:15:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"852:2:37","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"848:3:37"},"nodeType":"YulFunctionCall","src":"848:7:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"827:3:37"},"nodeType":"YulFunctionCall","src":"827:29:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"812:3:37"},"nodeType":"YulFunctionCall","src":"812:45:37"},{"kind":"number","nodeType":"YulLiteral","src":"859:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"808:3:37"},"nodeType":"YulFunctionCall","src":"808:54:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"800:4:37"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"575:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"586:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"597:4:37","type":""}],"src":"485:383:37"},{"body":{"nodeType":"YulBlock","src":"918:86:37","statements":[{"body":{"nodeType":"YulBlock","src":"982:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"991:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"994:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"984:6:37"},"nodeType":"YulFunctionCall","src":"984:12:37"},"nodeType":"YulExpressionStatement","src":"984:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"941:5:37"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"952:5:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"967:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"972:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"963:3:37"},"nodeType":"YulFunctionCall","src":"963:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"976:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"959:3:37"},"nodeType":"YulFunctionCall","src":"959:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"948:3:37"},"nodeType":"YulFunctionCall","src":"948:31:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"938:2:37"},"nodeType":"YulFunctionCall","src":"938:42:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"931:6:37"},"nodeType":"YulFunctionCall","src":"931:50:37"},"nodeType":"YulIf","src":"928:70:37"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"907:5:37","type":""}],"src":"873:131:37"},{"body":{"nodeType":"YulBlock","src":"1096:228:37","statements":[{"body":{"nodeType":"YulBlock","src":"1142:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1151:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1154:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1144:6:37"},"nodeType":"YulFunctionCall","src":"1144:12:37"},"nodeType":"YulExpressionStatement","src":"1144:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1117:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"1126:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1113:3:37"},"nodeType":"YulFunctionCall","src":"1113:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"1138:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1109:3:37"},"nodeType":"YulFunctionCall","src":"1109:32:37"},"nodeType":"YulIf","src":"1106:52:37"},{"nodeType":"YulVariableDeclaration","src":"1167:36:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1193:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1180:12:37"},"nodeType":"YulFunctionCall","src":"1180:23:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1171:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1237:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1212:24:37"},"nodeType":"YulFunctionCall","src":"1212:31:37"},"nodeType":"YulExpressionStatement","src":"1212:31:37"},{"nodeType":"YulAssignment","src":"1252:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"1262:5:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1252:6:37"}]},{"nodeType":"YulAssignment","src":"1276:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1303:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1314:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1299:3:37"},"nodeType":"YulFunctionCall","src":"1299:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1286:12:37"},"nodeType":"YulFunctionCall","src":"1286:32:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1276:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1054:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1065:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1077:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1085:6:37","type":""}],"src":"1009:315:37"},{"body":{"nodeType":"YulBlock","src":"1424:92:37","statements":[{"nodeType":"YulAssignment","src":"1434:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1446:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1457:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1442:3:37"},"nodeType":"YulFunctionCall","src":"1442:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1434:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1476:9:37"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1501:6:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1494:6:37"},"nodeType":"YulFunctionCall","src":"1494:14:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1487:6:37"},"nodeType":"YulFunctionCall","src":"1487:22:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1469:6:37"},"nodeType":"YulFunctionCall","src":"1469:41:37"},"nodeType":"YulExpressionStatement","src":"1469:41:37"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1393:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1404:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1415:4:37","type":""}],"src":"1329:187:37"},{"body":{"nodeType":"YulBlock","src":"1591:177:37","statements":[{"body":{"nodeType":"YulBlock","src":"1637:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1646:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1649:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1639:6:37"},"nodeType":"YulFunctionCall","src":"1639:12:37"},"nodeType":"YulExpressionStatement","src":"1639:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1612:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"1621:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1608:3:37"},"nodeType":"YulFunctionCall","src":"1608:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"1633:2:37","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1604:3:37"},"nodeType":"YulFunctionCall","src":"1604:32:37"},"nodeType":"YulIf","src":"1601:52:37"},{"nodeType":"YulVariableDeclaration","src":"1662:36:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1688:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1675:12:37"},"nodeType":"YulFunctionCall","src":"1675:23:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1666:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1732:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1707:24:37"},"nodeType":"YulFunctionCall","src":"1707:31:37"},"nodeType":"YulExpressionStatement","src":"1707:31:37"},{"nodeType":"YulAssignment","src":"1747:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"1757:5:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1747:6:37"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1557:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1568:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1580:6:37","type":""}],"src":"1521:247:37"},{"body":{"nodeType":"YulBlock","src":"1874:76:37","statements":[{"nodeType":"YulAssignment","src":"1884:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1896:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"1907:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1892:3:37"},"nodeType":"YulFunctionCall","src":"1892:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1884:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"1937:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1919:6:37"},"nodeType":"YulFunctionCall","src":"1919:25:37"},"nodeType":"YulExpressionStatement","src":"1919:25:37"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1843:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1854:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1865:4:37","type":""}],"src":"1773:177:37"},{"body":{"nodeType":"YulBlock","src":"2059:352:37","statements":[{"body":{"nodeType":"YulBlock","src":"2105:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2114:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2117:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2107:6:37"},"nodeType":"YulFunctionCall","src":"2107:12:37"},"nodeType":"YulExpressionStatement","src":"2107:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2080:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"2089:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2076:3:37"},"nodeType":"YulFunctionCall","src":"2076:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"2101:2:37","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2072:3:37"},"nodeType":"YulFunctionCall","src":"2072:32:37"},"nodeType":"YulIf","src":"2069:52:37"},{"nodeType":"YulVariableDeclaration","src":"2130:36:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2156:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2143:12:37"},"nodeType":"YulFunctionCall","src":"2143:23:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2134:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2200:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2175:24:37"},"nodeType":"YulFunctionCall","src":"2175:31:37"},"nodeType":"YulExpressionStatement","src":"2175:31:37"},{"nodeType":"YulAssignment","src":"2215:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"2225:5:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2215:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"2239:47:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2271:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2282:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2267:3:37"},"nodeType":"YulFunctionCall","src":"2267:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2254:12:37"},"nodeType":"YulFunctionCall","src":"2254:32:37"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2243:7:37","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2320:7:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2295:24:37"},"nodeType":"YulFunctionCall","src":"2295:33:37"},"nodeType":"YulExpressionStatement","src":"2295:33:37"},{"nodeType":"YulAssignment","src":"2337:17:37","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2347:7:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2337:6:37"}]},{"nodeType":"YulAssignment","src":"2363:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2390:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2401:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2386:3:37"},"nodeType":"YulFunctionCall","src":"2386:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2373:12:37"},"nodeType":"YulFunctionCall","src":"2373:32:37"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2363:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2009:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2020:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2032:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2040:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2048:6:37","type":""}],"src":"1955:456:37"},{"body":{"nodeType":"YulBlock","src":"2513:87:37","statements":[{"nodeType":"YulAssignment","src":"2523:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2535:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2546:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2531:3:37"},"nodeType":"YulFunctionCall","src":"2531:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2523:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2565:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2580:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"2588:4:37","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2576:3:37"},"nodeType":"YulFunctionCall","src":"2576:17:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2558:6:37"},"nodeType":"YulFunctionCall","src":"2558:36:37"},"nodeType":"YulExpressionStatement","src":"2558:36:37"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2482:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2493:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2504:4:37","type":""}],"src":"2416:184:37"},{"body":{"nodeType":"YulBlock","src":"2706:76:37","statements":[{"nodeType":"YulAssignment","src":"2716:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2728:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"2739:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:37"},"nodeType":"YulFunctionCall","src":"2724:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2716:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2758:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"2769:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2751:6:37"},"nodeType":"YulFunctionCall","src":"2751:25:37"},"nodeType":"YulExpressionStatement","src":"2751:25:37"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2675:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2686:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2697:4:37","type":""}],"src":"2605:177:37"},{"body":{"nodeType":"YulBlock","src":"2857:110:37","statements":[{"body":{"nodeType":"YulBlock","src":"2903:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2912:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2915:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2905:6:37"},"nodeType":"YulFunctionCall","src":"2905:12:37"},"nodeType":"YulExpressionStatement","src":"2905:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2878:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"2887:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2874:3:37"},"nodeType":"YulFunctionCall","src":"2874:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"2899:2:37","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2870:3:37"},"nodeType":"YulFunctionCall","src":"2870:32:37"},"nodeType":"YulIf","src":"2867:52:37"},{"nodeType":"YulAssignment","src":"2928:33:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2951:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2938:12:37"},"nodeType":"YulFunctionCall","src":"2938:23:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2928:6:37"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2823:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2834:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2846:6:37","type":""}],"src":"2787:180:37"},{"body":{"nodeType":"YulBlock","src":"3071:93:37","statements":[{"nodeType":"YulAssignment","src":"3081:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3093:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3104:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3089:3:37"},"nodeType":"YulFunctionCall","src":"3089:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3081:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3123:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3138:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"3146:10:37","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3134:3:37"},"nodeType":"YulFunctionCall","src":"3134:23:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3116:6:37"},"nodeType":"YulFunctionCall","src":"3116:42:37"},"nodeType":"YulExpressionStatement","src":"3116:42:37"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3040:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3051:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3062:4:37","type":""}],"src":"2972:192:37"},{"body":{"nodeType":"YulBlock","src":"3268:109:37","statements":[{"nodeType":"YulAssignment","src":"3278:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3290:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"3301:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3286:3:37"},"nodeType":"YulFunctionCall","src":"3286:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3278:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3335:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"3343:26:37","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3331:3:37"},"nodeType":"YulFunctionCall","src":"3331:39:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3313:6:37"},"nodeType":"YulFunctionCall","src":"3313:58:37"},"nodeType":"YulExpressionStatement","src":"3313:58:37"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3237:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3248:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3259:4:37","type":""}],"src":"3169:208:37"},{"body":{"nodeType":"YulBlock","src":"3414:95:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3431:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3438:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3443:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3434:3:37"},"nodeType":"YulFunctionCall","src":"3434:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3424:6:37"},"nodeType":"YulFunctionCall","src":"3424:31:37"},"nodeType":"YulExpressionStatement","src":"3424:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3471:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3474:4:37","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3464:6:37"},"nodeType":"YulFunctionCall","src":"3464:15:37"},"nodeType":"YulExpressionStatement","src":"3464:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3495:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3498:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3488:6:37"},"nodeType":"YulFunctionCall","src":"3488:15:37"},"nodeType":"YulExpressionStatement","src":"3488:15:37"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3382:127:37"},{"body":{"nodeType":"YulBlock","src":"3560:207:37","statements":[{"nodeType":"YulAssignment","src":"3570:19:37","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3586:2:37","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3580:5:37"},"nodeType":"YulFunctionCall","src":"3580:9:37"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3570:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"3598:35:37","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3620:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:37","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:37"},"nodeType":"YulFunctionCall","src":"3616:17:37"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3602:10:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"3708:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3710:16:37"},"nodeType":"YulFunctionCall","src":"3710:18:37"},"nodeType":"YulExpressionStatement","src":"3710:18:37"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3651:10:37"},{"kind":"number","nodeType":"YulLiteral","src":"3663:18:37","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3648:2:37"},"nodeType":"YulFunctionCall","src":"3648:34:37"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3687:10:37"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3699:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3684:2:37"},"nodeType":"YulFunctionCall","src":"3684:22:37"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3645:2:37"},"nodeType":"YulFunctionCall","src":"3645:62:37"},"nodeType":"YulIf","src":"3642:88:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3746:2:37","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3750:10:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3739:6:37"},"nodeType":"YulFunctionCall","src":"3739:22:37"},"nodeType":"YulExpressionStatement","src":"3739:22:37"}]},"name":"allocate_memory_4196","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3549:6:37","type":""}],"src":"3514:253:37"},{"body":{"nodeType":"YulBlock","src":"3818:209:37","statements":[{"nodeType":"YulAssignment","src":"3828:19:37","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3844:2:37","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3838:5:37"},"nodeType":"YulFunctionCall","src":"3838:9:37"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3828:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"3856:37:37","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3878:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"3886:6:37","type":"","value":"0x0260"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3874:3:37"},"nodeType":"YulFunctionCall","src":"3874:19:37"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3860:10:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"3968:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3970:16:37"},"nodeType":"YulFunctionCall","src":"3970:18:37"},"nodeType":"YulExpressionStatement","src":"3970:18:37"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3911:10:37"},{"kind":"number","nodeType":"YulLiteral","src":"3923:18:37","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3908:2:37"},"nodeType":"YulFunctionCall","src":"3908:34:37"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3947:10:37"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3959:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3944:2:37"},"nodeType":"YulFunctionCall","src":"3944:22:37"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3905:2:37"},"nodeType":"YulFunctionCall","src":"3905:62:37"},"nodeType":"YulIf","src":"3902:88:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4006:2:37","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4010:10:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3999:6:37"},"nodeType":"YulFunctionCall","src":"3999:22:37"},"nodeType":"YulExpressionStatement","src":"3999:22:37"}]},"name":"allocate_memory_4198","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3807:6:37","type":""}],"src":"3772:255:37"},{"body":{"nodeType":"YulBlock","src":"4077:230:37","statements":[{"nodeType":"YulAssignment","src":"4087:19:37","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4103:2:37","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4097:5:37"},"nodeType":"YulFunctionCall","src":"4097:9:37"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4087:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"4115:58:37","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4137:6:37"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4153:4:37"},{"kind":"number","nodeType":"YulLiteral","src":"4159:2:37","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4149:3:37"},"nodeType":"YulFunctionCall","src":"4149:13:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4168:2:37","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4164:3:37"},"nodeType":"YulFunctionCall","src":"4164:7:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4145:3:37"},"nodeType":"YulFunctionCall","src":"4145:27:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:37"},"nodeType":"YulFunctionCall","src":"4133:40:37"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4119:10:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"4248:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4250:16:37"},"nodeType":"YulFunctionCall","src":"4250:18:37"},"nodeType":"YulExpressionStatement","src":"4250:18:37"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4191:10:37"},{"kind":"number","nodeType":"YulLiteral","src":"4203:18:37","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4188:2:37"},"nodeType":"YulFunctionCall","src":"4188:34:37"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4227:10:37"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4239:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4224:2:37"},"nodeType":"YulFunctionCall","src":"4224:22:37"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4185:2:37"},"nodeType":"YulFunctionCall","src":"4185:62:37"},"nodeType":"YulIf","src":"4182:88:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4286:2:37","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4290:10:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4279:6:37"},"nodeType":"YulFunctionCall","src":"4279:22:37"},"nodeType":"YulExpressionStatement","src":"4279:22:37"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4057:4:37","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4066:6:37","type":""}],"src":"4032:275:37"},{"body":{"nodeType":"YulBlock","src":"4370:129:37","statements":[{"body":{"nodeType":"YulBlock","src":"4414:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4416:16:37"},"nodeType":"YulFunctionCall","src":"4416:18:37"},"nodeType":"YulExpressionStatement","src":"4416:18:37"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4386:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"4394:18:37","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4383:2:37"},"nodeType":"YulFunctionCall","src":"4383:30:37"},"nodeType":"YulIf","src":"4380:56:37"},{"nodeType":"YulAssignment","src":"4445:48:37","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4465:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"4473:2:37","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:37"},"nodeType":"YulFunctionCall","src":"4461:15:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4482:2:37","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4478:3:37"},"nodeType":"YulFunctionCall","src":"4478:7:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4457:3:37"},"nodeType":"YulFunctionCall","src":"4457:29:37"},{"kind":"number","nodeType":"YulLiteral","src":"4488:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4453:3:37"},"nodeType":"YulFunctionCall","src":"4453:40:37"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4445:4:37"}]}]},"name":"array_allocation_size_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4350:6:37","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4361:4:37","type":""}],"src":"4312:187:37"},{"body":{"nodeType":"YulBlock","src":"4557:411:37","statements":[{"body":{"nodeType":"YulBlock","src":"4606:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4615:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4618:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4608:6:37"},"nodeType":"YulFunctionCall","src":"4608:12:37"},"nodeType":"YulExpressionStatement","src":"4608:12:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4585:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:37","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:37"},"nodeType":"YulFunctionCall","src":"4581:17:37"},{"name":"end","nodeType":"YulIdentifier","src":"4600:3:37"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4577:3:37"},"nodeType":"YulFunctionCall","src":"4577:27:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4570:6:37"},"nodeType":"YulFunctionCall","src":"4570:35:37"},"nodeType":"YulIf","src":"4567:55:37"},{"nodeType":"YulVariableDeclaration","src":"4631:30:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4654:6:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4641:12:37"},"nodeType":"YulFunctionCall","src":"4641:20:37"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4635:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4670:64:37","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4730:2:37"}],"functionName":{"name":"array_allocation_size_string","nodeType":"YulIdentifier","src":"4701:28:37"},"nodeType":"YulFunctionCall","src":"4701:32:37"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4685:15:37"},"nodeType":"YulFunctionCall","src":"4685:49:37"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"4674:7:37","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"4750:7:37"},{"name":"_1","nodeType":"YulIdentifier","src":"4759:2:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4743:6:37"},"nodeType":"YulFunctionCall","src":"4743:19:37"},"nodeType":"YulExpressionStatement","src":"4743:19:37"},{"body":{"nodeType":"YulBlock","src":"4810:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4819:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4822:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4812:6:37"},"nodeType":"YulFunctionCall","src":"4812:12:37"},"nodeType":"YulExpressionStatement","src":"4812:12:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4785:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"4793:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4781:3:37"},"nodeType":"YulFunctionCall","src":"4781:15:37"},{"kind":"number","nodeType":"YulLiteral","src":"4798:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4777:3:37"},"nodeType":"YulFunctionCall","src":"4777:26:37"},{"name":"end","nodeType":"YulIdentifier","src":"4805:3:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4774:2:37"},"nodeType":"YulFunctionCall","src":"4774:35:37"},"nodeType":"YulIf","src":"4771:55:37"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"4852:7:37"},{"kind":"number","nodeType":"YulLiteral","src":"4861:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4848:3:37"},"nodeType":"YulFunctionCall","src":"4848:18:37"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4872:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"4880:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4868:3:37"},"nodeType":"YulFunctionCall","src":"4868:17:37"},{"name":"_1","nodeType":"YulIdentifier","src":"4887:2:37"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4835:12:37"},"nodeType":"YulFunctionCall","src":"4835:55:37"},"nodeType":"YulExpressionStatement","src":"4835:55:37"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"4914:7:37"},{"name":"_1","nodeType":"YulIdentifier","src":"4923:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4910:3:37"},"nodeType":"YulFunctionCall","src":"4910:16:37"},{"kind":"number","nodeType":"YulLiteral","src":"4928:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4906:3:37"},"nodeType":"YulFunctionCall","src":"4906:27:37"},{"kind":"number","nodeType":"YulLiteral","src":"4935:1:37","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4899:6:37"},"nodeType":"YulFunctionCall","src":"4899:38:37"},"nodeType":"YulExpressionStatement","src":"4899:38:37"},{"nodeType":"YulAssignment","src":"4946:16:37","value":{"name":"array_1","nodeType":"YulIdentifier","src":"4955:7:37"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4946:5:37"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4531:6:37","type":""},{"name":"end","nodeType":"YulTypedName","src":"4539:3:37","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4547:5:37","type":""}],"src":"4504:464:37"},{"body":{"nodeType":"YulBlock","src":"5114:679:37","statements":[{"body":{"nodeType":"YulBlock","src":"5161:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5170:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5173:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5163:6:37"},"nodeType":"YulFunctionCall","src":"5163:12:37"},"nodeType":"YulExpressionStatement","src":"5163:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5135:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"5144:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5131:3:37"},"nodeType":"YulFunctionCall","src":"5131:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"5156:3:37","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5127:3:37"},"nodeType":"YulFunctionCall","src":"5127:33:37"},"nodeType":"YulIf","src":"5124:53:37"},{"nodeType":"YulVariableDeclaration","src":"5186:37:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5213:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5200:12:37"},"nodeType":"YulFunctionCall","src":"5200:23:37"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5190:6:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5232:28:37","value":{"kind":"number","nodeType":"YulLiteral","src":"5242:18:37","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5236:2:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"5287:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5296:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5299:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5289:6:37"},"nodeType":"YulFunctionCall","src":"5289:12:37"},"nodeType":"YulExpressionStatement","src":"5289:12:37"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5275:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"5283:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5272:2:37"},"nodeType":"YulFunctionCall","src":"5272:14:37"},"nodeType":"YulIf","src":"5269:34:37"},{"nodeType":"YulAssignment","src":"5312:60:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5344:9:37"},{"name":"offset","nodeType":"YulIdentifier","src":"5355:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5340:3:37"},"nodeType":"YulFunctionCall","src":"5340:22:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5364:7:37"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5322:17:37"},"nodeType":"YulFunctionCall","src":"5322:50:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5312:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"5381:48:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5414:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5425:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5410:3:37"},"nodeType":"YulFunctionCall","src":"5410:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5397:12:37"},"nodeType":"YulFunctionCall","src":"5397:32:37"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5385:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"5458:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5467:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5470:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5460:6:37"},"nodeType":"YulFunctionCall","src":"5460:12:37"},"nodeType":"YulExpressionStatement","src":"5460:12:37"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5444:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"5454:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5441:2:37"},"nodeType":"YulFunctionCall","src":"5441:16:37"},"nodeType":"YulIf","src":"5438:36:37"},{"nodeType":"YulAssignment","src":"5483:62:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5515:9:37"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5526:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5511:3:37"},"nodeType":"YulFunctionCall","src":"5511:24:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5537:7:37"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5493:17:37"},"nodeType":"YulFunctionCall","src":"5493:52:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5483:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"5554:45:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5584:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5595:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5580:3:37"},"nodeType":"YulFunctionCall","src":"5580:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5567:12:37"},"nodeType":"YulFunctionCall","src":"5567:32:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5558:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5633:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5608:24:37"},"nodeType":"YulFunctionCall","src":"5608:31:37"},"nodeType":"YulExpressionStatement","src":"5608:31:37"},{"nodeType":"YulAssignment","src":"5648:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"5658:5:37"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5648:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"5672:47:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5704:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"5715:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5700:3:37"},"nodeType":"YulFunctionCall","src":"5700:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5687:12:37"},"nodeType":"YulFunctionCall","src":"5687:32:37"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"5676:7:37","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5753:7:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5728:24:37"},"nodeType":"YulFunctionCall","src":"5728:33:37"},"nodeType":"YulExpressionStatement","src":"5728:33:37"},{"nodeType":"YulAssignment","src":"5770:17:37","value":{"name":"value_1","nodeType":"YulIdentifier","src":"5780:7:37"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5770:6:37"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5056:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5067:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5079:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5087:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5095:6:37","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5103:6:37","type":""}],"src":"4973:820:37"},{"body":{"nodeType":"YulBlock","src":"5885:301:37","statements":[{"body":{"nodeType":"YulBlock","src":"5931:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5940:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5943:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5933:6:37"},"nodeType":"YulFunctionCall","src":"5933:12:37"},"nodeType":"YulExpressionStatement","src":"5933:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5906:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"5915:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5902:3:37"},"nodeType":"YulFunctionCall","src":"5902:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"5927:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5898:3:37"},"nodeType":"YulFunctionCall","src":"5898:32:37"},"nodeType":"YulIf","src":"5895:52:37"},{"nodeType":"YulVariableDeclaration","src":"5956:36:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5982:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5969:12:37"},"nodeType":"YulFunctionCall","src":"5969:23:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5960:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6026:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6001:24:37"},"nodeType":"YulFunctionCall","src":"6001:31:37"},"nodeType":"YulExpressionStatement","src":"6001:31:37"},{"nodeType":"YulAssignment","src":"6041:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"6051:5:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6041:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"6065:47:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6097:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6108:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6093:3:37"},"nodeType":"YulFunctionCall","src":"6093:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6080:12:37"},"nodeType":"YulFunctionCall","src":"6080:32:37"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6069:7:37","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6146:7:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6121:24:37"},"nodeType":"YulFunctionCall","src":"6121:33:37"},"nodeType":"YulExpressionStatement","src":"6121:33:37"},{"nodeType":"YulAssignment","src":"6163:17:37","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6173:7:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6163:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5843:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5854:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5866:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5874:6:37","type":""}],"src":"5798:388:37"},{"body":{"nodeType":"YulBlock","src":"6238:109:37","statements":[{"nodeType":"YulAssignment","src":"6248:29:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6270:6:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6257:12:37"},"nodeType":"YulFunctionCall","src":"6257:20:37"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6248:5:37"}]},{"body":{"nodeType":"YulBlock","src":"6325:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6334:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6337:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6327:6:37"},"nodeType":"YulFunctionCall","src":"6327:12:37"},"nodeType":"YulExpressionStatement","src":"6327:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6299:5:37"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6310:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"6317:4:37","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6306:3:37"},"nodeType":"YulFunctionCall","src":"6306:16:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6296:2:37"},"nodeType":"YulFunctionCall","src":"6296:27:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6289:6:37"},"nodeType":"YulFunctionCall","src":"6289:35:37"},"nodeType":"YulIf","src":"6286:55:37"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6217:6:37","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6228:5:37","type":""}],"src":"6191:156:37"},{"body":{"nodeType":"YulBlock","src":"6505:439:37","statements":[{"body":{"nodeType":"YulBlock","src":"6552:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6561:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6564:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6554:6:37"},"nodeType":"YulFunctionCall","src":"6554:12:37"},"nodeType":"YulExpressionStatement","src":"6554:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6526:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"6535:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6522:3:37"},"nodeType":"YulFunctionCall","src":"6522:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"6547:3:37","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6518:3:37"},"nodeType":"YulFunctionCall","src":"6518:33:37"},"nodeType":"YulIf","src":"6515:53:37"},{"nodeType":"YulVariableDeclaration","src":"6577:36:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6603:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6590:12:37"},"nodeType":"YulFunctionCall","src":"6590:23:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6581:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6647:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6622:24:37"},"nodeType":"YulFunctionCall","src":"6622:31:37"},"nodeType":"YulExpressionStatement","src":"6622:31:37"},{"nodeType":"YulAssignment","src":"6662:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"6672:5:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6662:6:37"}]},{"nodeType":"YulAssignment","src":"6686:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6713:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6724:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6709:3:37"},"nodeType":"YulFunctionCall","src":"6709:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6696:12:37"},"nodeType":"YulFunctionCall","src":"6696:32:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6686:6:37"}]},{"nodeType":"YulAssignment","src":"6737:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6764:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6775:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6760:3:37"},"nodeType":"YulFunctionCall","src":"6760:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6747:12:37"},"nodeType":"YulFunctionCall","src":"6747:32:37"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6737:6:37"}]},{"nodeType":"YulAssignment","src":"6788:46:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6819:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6830:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6815:3:37"},"nodeType":"YulFunctionCall","src":"6815:18:37"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"6798:16:37"},"nodeType":"YulFunctionCall","src":"6798:36:37"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6788:6:37"}]},{"nodeType":"YulAssignment","src":"6843:43:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6870:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6881:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6866:3:37"},"nodeType":"YulFunctionCall","src":"6866:19:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6853:12:37"},"nodeType":"YulFunctionCall","src":"6853:33:37"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6843:6:37"}]},{"nodeType":"YulAssignment","src":"6895:43:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6922:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"6933:3:37","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6918:3:37"},"nodeType":"YulFunctionCall","src":"6918:19:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6905:12:37"},"nodeType":"YulFunctionCall","src":"6905:33:37"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6895:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6431:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6442:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6454:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6462:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6470:6:37","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6478:6:37","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6486:6:37","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6494:6:37","type":""}],"src":"6352:592:37"},{"body":{"nodeType":"YulBlock","src":"7119:564:37","statements":[{"body":{"nodeType":"YulBlock","src":"7166:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7175:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7178:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7168:6:37"},"nodeType":"YulFunctionCall","src":"7168:12:37"},"nodeType":"YulExpressionStatement","src":"7168:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7140:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"7149:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7136:3:37"},"nodeType":"YulFunctionCall","src":"7136:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"7161:3:37","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7132:3:37"},"nodeType":"YulFunctionCall","src":"7132:33:37"},"nodeType":"YulIf","src":"7129:53:37"},{"nodeType":"YulVariableDeclaration","src":"7191:36:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7217:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7204:12:37"},"nodeType":"YulFunctionCall","src":"7204:23:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7195:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7261:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7236:24:37"},"nodeType":"YulFunctionCall","src":"7236:31:37"},"nodeType":"YulExpressionStatement","src":"7236:31:37"},{"nodeType":"YulAssignment","src":"7276:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"7286:5:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7276:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"7300:47:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7332:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7343:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7328:3:37"},"nodeType":"YulFunctionCall","src":"7328:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7315:12:37"},"nodeType":"YulFunctionCall","src":"7315:32:37"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7304:7:37","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7381:7:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7356:24:37"},"nodeType":"YulFunctionCall","src":"7356:33:37"},"nodeType":"YulExpressionStatement","src":"7356:33:37"},{"nodeType":"YulAssignment","src":"7398:17:37","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7408:7:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7398:6:37"}]},{"nodeType":"YulAssignment","src":"7424:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7451:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7462:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7447:3:37"},"nodeType":"YulFunctionCall","src":"7447:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7434:12:37"},"nodeType":"YulFunctionCall","src":"7434:32:37"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7424:6:37"}]},{"nodeType":"YulAssignment","src":"7475:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7502:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7513:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7498:3:37"},"nodeType":"YulFunctionCall","src":"7498:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7485:12:37"},"nodeType":"YulFunctionCall","src":"7485:32:37"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7475:6:37"}]},{"nodeType":"YulAssignment","src":"7526:47:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7557:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7568:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7553:3:37"},"nodeType":"YulFunctionCall","src":"7553:19:37"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"7536:16:37"},"nodeType":"YulFunctionCall","src":"7536:37:37"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7526:6:37"}]},{"nodeType":"YulAssignment","src":"7582:43:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7609:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7620:3:37","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7605:3:37"},"nodeType":"YulFunctionCall","src":"7605:19:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7592:12:37"},"nodeType":"YulFunctionCall","src":"7592:33:37"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7582:6:37"}]},{"nodeType":"YulAssignment","src":"7634:43:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7661:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7672:3:37","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7657:3:37"},"nodeType":"YulFunctionCall","src":"7657:19:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7644:12:37"},"nodeType":"YulFunctionCall","src":"7644:33:37"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7634:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7037:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7048:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7060:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7068:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7076:6:37","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7084:6:37","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7092:6:37","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7100:6:37","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7108:6:37","type":""}],"src":"6949:734:37"},{"body":{"nodeType":"YulBlock","src":"7774:333:37","statements":[{"body":{"nodeType":"YulBlock","src":"7820:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7829:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7832:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7822:6:37"},"nodeType":"YulFunctionCall","src":"7822:12:37"},"nodeType":"YulExpressionStatement","src":"7822:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7795:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"7804:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7791:3:37"},"nodeType":"YulFunctionCall","src":"7791:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"7816:2:37","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7787:3:37"},"nodeType":"YulFunctionCall","src":"7787:32:37"},"nodeType":"YulIf","src":"7784:52:37"},{"nodeType":"YulVariableDeclaration","src":"7845:36:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7871:9:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7858:12:37"},"nodeType":"YulFunctionCall","src":"7858:23:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7849:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7915:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7890:24:37"},"nodeType":"YulFunctionCall","src":"7890:31:37"},"nodeType":"YulExpressionStatement","src":"7890:31:37"},{"nodeType":"YulAssignment","src":"7930:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"7940:5:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7930:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"7954:47:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7986:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"7997:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7982:3:37"},"nodeType":"YulFunctionCall","src":"7982:18:37"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7969:12:37"},"nodeType":"YulFunctionCall","src":"7969:32:37"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7958:7:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"8059:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8068:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8071:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8061:6:37"},"nodeType":"YulFunctionCall","src":"8061:12:37"},"nodeType":"YulExpressionStatement","src":"8061:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8023:7:37"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8036:7:37"},{"kind":"number","nodeType":"YulLiteral","src":"8045:10:37","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8032:3:37"},"nodeType":"YulFunctionCall","src":"8032:24:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8020:2:37"},"nodeType":"YulFunctionCall","src":"8020:37:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8013:6:37"},"nodeType":"YulFunctionCall","src":"8013:45:37"},"nodeType":"YulIf","src":"8010:65:37"},{"nodeType":"YulAssignment","src":"8084:17:37","value":{"name":"value_1","nodeType":"YulIdentifier","src":"8094:7:37"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8084:6:37"}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7732:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7743:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7755:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7763:6:37","type":""}],"src":"7688:419:37"},{"body":{"nodeType":"YulBlock","src":"8269:189:37","statements":[{"nodeType":"YulAssignment","src":"8279:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8291:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8302:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8287:3:37"},"nodeType":"YulFunctionCall","src":"8287:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8279:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8321:9:37"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8342:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8336:5:37"},"nodeType":"YulFunctionCall","src":"8336:13:37"},{"kind":"number","nodeType":"YulLiteral","src":"8351:10:37","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8332:3:37"},"nodeType":"YulFunctionCall","src":"8332:30:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8314:6:37"},"nodeType":"YulFunctionCall","src":"8314:49:37"},"nodeType":"YulExpressionStatement","src":"8314:49:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8383:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"8394:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8379:3:37"},"nodeType":"YulFunctionCall","src":"8379:20:37"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8415:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"8423:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8411:3:37"},"nodeType":"YulFunctionCall","src":"8411:17:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8405:5:37"},"nodeType":"YulFunctionCall","src":"8405:24:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8439:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8444:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8435:3:37"},"nodeType":"YulFunctionCall","src":"8435:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"8448:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8431:3:37"},"nodeType":"YulFunctionCall","src":"8431:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8401:3:37"},"nodeType":"YulFunctionCall","src":"8401:50:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8372:6:37"},"nodeType":"YulFunctionCall","src":"8372:80:37"},"nodeType":"YulExpressionStatement","src":"8372:80:37"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$2006_memory_ptr__to_t_struct$_Checkpoint_$2006_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8238:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8249:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8260:4:37","type":""}],"src":"8112:346:37"},{"body":{"nodeType":"YulBlock","src":"8518:325:37","statements":[{"nodeType":"YulAssignment","src":"8528:22:37","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8542:1:37","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8545:4:37"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8538:3:37"},"nodeType":"YulFunctionCall","src":"8538:12:37"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8528:6:37"}]},{"nodeType":"YulVariableDeclaration","src":"8559:38:37","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8589:4:37"},{"kind":"number","nodeType":"YulLiteral","src":"8595:1:37","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8585:3:37"},"nodeType":"YulFunctionCall","src":"8585:12:37"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8563:18:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"8636:31:37","statements":[{"nodeType":"YulAssignment","src":"8638:27:37","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8652:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"8660:4:37","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8648:3:37"},"nodeType":"YulFunctionCall","src":"8648:17:37"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8638:6:37"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8616:18:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8609:6:37"},"nodeType":"YulFunctionCall","src":"8609:26:37"},"nodeType":"YulIf","src":"8606:61:37"},{"body":{"nodeType":"YulBlock","src":"8726:111:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8747:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8754:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8759:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8750:3:37"},"nodeType":"YulFunctionCall","src":"8750:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8740:6:37"},"nodeType":"YulFunctionCall","src":"8740:31:37"},"nodeType":"YulExpressionStatement","src":"8740:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8791:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8794:4:37","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8784:6:37"},"nodeType":"YulFunctionCall","src":"8784:15:37"},"nodeType":"YulExpressionStatement","src":"8784:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8819:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8822:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8812:6:37"},"nodeType":"YulFunctionCall","src":"8812:15:37"},"nodeType":"YulExpressionStatement","src":"8812:15:37"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8682:18:37"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8705:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"8713:2:37","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8702:2:37"},"nodeType":"YulFunctionCall","src":"8702:14:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8679:2:37"},"nodeType":"YulFunctionCall","src":"8679:38:37"},"nodeType":"YulIf","src":"8676:161:37"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8498:4:37","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8507:6:37","type":""}],"src":"8463:380:37"},{"body":{"nodeType":"YulBlock","src":"8907:106:37","statements":[{"nodeType":"YulAssignment","src":"8917:22:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8932:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8926:5:37"},"nodeType":"YulFunctionCall","src":"8926:13:37"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8917:5:37"}]},{"body":{"nodeType":"YulBlock","src":"8991:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9000:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9003:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8993:6:37"},"nodeType":"YulFunctionCall","src":"8993:12:37"},"nodeType":"YulExpressionStatement","src":"8993:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8961:5:37"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8972:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"8979:8:37","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8968:3:37"},"nodeType":"YulFunctionCall","src":"8968:20:37"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8958:2:37"},"nodeType":"YulFunctionCall","src":"8958:31:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8951:6:37"},"nodeType":"YulFunctionCall","src":"8951:39:37"},"nodeType":"YulIf","src":"8948:59:37"}]},"name":"abi_decode_uint24_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8886:6:37","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8897:5:37","type":""}],"src":"8848:165:37"},{"body":{"nodeType":"YulBlock","src":"9098:126:37","statements":[{"body":{"nodeType":"YulBlock","src":"9144:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9153:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9156:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9146:6:37"},"nodeType":"YulFunctionCall","src":"9146:12:37"},"nodeType":"YulExpressionStatement","src":"9146:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9119:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"9128:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9115:3:37"},"nodeType":"YulFunctionCall","src":"9115:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"9140:2:37","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9111:3:37"},"nodeType":"YulFunctionCall","src":"9111:32:37"},"nodeType":"YulIf","src":"9108:52:37"},{"nodeType":"YulAssignment","src":"9169:49:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9208:9:37"}],"functionName":{"name":"abi_decode_uint24_fromMemory","nodeType":"YulIdentifier","src":"9179:28:37"},"nodeType":"YulFunctionCall","src":"9179:39:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9169:6:37"}]}]},"name":"abi_decode_tuple_t_uint24_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9064:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9075:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9087:6:37","type":""}],"src":"9018:206:37"},{"body":{"nodeType":"YulBlock","src":"9261:95:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9278:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9285:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9290:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9281:3:37"},"nodeType":"YulFunctionCall","src":"9281:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9271:6:37"},"nodeType":"YulFunctionCall","src":"9271:31:37"},"nodeType":"YulExpressionStatement","src":"9271:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9318:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9321:4:37","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9311:6:37"},"nodeType":"YulFunctionCall","src":"9311:15:37"},"nodeType":"YulExpressionStatement","src":"9311:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9342:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9345:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9335:6:37"},"nodeType":"YulFunctionCall","src":"9335:15:37"},"nodeType":"YulExpressionStatement","src":"9335:15:37"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9229:127:37"},{"body":{"nodeType":"YulBlock","src":"9413:116:37","statements":[{"body":{"nodeType":"YulBlock","src":"9472:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9474:16:37"},"nodeType":"YulFunctionCall","src":"9474:18:37"},"nodeType":"YulExpressionStatement","src":"9474:18:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9444:1:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9437:6:37"},"nodeType":"YulFunctionCall","src":"9437:9:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9430:6:37"},"nodeType":"YulFunctionCall","src":"9430:17:37"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9452:1:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9463:1:37","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9459:3:37"},"nodeType":"YulFunctionCall","src":"9459:6:37"},{"name":"x","nodeType":"YulIdentifier","src":"9467:1:37"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9455:3:37"},"nodeType":"YulFunctionCall","src":"9455:14:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9449:2:37"},"nodeType":"YulFunctionCall","src":"9449:21:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9426:3:37"},"nodeType":"YulFunctionCall","src":"9426:45:37"},"nodeType":"YulIf","src":"9423:71:37"},{"nodeType":"YulAssignment","src":"9503:20:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9518:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"9521:1:37"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9514:3:37"},"nodeType":"YulFunctionCall","src":"9514:9:37"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"9503:7:37"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9392:1:37","type":""},{"name":"y","nodeType":"YulTypedName","src":"9395:1:37","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"9401:7:37","type":""}],"src":"9361:168:37"},{"body":{"nodeType":"YulBlock","src":"9583:76:37","statements":[{"body":{"nodeType":"YulBlock","src":"9605:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9607:16:37"},"nodeType":"YulFunctionCall","src":"9607:18:37"},"nodeType":"YulExpressionStatement","src":"9607:18:37"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9599:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"9602:1:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9596:2:37"},"nodeType":"YulFunctionCall","src":"9596:8:37"},"nodeType":"YulIf","src":"9593:34:37"},{"nodeType":"YulAssignment","src":"9636:17:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9648:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"9651:1:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9644:3:37"},"nodeType":"YulFunctionCall","src":"9644:9:37"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9636:4:37"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9565:1:37","type":""},{"name":"y","nodeType":"YulTypedName","src":"9568:1:37","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9574:4:37","type":""}],"src":"9534:125:37"},{"body":{"nodeType":"YulBlock","src":"9712:80:37","statements":[{"body":{"nodeType":"YulBlock","src":"9739:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9741:16:37"},"nodeType":"YulFunctionCall","src":"9741:18:37"},"nodeType":"YulExpressionStatement","src":"9741:18:37"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9728:1:37"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9735:1:37"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9731:3:37"},"nodeType":"YulFunctionCall","src":"9731:6:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9725:2:37"},"nodeType":"YulFunctionCall","src":"9725:13:37"},"nodeType":"YulIf","src":"9722:39:37"},{"nodeType":"YulAssignment","src":"9770:16:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9781:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"9784:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9777:3:37"},"nodeType":"YulFunctionCall","src":"9777:9:37"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9770:3:37"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9695:1:37","type":""},{"name":"y","nodeType":"YulTypedName","src":"9698:1:37","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9704:3:37","type":""}],"src":"9664:128:37"},{"body":{"nodeType":"YulBlock","src":"9971:181:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9988:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"9999:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9981:6:37"},"nodeType":"YulFunctionCall","src":"9981:21:37"},"nodeType":"YulExpressionStatement","src":"9981:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10022:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10033:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10018:3:37"},"nodeType":"YulFunctionCall","src":"10018:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"10038:2:37","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10011:6:37"},"nodeType":"YulFunctionCall","src":"10011:30:37"},"nodeType":"YulExpressionStatement","src":"10011:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10061:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10072:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10057:3:37"},"nodeType":"YulFunctionCall","src":"10057:18:37"},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","kind":"string","nodeType":"YulLiteral","src":"10077:33:37","type":"","value":"ERC20Votes: block not yet mined"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10050:6:37"},"nodeType":"YulFunctionCall","src":"10050:61:37"},"nodeType":"YulExpressionStatement","src":"10050:61:37"},{"nodeType":"YulAssignment","src":"10120:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10132:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10143:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10128:3:37"},"nodeType":"YulFunctionCall","src":"10128:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10120:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9948:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9962:4:37","type":""}],"src":"9797:355:37"},{"body":{"nodeType":"YulBlock","src":"10331:236:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10348:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10359:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10341:6:37"},"nodeType":"YulFunctionCall","src":"10341:21:37"},"nodeType":"YulExpressionStatement","src":"10341:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10382:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10393:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10378:3:37"},"nodeType":"YulFunctionCall","src":"10378:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"10398:2:37","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10371:6:37"},"nodeType":"YulFunctionCall","src":"10371:30:37"},"nodeType":"YulExpressionStatement","src":"10371:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10421:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10432:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10417:3:37"},"nodeType":"YulFunctionCall","src":"10417:18:37"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"10437:34:37","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10410:6:37"},"nodeType":"YulFunctionCall","src":"10410:62:37"},"nodeType":"YulExpressionStatement","src":"10410:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10492:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10503:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10488:3:37"},"nodeType":"YulFunctionCall","src":"10488:18:37"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"10508:16:37","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10481:6:37"},"nodeType":"YulFunctionCall","src":"10481:44:37"},"nodeType":"YulExpressionStatement","src":"10481:44:37"},{"nodeType":"YulAssignment","src":"10534:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10546:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"10557:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10542:3:37"},"nodeType":"YulFunctionCall","src":"10542:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10534:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10308:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10322:4:37","type":""}],"src":"10157:410:37"},{"body":{"nodeType":"YulBlock","src":"10636:358:37","statements":[{"nodeType":"YulVariableDeclaration","src":"10646:16:37","value":{"kind":"number","nodeType":"YulLiteral","src":"10661:1:37","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"10650:7:37","type":""}]},{"nodeType":"YulAssignment","src":"10671:16:37","value":{"name":"power_1","nodeType":"YulIdentifier","src":"10680:7:37"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10671:5:37"}]},{"nodeType":"YulAssignment","src":"10696:13:37","value":{"name":"_base","nodeType":"YulIdentifier","src":"10704:5:37"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"10696:4:37"}]},{"body":{"nodeType":"YulBlock","src":"10760:228:37","statements":[{"body":{"nodeType":"YulBlock","src":"10805:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10807:16:37"},"nodeType":"YulFunctionCall","src":"10807:18:37"},"nodeType":"YulExpressionStatement","src":"10807:18:37"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10780:4:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10794:1:37","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10790:3:37"},"nodeType":"YulFunctionCall","src":"10790:6:37"},{"name":"base","nodeType":"YulIdentifier","src":"10798:4:37"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10786:3:37"},"nodeType":"YulFunctionCall","src":"10786:17:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10777:2:37"},"nodeType":"YulFunctionCall","src":"10777:27:37"},"nodeType":"YulIf","src":"10774:53:37"},{"body":{"nodeType":"YulBlock","src":"10866:29:37","statements":[{"nodeType":"YulAssignment","src":"10868:25:37","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10881:5:37"},{"name":"base","nodeType":"YulIdentifier","src":"10888:4:37"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10877:3:37"},"nodeType":"YulFunctionCall","src":"10877:16:37"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10868:5:37"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10847:8:37"},{"name":"power_1","nodeType":"YulIdentifier","src":"10857:7:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10843:3:37"},"nodeType":"YulFunctionCall","src":"10843:22:37"},"nodeType":"YulIf","src":"10840:55:37"},{"nodeType":"YulAssignment","src":"10908:23:37","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10920:4:37"},{"name":"base","nodeType":"YulIdentifier","src":"10926:4:37"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10916:3:37"},"nodeType":"YulFunctionCall","src":"10916:15:37"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"10908:4:37"}]},{"nodeType":"YulAssignment","src":"10944:34:37","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"10960:7:37"},{"name":"exponent","nodeType":"YulIdentifier","src":"10969:8:37"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10956:3:37"},"nodeType":"YulFunctionCall","src":"10956:22:37"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"10944:8:37"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10729:8:37"},{"name":"power_1","nodeType":"YulIdentifier","src":"10739:7:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10726:2:37"},"nodeType":"YulFunctionCall","src":"10726:21:37"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10748:3:37","statements":[]},"pre":{"nodeType":"YulBlock","src":"10722:3:37","statements":[]},"src":"10718:270:37"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"10600:5:37","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"10607:8:37","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"10620:5:37","type":""},{"name":"base","nodeType":"YulTypedName","src":"10627:4:37","type":""}],"src":"10572:422:37"},{"body":{"nodeType":"YulBlock","src":"11058:747:37","statements":[{"body":{"nodeType":"YulBlock","src":"11096:52:37","statements":[{"nodeType":"YulAssignment","src":"11110:10:37","value":{"kind":"number","nodeType":"YulLiteral","src":"11119:1:37","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11110:5:37"}]},{"nodeType":"YulLeave","src":"11133:5:37"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11078:8:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11071:6:37"},"nodeType":"YulFunctionCall","src":"11071:16:37"},"nodeType":"YulIf","src":"11068:80:37"},{"body":{"nodeType":"YulBlock","src":"11181:52:37","statements":[{"nodeType":"YulAssignment","src":"11195:10:37","value":{"kind":"number","nodeType":"YulLiteral","src":"11204:1:37","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11195:5:37"}]},{"nodeType":"YulLeave","src":"11218:5:37"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11167:4:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11160:6:37"},"nodeType":"YulFunctionCall","src":"11160:12:37"},"nodeType":"YulIf","src":"11157:76:37"},{"cases":[{"body":{"nodeType":"YulBlock","src":"11269:52:37","statements":[{"nodeType":"YulAssignment","src":"11283:10:37","value":{"kind":"number","nodeType":"YulLiteral","src":"11292:1:37","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11283:5:37"}]},{"nodeType":"YulLeave","src":"11306:5:37"}]},"nodeType":"YulCase","src":"11262:59:37","value":{"kind":"number","nodeType":"YulLiteral","src":"11267:1:37","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"11337:123:37","statements":[{"body":{"nodeType":"YulBlock","src":"11372:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11374:16:37"},"nodeType":"YulFunctionCall","src":"11374:18:37"},"nodeType":"YulExpressionStatement","src":"11374:18:37"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11357:8:37"},{"kind":"number","nodeType":"YulLiteral","src":"11367:3:37","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11354:2:37"},"nodeType":"YulFunctionCall","src":"11354:17:37"},"nodeType":"YulIf","src":"11351:43:37"},{"nodeType":"YulAssignment","src":"11407:25:37","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11420:8:37"},{"kind":"number","nodeType":"YulLiteral","src":"11430:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11416:3:37"},"nodeType":"YulFunctionCall","src":"11416:16:37"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11407:5:37"}]},{"nodeType":"YulLeave","src":"11445:5:37"}]},"nodeType":"YulCase","src":"11330:130:37","value":{"kind":"number","nodeType":"YulLiteral","src":"11335:1:37","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"11249:4:37"},"nodeType":"YulSwitch","src":"11242:218:37"},{"body":{"nodeType":"YulBlock","src":"11558:70:37","statements":[{"nodeType":"YulAssignment","src":"11572:28:37","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11585:4:37"},{"name":"exponent","nodeType":"YulIdentifier","src":"11591:8:37"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"11581:3:37"},"nodeType":"YulFunctionCall","src":"11581:19:37"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11572:5:37"}]},{"nodeType":"YulLeave","src":"11613:5:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11482:4:37"},{"kind":"number","nodeType":"YulLiteral","src":"11488:2:37","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11479:2:37"},"nodeType":"YulFunctionCall","src":"11479:12:37"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11496:8:37"},{"kind":"number","nodeType":"YulLiteral","src":"11506:2:37","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11493:2:37"},"nodeType":"YulFunctionCall","src":"11493:16:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11475:3:37"},"nodeType":"YulFunctionCall","src":"11475:35:37"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11519:4:37"},{"kind":"number","nodeType":"YulLiteral","src":"11525:3:37","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11516:2:37"},"nodeType":"YulFunctionCall","src":"11516:13:37"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11534:8:37"},{"kind":"number","nodeType":"YulLiteral","src":"11544:2:37","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11531:2:37"},"nodeType":"YulFunctionCall","src":"11531:16:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11512:3:37"},"nodeType":"YulFunctionCall","src":"11512:36:37"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11472:2:37"},"nodeType":"YulFunctionCall","src":"11472:77:37"},"nodeType":"YulIf","src":"11469:159:37"},{"nodeType":"YulVariableDeclaration","src":"11637:57:37","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11679:4:37"},{"name":"exponent","nodeType":"YulIdentifier","src":"11685:8:37"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"11660:18:37"},"nodeType":"YulFunctionCall","src":"11660:34:37"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"11641:7:37","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"11650:6:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"11739:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11741:16:37"},"nodeType":"YulFunctionCall","src":"11741:18:37"},"nodeType":"YulExpressionStatement","src":"11741:18:37"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"11709:7:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11726:1:37","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11722:3:37"},"nodeType":"YulFunctionCall","src":"11722:6:37"},{"name":"base_1","nodeType":"YulIdentifier","src":"11730:6:37"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11718:3:37"},"nodeType":"YulFunctionCall","src":"11718:19:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11706:2:37"},"nodeType":"YulFunctionCall","src":"11706:32:37"},"nodeType":"YulIf","src":"11703:58:37"},{"nodeType":"YulAssignment","src":"11770:29:37","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"11783:7:37"},{"name":"base_1","nodeType":"YulIdentifier","src":"11792:6:37"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11779:3:37"},"nodeType":"YulFunctionCall","src":"11779:20:37"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11770:5:37"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"11029:4:37","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"11035:8:37","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"11048:5:37","type":""}],"src":"10999:806:37"},{"body":{"nodeType":"YulBlock","src":"11878:72:37","statements":[{"nodeType":"YulAssignment","src":"11888:56:37","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11918:4:37"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11928:8:37"},{"kind":"number","nodeType":"YulLiteral","src":"11938:4:37","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11924:3:37"},"nodeType":"YulFunctionCall","src":"11924:19:37"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"11897:20:37"},"nodeType":"YulFunctionCall","src":"11897:47:37"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11888:5:37"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"11849:4:37","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"11855:8:37","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"11868:5:37","type":""}],"src":"11810:140:37"},{"body":{"nodeType":"YulBlock","src":"11987:95:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12004:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12011:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12016:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12007:3:37"},"nodeType":"YulFunctionCall","src":"12007:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11997:6:37"},"nodeType":"YulFunctionCall","src":"11997:31:37"},"nodeType":"YulExpressionStatement","src":"11997:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12044:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12047:4:37","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12037:6:37"},"nodeType":"YulFunctionCall","src":"12037:15:37"},"nodeType":"YulExpressionStatement","src":"12037:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12068:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12071:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12061:6:37"},"nodeType":"YulFunctionCall","src":"12061:15:37"},"nodeType":"YulExpressionStatement","src":"12061:15:37"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"11955:127:37"},{"body":{"nodeType":"YulBlock","src":"12133:171:37","statements":[{"body":{"nodeType":"YulBlock","src":"12164:111:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12185:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12192:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12197:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12188:3:37"},"nodeType":"YulFunctionCall","src":"12188:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12178:6:37"},"nodeType":"YulFunctionCall","src":"12178:31:37"},"nodeType":"YulExpressionStatement","src":"12178:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12229:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12232:4:37","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12222:6:37"},"nodeType":"YulFunctionCall","src":"12222:15:37"},"nodeType":"YulExpressionStatement","src":"12222:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12257:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12260:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12250:6:37"},"nodeType":"YulFunctionCall","src":"12250:15:37"},"nodeType":"YulExpressionStatement","src":"12250:15:37"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12153:1:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12146:6:37"},"nodeType":"YulFunctionCall","src":"12146:9:37"},"nodeType":"YulIf","src":"12143:132:37"},{"nodeType":"YulAssignment","src":"12284:14:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12293:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"12296:1:37"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12289:3:37"},"nodeType":"YulFunctionCall","src":"12289:9:37"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"12284:1:37"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12118:1:37","type":""},{"name":"y","nodeType":"YulTypedName","src":"12121:1:37","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"12127:1:37","type":""}],"src":"12087:217:37"},{"body":{"nodeType":"YulBlock","src":"12416:87:37","statements":[{"nodeType":"YulAssignment","src":"12426:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12438:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12449:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12434:3:37"},"nodeType":"YulFunctionCall","src":"12434:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12426:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12468:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12483:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"12491:4:37","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12479:3:37"},"nodeType":"YulFunctionCall","src":"12479:17:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12461:6:37"},"nodeType":"YulFunctionCall","src":"12461:36:37"},"nodeType":"YulExpressionStatement","src":"12461:36:37"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12385:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12396:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12407:4:37","type":""}],"src":"12309:194:37"},{"body":{"nodeType":"YulBlock","src":"12540:95:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12557:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12564:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12569:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12560:3:37"},"nodeType":"YulFunctionCall","src":"12560:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12550:6:37"},"nodeType":"YulFunctionCall","src":"12550:31:37"},"nodeType":"YulExpressionStatement","src":"12550:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12597:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12600:4:37","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12590:6:37"},"nodeType":"YulFunctionCall","src":"12590:15:37"},"nodeType":"YulExpressionStatement","src":"12590:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12621:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12624:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12614:6:37"},"nodeType":"YulFunctionCall","src":"12614:15:37"},"nodeType":"YulExpressionStatement","src":"12614:15:37"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12508:127:37"},{"body":{"nodeType":"YulBlock","src":"12814:227:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12831:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12842:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12824:6:37"},"nodeType":"YulFunctionCall","src":"12824:21:37"},"nodeType":"YulExpressionStatement","src":"12824:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12865:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12876:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12861:3:37"},"nodeType":"YulFunctionCall","src":"12861:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"12881:2:37","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12854:6:37"},"nodeType":"YulFunctionCall","src":"12854:30:37"},"nodeType":"YulExpressionStatement","src":"12854:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12904:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12915:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12900:3:37"},"nodeType":"YulFunctionCall","src":"12900:18:37"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"12920:34:37","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12893:6:37"},"nodeType":"YulFunctionCall","src":"12893:62:37"},"nodeType":"YulExpressionStatement","src":"12893:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12975:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"12986:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12971:3:37"},"nodeType":"YulFunctionCall","src":"12971:18:37"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"12991:7:37","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12964:6:37"},"nodeType":"YulFunctionCall","src":"12964:35:37"},"nodeType":"YulExpressionStatement","src":"12964:35:37"},{"nodeType":"YulAssignment","src":"13008:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13020:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"13031:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13016:3:37"},"nodeType":"YulFunctionCall","src":"13016:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13008:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12791:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12805:4:37","type":""}],"src":"12640:401:37"},{"body":{"nodeType":"YulBlock","src":"13106:78:37","statements":[{"nodeType":"YulAssignment","src":"13116:22:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13131:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13125:5:37"},"nodeType":"YulFunctionCall","src":"13125:13:37"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13116:5:37"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13172:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13147:24:37"},"nodeType":"YulFunctionCall","src":"13147:31:37"},"nodeType":"YulExpressionStatement","src":"13147:31:37"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13085:6:37","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13096:5:37","type":""}],"src":"13046:138:37"},{"body":{"nodeType":"YulBlock","src":"13253:366:37","statements":[{"body":{"nodeType":"YulBlock","src":"13302:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13311:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13314:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13304:6:37"},"nodeType":"YulFunctionCall","src":"13304:12:37"},"nodeType":"YulExpressionStatement","src":"13304:12:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13281:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"13289:4:37","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13277:3:37"},"nodeType":"YulFunctionCall","src":"13277:17:37"},{"name":"end","nodeType":"YulIdentifier","src":"13296:3:37"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13273:3:37"},"nodeType":"YulFunctionCall","src":"13273:27:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13266:6:37"},"nodeType":"YulFunctionCall","src":"13266:35:37"},"nodeType":"YulIf","src":"13263:55:37"},{"nodeType":"YulVariableDeclaration","src":"13327:23:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13343:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13337:5:37"},"nodeType":"YulFunctionCall","src":"13337:13:37"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13331:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13359:64:37","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13419:2:37"}],"functionName":{"name":"array_allocation_size_string","nodeType":"YulIdentifier","src":"13390:28:37"},"nodeType":"YulFunctionCall","src":"13390:32:37"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13374:15:37"},"nodeType":"YulFunctionCall","src":"13374:49:37"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"13363:7:37","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"13439:7:37"},{"name":"_1","nodeType":"YulIdentifier","src":"13448:2:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13432:6:37"},"nodeType":"YulFunctionCall","src":"13432:19:37"},"nodeType":"YulExpressionStatement","src":"13432:19:37"},{"body":{"nodeType":"YulBlock","src":"13499:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13508:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13511:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13501:6:37"},"nodeType":"YulFunctionCall","src":"13501:12:37"},"nodeType":"YulExpressionStatement","src":"13501:12:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13474:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"13482:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13470:3:37"},"nodeType":"YulFunctionCall","src":"13470:15:37"},{"kind":"number","nodeType":"YulLiteral","src":"13487:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:37"},"nodeType":"YulFunctionCall","src":"13466:26:37"},{"name":"end","nodeType":"YulIdentifier","src":"13494:3:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13463:2:37"},"nodeType":"YulFunctionCall","src":"13463:35:37"},"nodeType":"YulIf","src":"13460:55:37"},{"expression":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13550:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"13558:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13546:3:37"},"nodeType":"YulFunctionCall","src":"13546:17:37"},{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"13569:7:37"},{"kind":"number","nodeType":"YulLiteral","src":"13578:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13565:3:37"},"nodeType":"YulFunctionCall","src":"13565:18:37"},{"name":"_1","nodeType":"YulIdentifier","src":"13585:2:37"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"13524:21:37"},"nodeType":"YulFunctionCall","src":"13524:64:37"},"nodeType":"YulExpressionStatement","src":"13524:64:37"},{"nodeType":"YulAssignment","src":"13597:16:37","value":{"name":"array_1","nodeType":"YulIdentifier","src":"13606:7:37"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13597:5:37"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13227:6:37","type":""},{"name":"end","nodeType":"YulTypedName","src":"13235:3:37","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13243:5:37","type":""}],"src":"13189:430:37"},{"body":{"nodeType":"YulBlock","src":"13705:1056:37","statements":[{"body":{"nodeType":"YulBlock","src":"13749:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13758:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13761:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13751:6:37"},"nodeType":"YulFunctionCall","src":"13751:12:37"},"nodeType":"YulExpressionStatement","src":"13751:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"13726:3:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"13731:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13722:3:37"},"nodeType":"YulFunctionCall","src":"13722:19:37"},{"kind":"number","nodeType":"YulLiteral","src":"13743:4:37","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13718:3:37"},"nodeType":"YulFunctionCall","src":"13718:30:37"},"nodeType":"YulIf","src":"13715:50:37"},{"nodeType":"YulAssignment","src":"13774:31:37","value":{"arguments":[],"functionName":{"name":"allocate_memory_4196","nodeType":"YulIdentifier","src":"13783:20:37"},"nodeType":"YulFunctionCall","src":"13783:22:37"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13774:5:37"}]},{"nodeType":"YulVariableDeclaration","src":"13814:30:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13834:9:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13828:5:37"},"nodeType":"YulFunctionCall","src":"13828:16:37"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13818:6:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13853:28:37","value":{"kind":"number","nodeType":"YulLiteral","src":"13863:18:37","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13857:2:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"13908:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13917:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13920:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13910:6:37"},"nodeType":"YulFunctionCall","src":"13910:12:37"},"nodeType":"YulExpressionStatement","src":"13910:12:37"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13896:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"13904:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13893:2:37"},"nodeType":"YulFunctionCall","src":"13893:14:37"},"nodeType":"YulIf","src":"13890:34:37"},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13940:5:37"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13980:9:37"},{"name":"offset","nodeType":"YulIdentifier","src":"13991:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13976:3:37"},"nodeType":"YulFunctionCall","src":"13976:22:37"},{"name":"end","nodeType":"YulIdentifier","src":"14000:3:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"13947:28:37"},"nodeType":"YulFunctionCall","src":"13947:57:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13933:6:37"},"nodeType":"YulFunctionCall","src":"13933:72:37"},"nodeType":"YulExpressionStatement","src":"13933:72:37"},{"nodeType":"YulVariableDeclaration","src":"14014:41:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14040:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14051:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14036:3:37"},"nodeType":"YulFunctionCall","src":"14036:18:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14030:5:37"},"nodeType":"YulFunctionCall","src":"14030:25:37"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"14018:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"14084:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14093:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14096:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14086:6:37"},"nodeType":"YulFunctionCall","src":"14086:12:37"},"nodeType":"YulExpressionStatement","src":"14086:12:37"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"14070:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"14080:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14067:2:37"},"nodeType":"YulFunctionCall","src":"14067:16:37"},"nodeType":"YulIf","src":"14064:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14120:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"14127:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14116:3:37"},"nodeType":"YulFunctionCall","src":"14116:14:37"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14165:9:37"},{"name":"offset_1","nodeType":"YulIdentifier","src":"14176:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14161:3:37"},"nodeType":"YulFunctionCall","src":"14161:24:37"},{"name":"end","nodeType":"YulIdentifier","src":"14187:3:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"14132:28:37"},"nodeType":"YulFunctionCall","src":"14132:59:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14109:6:37"},"nodeType":"YulFunctionCall","src":"14109:83:37"},"nodeType":"YulExpressionStatement","src":"14109:83:37"},{"nodeType":"YulVariableDeclaration","src":"14201:41:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14227:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14238:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14223:3:37"},"nodeType":"YulFunctionCall","src":"14223:18:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14217:5:37"},"nodeType":"YulFunctionCall","src":"14217:25:37"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"14205:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"14271:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14280:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14283:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14273:6:37"},"nodeType":"YulFunctionCall","src":"14273:12:37"},"nodeType":"YulExpressionStatement","src":"14273:12:37"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"14257:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"14267:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14254:2:37"},"nodeType":"YulFunctionCall","src":"14254:16:37"},"nodeType":"YulIf","src":"14251:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14307:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"14314:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14303:3:37"},"nodeType":"YulFunctionCall","src":"14303:14:37"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14352:9:37"},{"name":"offset_2","nodeType":"YulIdentifier","src":"14363:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14348:3:37"},"nodeType":"YulFunctionCall","src":"14348:24:37"},{"name":"end","nodeType":"YulIdentifier","src":"14374:3:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"14319:28:37"},"nodeType":"YulFunctionCall","src":"14319:59:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14296:6:37"},"nodeType":"YulFunctionCall","src":"14296:83:37"},"nodeType":"YulExpressionStatement","src":"14296:83:37"},{"nodeType":"YulVariableDeclaration","src":"14388:41:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14414:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14425:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14410:3:37"},"nodeType":"YulFunctionCall","src":"14410:18:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14404:5:37"},"nodeType":"YulFunctionCall","src":"14404:25:37"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"14392:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"14458:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14467:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14470:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14460:6:37"},"nodeType":"YulFunctionCall","src":"14460:12:37"},"nodeType":"YulExpressionStatement","src":"14460:12:37"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"14444:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"14454:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14441:2:37"},"nodeType":"YulFunctionCall","src":"14441:16:37"},"nodeType":"YulIf","src":"14438:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14494:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"14501:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14490:3:37"},"nodeType":"YulFunctionCall","src":"14490:14:37"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14539:9:37"},{"name":"offset_3","nodeType":"YulIdentifier","src":"14550:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14535:3:37"},"nodeType":"YulFunctionCall","src":"14535:24:37"},{"name":"end","nodeType":"YulIdentifier","src":"14561:3:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"14506:28:37"},"nodeType":"YulFunctionCall","src":"14506:59:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14483:6:37"},"nodeType":"YulFunctionCall","src":"14483:83:37"},"nodeType":"YulExpressionStatement","src":"14483:83:37"},{"nodeType":"YulVariableDeclaration","src":"14575:42:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14601:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"14612:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14597:3:37"},"nodeType":"YulFunctionCall","src":"14597:19:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14591:5:37"},"nodeType":"YulFunctionCall","src":"14591:26:37"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"14579:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"14646:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14655:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14658:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14648:6:37"},"nodeType":"YulFunctionCall","src":"14648:12:37"},"nodeType":"YulExpressionStatement","src":"14648:12:37"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"14632:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"14642:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14629:2:37"},"nodeType":"YulFunctionCall","src":"14629:16:37"},"nodeType":"YulIf","src":"14626:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14682:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"14689:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14678:3:37"},"nodeType":"YulFunctionCall","src":"14678:15:37"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14728:9:37"},{"name":"offset_4","nodeType":"YulIdentifier","src":"14739:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14724:3:37"},"nodeType":"YulFunctionCall","src":"14724:24:37"},{"name":"end","nodeType":"YulIdentifier","src":"14750:3:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"14695:28:37"},"nodeType":"YulFunctionCall","src":"14695:59:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14671:6:37"},"nodeType":"YulFunctionCall","src":"14671:84:37"},"nodeType":"YulExpressionStatement","src":"14671:84:37"}]},"name":"abi_decode_struct_ProjectSocial_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13676:9:37","type":""},{"name":"end","nodeType":"YulTypedName","src":"13687:3:37","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13695:5:37","type":""}],"src":"13624:1137:37"},{"body":{"nodeType":"YulBlock","src":"14834:114:37","statements":[{"body":{"nodeType":"YulBlock","src":"14878:22:37","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14880:16:37"},"nodeType":"YulFunctionCall","src":"14880:18:37"},"nodeType":"YulExpressionStatement","src":"14880:18:37"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14850:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"14858:18:37","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14847:2:37"},"nodeType":"YulFunctionCall","src":"14847:30:37"},"nodeType":"YulIf","src":"14844:56:37"},{"nodeType":"YulAssignment","src":"14909:33:37","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14925:1:37","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"14928:6:37"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14921:3:37"},"nodeType":"YulFunctionCall","src":"14921:14:37"},{"kind":"number","nodeType":"YulLiteral","src":"14937:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14917:3:37"},"nodeType":"YulFunctionCall","src":"14917:25:37"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14909:4:37"}]}]},"name":"array_allocation_size_array_string_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"14814:6:37","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"14825:4:37","type":""}],"src":"14766:182:37"},{"body":{"nodeType":"YulBlock","src":"15027:821:37","statements":[{"body":{"nodeType":"YulBlock","src":"15076:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15085:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15088:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15078:6:37"},"nodeType":"YulFunctionCall","src":"15078:12:37"},"nodeType":"YulExpressionStatement","src":"15078:12:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15055:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"15063:4:37","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15051:3:37"},"nodeType":"YulFunctionCall","src":"15051:17:37"},{"name":"end","nodeType":"YulIdentifier","src":"15070:3:37"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15047:3:37"},"nodeType":"YulFunctionCall","src":"15047:27:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15040:6:37"},"nodeType":"YulFunctionCall","src":"15040:35:37"},"nodeType":"YulIf","src":"15037:55:37"},{"nodeType":"YulVariableDeclaration","src":"15101:23:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15117:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15111:5:37"},"nodeType":"YulFunctionCall","src":"15111:13:37"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15105:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15133:14:37","value":{"kind":"number","nodeType":"YulLiteral","src":"15143:4:37","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15137:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15156:70:37","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15222:2:37"}],"functionName":{"name":"array_allocation_size_array_string_dyn","nodeType":"YulIdentifier","src":"15183:38:37"},"nodeType":"YulFunctionCall","src":"15183:42:37"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"15167:15:37"},"nodeType":"YulFunctionCall","src":"15167:59:37"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"15160:3:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15235:16:37","value":{"name":"dst","nodeType":"YulIdentifier","src":"15248:3:37"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"15239:5:37","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15267:3:37"},{"name":"_1","nodeType":"YulIdentifier","src":"15272:2:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15260:6:37"},"nodeType":"YulFunctionCall","src":"15260:15:37"},"nodeType":"YulExpressionStatement","src":"15260:15:37"},{"nodeType":"YulAssignment","src":"15284:19:37","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15295:3:37"},{"name":"_2","nodeType":"YulIdentifier","src":"15300:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15291:3:37"},"nodeType":"YulFunctionCall","src":"15291:12:37"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"15284:3:37"}]},{"nodeType":"YulVariableDeclaration","src":"15312:46:37","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15334:6:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15346:1:37","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"15349:2:37"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15342:3:37"},"nodeType":"YulFunctionCall","src":"15342:10:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15330:3:37"},"nodeType":"YulFunctionCall","src":"15330:23:37"},{"name":"_2","nodeType":"YulIdentifier","src":"15355:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15326:3:37"},"nodeType":"YulFunctionCall","src":"15326:32:37"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"15316:6:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"15386:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15395:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15398:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15388:6:37"},"nodeType":"YulFunctionCall","src":"15388:12:37"},"nodeType":"YulExpressionStatement","src":"15388:12:37"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"15373:6:37"},{"name":"end","nodeType":"YulIdentifier","src":"15381:3:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15370:2:37"},"nodeType":"YulFunctionCall","src":"15370:15:37"},"nodeType":"YulIf","src":"15367:35:37"},{"nodeType":"YulVariableDeclaration","src":"15411:26:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15426:6:37"},{"name":"_2","nodeType":"YulIdentifier","src":"15434:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15422:3:37"},"nodeType":"YulFunctionCall","src":"15422:15:37"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"15415:3:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"15502:317:37","statements":[{"nodeType":"YulVariableDeclaration","src":"15516:29:37","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15541:3:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15535:5:37"},"nodeType":"YulFunctionCall","src":"15535:10:37"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"15520:11:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"15609:74:37","statements":[{"nodeType":"YulVariableDeclaration","src":"15627:11:37","value":{"kind":"number","nodeType":"YulLiteral","src":"15637:1:37","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"15631:2:37","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"15662:2:37"},{"name":"_3","nodeType":"YulIdentifier","src":"15666:2:37"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15655:6:37"},"nodeType":"YulFunctionCall","src":"15655:14:37"},"nodeType":"YulExpressionStatement","src":"15655:14:37"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"15564:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"15577:18:37","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15561:2:37"},"nodeType":"YulFunctionCall","src":"15561:35:37"},"nodeType":"YulIf","src":"15558:125:37"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15703:3:37"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15745:6:37"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"15753:11:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15741:3:37"},"nodeType":"YulFunctionCall","src":"15741:24:37"},{"name":"_2","nodeType":"YulIdentifier","src":"15767:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15737:3:37"},"nodeType":"YulFunctionCall","src":"15737:33:37"},{"name":"end","nodeType":"YulIdentifier","src":"15772:3:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"15708:28:37"},"nodeType":"YulFunctionCall","src":"15708:68:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15696:6:37"},"nodeType":"YulFunctionCall","src":"15696:81:37"},"nodeType":"YulExpressionStatement","src":"15696:81:37"},{"nodeType":"YulAssignment","src":"15790:19:37","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15801:3:37"},{"name":"_2","nodeType":"YulIdentifier","src":"15806:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15797:3:37"},"nodeType":"YulFunctionCall","src":"15797:12:37"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"15790:3:37"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15457:3:37"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"15462:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15454:2:37"},"nodeType":"YulFunctionCall","src":"15454:15:37"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15470:23:37","statements":[{"nodeType":"YulAssignment","src":"15472:19:37","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15483:3:37"},{"name":"_2","nodeType":"YulIdentifier","src":"15488:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15479:3:37"},"nodeType":"YulFunctionCall","src":"15479:12:37"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"15472:3:37"}]}]},"pre":{"nodeType":"YulBlock","src":"15450:3:37","statements":[]},"src":"15446:373:37"},{"nodeType":"YulAssignment","src":"15828:14:37","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"15837:5:37"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"15828:5:37"}]}]},"name":"abi_decode_array_string_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15001:6:37","type":""},{"name":"end","nodeType":"YulTypedName","src":"15009:3:37","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"15017:5:37","type":""}],"src":"14953:895:37"},{"body":{"nodeType":"YulBlock","src":"15928:658:37","statements":[{"body":{"nodeType":"YulBlock","src":"15977:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15986:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15989:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15979:6:37"},"nodeType":"YulFunctionCall","src":"15979:12:37"},"nodeType":"YulExpressionStatement","src":"15979:12:37"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15956:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"15964:4:37","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15952:3:37"},"nodeType":"YulFunctionCall","src":"15952:17:37"},{"name":"end","nodeType":"YulIdentifier","src":"15971:3:37"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15948:3:37"},"nodeType":"YulFunctionCall","src":"15948:27:37"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15941:6:37"},"nodeType":"YulFunctionCall","src":"15941:35:37"},"nodeType":"YulIf","src":"15938:55:37"},{"nodeType":"YulVariableDeclaration","src":"16002:23:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16018:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16012:5:37"},"nodeType":"YulFunctionCall","src":"16012:13:37"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16006:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16034:14:37","value":{"kind":"number","nodeType":"YulLiteral","src":"16044:4:37","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"16038:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16057:70:37","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"16123:2:37"}],"functionName":{"name":"array_allocation_size_array_string_dyn","nodeType":"YulIdentifier","src":"16084:38:37"},"nodeType":"YulFunctionCall","src":"16084:42:37"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"16068:15:37"},"nodeType":"YulFunctionCall","src":"16068:59:37"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"16061:3:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16136:16:37","value":{"name":"dst","nodeType":"YulIdentifier","src":"16149:3:37"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"16140:5:37","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16168:3:37"},{"name":"_1","nodeType":"YulIdentifier","src":"16173:2:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16161:6:37"},"nodeType":"YulFunctionCall","src":"16161:15:37"},"nodeType":"YulExpressionStatement","src":"16161:15:37"},{"nodeType":"YulAssignment","src":"16185:19:37","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16196:3:37"},{"name":"_2","nodeType":"YulIdentifier","src":"16201:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16192:3:37"},"nodeType":"YulFunctionCall","src":"16192:12:37"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"16185:3:37"}]},{"nodeType":"YulVariableDeclaration","src":"16213:46:37","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16235:6:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16247:1:37","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"16250:2:37"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16243:3:37"},"nodeType":"YulFunctionCall","src":"16243:10:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16231:3:37"},"nodeType":"YulFunctionCall","src":"16231:23:37"},{"name":"_2","nodeType":"YulIdentifier","src":"16256:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16227:3:37"},"nodeType":"YulFunctionCall","src":"16227:32:37"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"16217:6:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"16287:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16296:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16299:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16289:6:37"},"nodeType":"YulFunctionCall","src":"16289:12:37"},"nodeType":"YulExpressionStatement","src":"16289:12:37"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"16274:6:37"},{"name":"end","nodeType":"YulIdentifier","src":"16282:3:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16271:2:37"},"nodeType":"YulFunctionCall","src":"16271:15:37"},"nodeType":"YulIf","src":"16268:35:37"},{"nodeType":"YulVariableDeclaration","src":"16312:26:37","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16327:6:37"},{"name":"_2","nodeType":"YulIdentifier","src":"16335:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16323:3:37"},"nodeType":"YulFunctionCall","src":"16323:15:37"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"16316:3:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"16403:154:37","statements":[{"nodeType":"YulVariableDeclaration","src":"16417:23:37","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16436:3:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16430:5:37"},"nodeType":"YulFunctionCall","src":"16430:10:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16421:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16478:5:37"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"16453:24:37"},"nodeType":"YulFunctionCall","src":"16453:31:37"},"nodeType":"YulExpressionStatement","src":"16453:31:37"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16504:3:37"},{"name":"value","nodeType":"YulIdentifier","src":"16509:5:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16497:6:37"},"nodeType":"YulFunctionCall","src":"16497:18:37"},"nodeType":"YulExpressionStatement","src":"16497:18:37"},{"nodeType":"YulAssignment","src":"16528:19:37","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16539:3:37"},{"name":"_2","nodeType":"YulIdentifier","src":"16544:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16535:3:37"},"nodeType":"YulFunctionCall","src":"16535:12:37"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"16528:3:37"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16358:3:37"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"16363:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16355:2:37"},"nodeType":"YulFunctionCall","src":"16355:15:37"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16371:23:37","statements":[{"nodeType":"YulAssignment","src":"16373:19:37","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16384:3:37"},{"name":"_2","nodeType":"YulIdentifier","src":"16389:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16380:3:37"},"nodeType":"YulFunctionCall","src":"16380:12:37"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"16373:3:37"}]}]},"pre":{"nodeType":"YulBlock","src":"16351:3:37","statements":[]},"src":"16347:210:37"},{"nodeType":"YulAssignment","src":"16566:14:37","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"16575:5:37"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"16566:5:37"}]}]},"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15902:6:37","type":""},{"name":"end","nodeType":"YulTypedName","src":"15910:3:37","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"15918:5:37","type":""}],"src":"15853:733:37"},{"body":{"nodeType":"YulBlock","src":"16697:3122:37","statements":[{"body":{"nodeType":"YulBlock","src":"16743:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16752:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16755:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16745:6:37"},"nodeType":"YulFunctionCall","src":"16745:12:37"},"nodeType":"YulExpressionStatement","src":"16745:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16718:7:37"},{"name":"headStart","nodeType":"YulIdentifier","src":"16727:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16714:3:37"},"nodeType":"YulFunctionCall","src":"16714:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"16739:2:37","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16710:3:37"},"nodeType":"YulFunctionCall","src":"16710:32:37"},"nodeType":"YulIf","src":"16707:52:37"},{"nodeType":"YulVariableDeclaration","src":"16768:30:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16788:9:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16782:5:37"},"nodeType":"YulFunctionCall","src":"16782:16:37"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16772:6:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16807:28:37","value":{"kind":"number","nodeType":"YulLiteral","src":"16817:18:37","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16811:2:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"16862:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16871:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16874:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16864:6:37"},"nodeType":"YulFunctionCall","src":"16864:12:37"},"nodeType":"YulExpressionStatement","src":"16864:12:37"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16850:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"16858:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16847:2:37"},"nodeType":"YulFunctionCall","src":"16847:14:37"},"nodeType":"YulIf","src":"16844:34:37"},{"nodeType":"YulVariableDeclaration","src":"16887:32:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16901:9:37"},{"name":"offset","nodeType":"YulIdentifier","src":"16912:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16897:3:37"},"nodeType":"YulFunctionCall","src":"16897:22:37"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"16891:2:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"16961:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16970:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16973:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16963:6:37"},"nodeType":"YulFunctionCall","src":"16963:12:37"},"nodeType":"YulExpressionStatement","src":"16963:12:37"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16939:7:37"},{"name":"_2","nodeType":"YulIdentifier","src":"16948:2:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16935:3:37"},"nodeType":"YulFunctionCall","src":"16935:16:37"},{"kind":"number","nodeType":"YulLiteral","src":"16953:6:37","type":"","value":"0x0260"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16931:3:37"},"nodeType":"YulFunctionCall","src":"16931:29:37"},"nodeType":"YulIf","src":"16928:49:37"},{"nodeType":"YulVariableDeclaration","src":"16986:35:37","value":{"arguments":[],"functionName":{"name":"allocate_memory_4198","nodeType":"YulIdentifier","src":"16999:20:37"},"nodeType":"YulFunctionCall","src":"16999:22:37"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16990:5:37","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17037:5:37"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17073:2:37"}],"functionName":{"name":"abi_decode_uint24_fromMemory","nodeType":"YulIdentifier","src":"17044:28:37"},"nodeType":"YulFunctionCall","src":"17044:32:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17030:6:37"},"nodeType":"YulFunctionCall","src":"17030:47:37"},"nodeType":"YulExpressionStatement","src":"17030:47:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17097:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"17104:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17093:3:37"},"nodeType":"YulFunctionCall","src":"17093:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17142:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"17146:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17138:3:37"},"nodeType":"YulFunctionCall","src":"17138:11:37"}],"functionName":{"name":"abi_decode_uint24_fromMemory","nodeType":"YulIdentifier","src":"17109:28:37"},"nodeType":"YulFunctionCall","src":"17109:41:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17086:6:37"},"nodeType":"YulFunctionCall","src":"17086:65:37"},"nodeType":"YulExpressionStatement","src":"17086:65:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17171:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"17178:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17167:3:37"},"nodeType":"YulFunctionCall","src":"17167:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17193:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"17197:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17189:3:37"},"nodeType":"YulFunctionCall","src":"17189:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17183:5:37"},"nodeType":"YulFunctionCall","src":"17183:18:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17160:6:37"},"nodeType":"YulFunctionCall","src":"17160:42:37"},"nodeType":"YulExpressionStatement","src":"17160:42:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17222:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"17229:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17218:3:37"},"nodeType":"YulFunctionCall","src":"17218:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17268:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"17272:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17264:3:37"},"nodeType":"YulFunctionCall","src":"17264:11:37"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"17234:29:37"},"nodeType":"YulFunctionCall","src":"17234:42:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17211:6:37"},"nodeType":"YulFunctionCall","src":"17211:66:37"},"nodeType":"YulExpressionStatement","src":"17211:66:37"},{"nodeType":"YulVariableDeclaration","src":"17286:35:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17312:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"17316:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17308:3:37"},"nodeType":"YulFunctionCall","src":"17308:12:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17302:5:37"},"nodeType":"YulFunctionCall","src":"17302:19:37"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"17290:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"17350:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17359:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17362:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17352:6:37"},"nodeType":"YulFunctionCall","src":"17352:12:37"},"nodeType":"YulExpressionStatement","src":"17352:12:37"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"17336:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"17346:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17333:2:37"},"nodeType":"YulFunctionCall","src":"17333:16:37"},"nodeType":"YulIf","src":"17330:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17386:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"17393:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17382:3:37"},"nodeType":"YulFunctionCall","src":"17382:15:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17432:2:37"},{"name":"offset_1","nodeType":"YulIdentifier","src":"17436:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17428:3:37"},"nodeType":"YulFunctionCall","src":"17428:17:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17447:7:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"17399:28:37"},"nodeType":"YulFunctionCall","src":"17399:56:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17375:6:37"},"nodeType":"YulFunctionCall","src":"17375:81:37"},"nodeType":"YulExpressionStatement","src":"17375:81:37"},{"nodeType":"YulVariableDeclaration","src":"17465:35:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17491:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"17495:3:37","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17487:3:37"},"nodeType":"YulFunctionCall","src":"17487:12:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17481:5:37"},"nodeType":"YulFunctionCall","src":"17481:19:37"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"17469:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"17529:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17538:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17541:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17531:6:37"},"nodeType":"YulFunctionCall","src":"17531:12:37"},"nodeType":"YulExpressionStatement","src":"17531:12:37"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"17515:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"17525:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17512:2:37"},"nodeType":"YulFunctionCall","src":"17512:16:37"},"nodeType":"YulIf","src":"17509:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17565:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"17572:3:37","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17561:3:37"},"nodeType":"YulFunctionCall","src":"17561:15:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17611:2:37"},{"name":"offset_2","nodeType":"YulIdentifier","src":"17615:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17607:3:37"},"nodeType":"YulFunctionCall","src":"17607:17:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17626:7:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"17578:28:37"},"nodeType":"YulFunctionCall","src":"17578:56:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17554:6:37"},"nodeType":"YulFunctionCall","src":"17554:81:37"},"nodeType":"YulExpressionStatement","src":"17554:81:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17655:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"17662:3:37","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17651:3:37"},"nodeType":"YulFunctionCall","src":"17651:15:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17702:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"17706:3:37","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17698:3:37"},"nodeType":"YulFunctionCall","src":"17698:12:37"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"17668:29:37"},"nodeType":"YulFunctionCall","src":"17668:43:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17644:6:37"},"nodeType":"YulFunctionCall","src":"17644:68:37"},"nodeType":"YulExpressionStatement","src":"17644:68:37"},{"nodeType":"YulVariableDeclaration","src":"17721:35:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17747:2:37"},{"kind":"number","nodeType":"YulLiteral","src":"17751:3:37","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17743:3:37"},"nodeType":"YulFunctionCall","src":"17743:12:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17737:5:37"},"nodeType":"YulFunctionCall","src":"17737:19:37"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"17725:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"17785:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17794:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17797:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17787:6:37"},"nodeType":"YulFunctionCall","src":"17787:12:37"},"nodeType":"YulExpressionStatement","src":"17787:12:37"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"17771:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"17781:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17768:2:37"},"nodeType":"YulFunctionCall","src":"17768:16:37"},"nodeType":"YulIf","src":"17765:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17821:5:37"},{"kind":"number","nodeType":"YulLiteral","src":"17828:3:37","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17817:3:37"},"nodeType":"YulFunctionCall","src":"17817:15:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17867:2:37"},{"name":"offset_3","nodeType":"YulIdentifier","src":"17871:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17863:3:37"},"nodeType":"YulFunctionCall","src":"17863:17:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17882:7:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"17834:28:37"},"nodeType":"YulFunctionCall","src":"17834:56:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17810:6:37"},"nodeType":"YulFunctionCall","src":"17810:81:37"},"nodeType":"YulExpressionStatement","src":"17810:81:37"},{"nodeType":"YulVariableDeclaration","src":"17900:13:37","value":{"kind":"number","nodeType":"YulLiteral","src":"17910:3:37","type":"","value":"256"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"17904:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17922:34:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17948:2:37"},{"name":"_3","nodeType":"YulIdentifier","src":"17952:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17944:3:37"},"nodeType":"YulFunctionCall","src":"17944:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17938:5:37"},"nodeType":"YulFunctionCall","src":"17938:18:37"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"17926:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"17985:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17994:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17997:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17987:6:37"},"nodeType":"YulFunctionCall","src":"17987:12:37"},"nodeType":"YulExpressionStatement","src":"17987:12:37"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"17971:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"17981:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17968:2:37"},"nodeType":"YulFunctionCall","src":"17968:16:37"},"nodeType":"YulIf","src":"17965:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18021:5:37"},{"name":"_3","nodeType":"YulIdentifier","src":"18028:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18017:3:37"},"nodeType":"YulFunctionCall","src":"18017:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18066:2:37"},{"name":"offset_4","nodeType":"YulIdentifier","src":"18070:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18062:3:37"},"nodeType":"YulFunctionCall","src":"18062:17:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18081:7:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"18033:28:37"},"nodeType":"YulFunctionCall","src":"18033:56:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18010:6:37"},"nodeType":"YulFunctionCall","src":"18010:80:37"},"nodeType":"YulExpressionStatement","src":"18010:80:37"},{"nodeType":"YulVariableDeclaration","src":"18099:13:37","value":{"kind":"number","nodeType":"YulLiteral","src":"18109:3:37","type":"","value":"288"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"18103:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18121:34:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18147:2:37"},{"name":"_4","nodeType":"YulIdentifier","src":"18151:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18143:3:37"},"nodeType":"YulFunctionCall","src":"18143:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18137:5:37"},"nodeType":"YulFunctionCall","src":"18137:18:37"},"variables":[{"name":"offset_5","nodeType":"YulTypedName","src":"18125:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"18184:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18193:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18196:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18186:6:37"},"nodeType":"YulFunctionCall","src":"18186:12:37"},"nodeType":"YulExpressionStatement","src":"18186:12:37"}]},"condition":{"arguments":[{"name":"offset_5","nodeType":"YulIdentifier","src":"18170:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"18180:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18167:2:37"},"nodeType":"YulFunctionCall","src":"18167:16:37"},"nodeType":"YulIf","src":"18164:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18220:5:37"},{"name":"_4","nodeType":"YulIdentifier","src":"18227:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18216:3:37"},"nodeType":"YulFunctionCall","src":"18216:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18265:2:37"},{"name":"offset_5","nodeType":"YulIdentifier","src":"18269:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18261:3:37"},"nodeType":"YulFunctionCall","src":"18261:17:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18280:7:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"18232:28:37"},"nodeType":"YulFunctionCall","src":"18232:56:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18209:6:37"},"nodeType":"YulFunctionCall","src":"18209:80:37"},"nodeType":"YulExpressionStatement","src":"18209:80:37"},{"nodeType":"YulVariableDeclaration","src":"18298:13:37","value":{"kind":"number","nodeType":"YulLiteral","src":"18308:3:37","type":"","value":"320"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"18302:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18320:34:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18346:2:37"},{"name":"_5","nodeType":"YulIdentifier","src":"18350:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18342:3:37"},"nodeType":"YulFunctionCall","src":"18342:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18336:5:37"},"nodeType":"YulFunctionCall","src":"18336:18:37"},"variables":[{"name":"offset_6","nodeType":"YulTypedName","src":"18324:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"18383:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18392:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18395:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18385:6:37"},"nodeType":"YulFunctionCall","src":"18385:12:37"},"nodeType":"YulExpressionStatement","src":"18385:12:37"}]},"condition":{"arguments":[{"name":"offset_6","nodeType":"YulIdentifier","src":"18369:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"18379:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18366:2:37"},"nodeType":"YulFunctionCall","src":"18366:16:37"},"nodeType":"YulIf","src":"18363:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18419:5:37"},{"name":"_5","nodeType":"YulIdentifier","src":"18426:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18415:3:37"},"nodeType":"YulFunctionCall","src":"18415:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18478:2:37"},{"name":"offset_6","nodeType":"YulIdentifier","src":"18482:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18474:3:37"},"nodeType":"YulFunctionCall","src":"18474:17:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18493:7:37"}],"functionName":{"name":"abi_decode_struct_ProjectSocial_fromMemory","nodeType":"YulIdentifier","src":"18431:42:37"},"nodeType":"YulFunctionCall","src":"18431:70:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18408:6:37"},"nodeType":"YulFunctionCall","src":"18408:94:37"},"nodeType":"YulExpressionStatement","src":"18408:94:37"},{"nodeType":"YulVariableDeclaration","src":"18511:13:37","value":{"kind":"number","nodeType":"YulLiteral","src":"18521:3:37","type":"","value":"352"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"18515:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18533:34:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18559:2:37"},{"name":"_6","nodeType":"YulIdentifier","src":"18563:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18555:3:37"},"nodeType":"YulFunctionCall","src":"18555:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18549:5:37"},"nodeType":"YulFunctionCall","src":"18549:18:37"},"variables":[{"name":"offset_7","nodeType":"YulTypedName","src":"18537:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"18596:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18605:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18608:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18598:6:37"},"nodeType":"YulFunctionCall","src":"18598:12:37"},"nodeType":"YulExpressionStatement","src":"18598:12:37"}]},"condition":{"arguments":[{"name":"offset_7","nodeType":"YulIdentifier","src":"18582:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"18592:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18579:2:37"},"nodeType":"YulFunctionCall","src":"18579:16:37"},"nodeType":"YulIf","src":"18576:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18632:5:37"},{"name":"_6","nodeType":"YulIdentifier","src":"18639:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18628:3:37"},"nodeType":"YulFunctionCall","src":"18628:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18687:2:37"},{"name":"offset_7","nodeType":"YulIdentifier","src":"18691:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18683:3:37"},"nodeType":"YulFunctionCall","src":"18683:17:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18702:7:37"}],"functionName":{"name":"abi_decode_array_string_dyn_fromMemory","nodeType":"YulIdentifier","src":"18644:38:37"},"nodeType":"YulFunctionCall","src":"18644:66:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18621:6:37"},"nodeType":"YulFunctionCall","src":"18621:90:37"},"nodeType":"YulExpressionStatement","src":"18621:90:37"},{"nodeType":"YulVariableDeclaration","src":"18720:13:37","value":{"kind":"number","nodeType":"YulLiteral","src":"18730:3:37","type":"","value":"384"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"18724:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18742:34:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18768:2:37"},{"name":"_7","nodeType":"YulIdentifier","src":"18772:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18764:3:37"},"nodeType":"YulFunctionCall","src":"18764:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18758:5:37"},"nodeType":"YulFunctionCall","src":"18758:18:37"},"variables":[{"name":"offset_8","nodeType":"YulTypedName","src":"18746:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"18805:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18814:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18817:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18807:6:37"},"nodeType":"YulFunctionCall","src":"18807:12:37"},"nodeType":"YulExpressionStatement","src":"18807:12:37"}]},"condition":{"arguments":[{"name":"offset_8","nodeType":"YulIdentifier","src":"18791:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"18801:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18788:2:37"},"nodeType":"YulFunctionCall","src":"18788:16:37"},"nodeType":"YulIf","src":"18785:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18841:5:37"},{"name":"_7","nodeType":"YulIdentifier","src":"18848:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18837:3:37"},"nodeType":"YulFunctionCall","src":"18837:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18896:2:37"},{"name":"offset_8","nodeType":"YulIdentifier","src":"18900:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18892:3:37"},"nodeType":"YulFunctionCall","src":"18892:17:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18911:7:37"}],"functionName":{"name":"abi_decode_array_string_dyn_fromMemory","nodeType":"YulIdentifier","src":"18853:38:37"},"nodeType":"YulFunctionCall","src":"18853:66:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18830:6:37"},"nodeType":"YulFunctionCall","src":"18830:90:37"},"nodeType":"YulExpressionStatement","src":"18830:90:37"},{"nodeType":"YulVariableDeclaration","src":"18929:13:37","value":{"kind":"number","nodeType":"YulLiteral","src":"18939:3:37","type":"","value":"416"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"18933:2:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18951:34:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18977:2:37"},{"name":"_8","nodeType":"YulIdentifier","src":"18981:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18973:3:37"},"nodeType":"YulFunctionCall","src":"18973:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18967:5:37"},"nodeType":"YulFunctionCall","src":"18967:18:37"},"variables":[{"name":"offset_9","nodeType":"YulTypedName","src":"18955:8:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"19014:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19023:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19026:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19016:6:37"},"nodeType":"YulFunctionCall","src":"19016:12:37"},"nodeType":"YulExpressionStatement","src":"19016:12:37"}]},"condition":{"arguments":[{"name":"offset_9","nodeType":"YulIdentifier","src":"19000:8:37"},{"name":"_1","nodeType":"YulIdentifier","src":"19010:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18997:2:37"},"nodeType":"YulFunctionCall","src":"18997:16:37"},"nodeType":"YulIf","src":"18994:36:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19050:5:37"},{"name":"_8","nodeType":"YulIdentifier","src":"19057:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19046:3:37"},"nodeType":"YulFunctionCall","src":"19046:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"19095:2:37"},{"name":"offset_9","nodeType":"YulIdentifier","src":"19099:8:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19091:3:37"},"nodeType":"YulFunctionCall","src":"19091:17:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19110:7:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"19062:28:37"},"nodeType":"YulFunctionCall","src":"19062:56:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19039:6:37"},"nodeType":"YulFunctionCall","src":"19039:80:37"},"nodeType":"YulExpressionStatement","src":"19039:80:37"},{"nodeType":"YulVariableDeclaration","src":"19128:13:37","value":{"kind":"number","nodeType":"YulLiteral","src":"19138:3:37","type":"","value":"448"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"19132:2:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19161:5:37"},{"name":"_9","nodeType":"YulIdentifier","src":"19168:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19157:3:37"},"nodeType":"YulFunctionCall","src":"19157:14:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"19183:2:37"},{"name":"_9","nodeType":"YulIdentifier","src":"19187:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19179:3:37"},"nodeType":"YulFunctionCall","src":"19179:11:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19173:5:37"},"nodeType":"YulFunctionCall","src":"19173:18:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19150:6:37"},"nodeType":"YulFunctionCall","src":"19150:42:37"},"nodeType":"YulExpressionStatement","src":"19150:42:37"},{"nodeType":"YulVariableDeclaration","src":"19201:14:37","value":{"kind":"number","nodeType":"YulLiteral","src":"19212:3:37","type":"","value":"480"},"variables":[{"name":"_10","nodeType":"YulTypedName","src":"19205:3:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19235:5:37"},{"name":"_10","nodeType":"YulIdentifier","src":"19242:3:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19231:3:37"},"nodeType":"YulFunctionCall","src":"19231:15:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"19282:2:37"},{"name":"_10","nodeType":"YulIdentifier","src":"19286:3:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19278:3:37"},"nodeType":"YulFunctionCall","src":"19278:12:37"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"19248:29:37"},"nodeType":"YulFunctionCall","src":"19248:43:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19224:6:37"},"nodeType":"YulFunctionCall","src":"19224:68:37"},"nodeType":"YulExpressionStatement","src":"19224:68:37"},{"nodeType":"YulVariableDeclaration","src":"19301:14:37","value":{"kind":"number","nodeType":"YulLiteral","src":"19312:3:37","type":"","value":"512"},"variables":[{"name":"_11","nodeType":"YulTypedName","src":"19305:3:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19324:36:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"19351:2:37"},{"name":"_11","nodeType":"YulIdentifier","src":"19355:3:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19347:3:37"},"nodeType":"YulFunctionCall","src":"19347:12:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19341:5:37"},"nodeType":"YulFunctionCall","src":"19341:19:37"},"variables":[{"name":"offset_10","nodeType":"YulTypedName","src":"19328:9:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"19390:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19399:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19402:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19392:6:37"},"nodeType":"YulFunctionCall","src":"19392:12:37"},"nodeType":"YulExpressionStatement","src":"19392:12:37"}]},"condition":{"arguments":[{"name":"offset_10","nodeType":"YulIdentifier","src":"19375:9:37"},{"name":"_1","nodeType":"YulIdentifier","src":"19386:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19372:2:37"},"nodeType":"YulFunctionCall","src":"19372:17:37"},"nodeType":"YulIf","src":"19369:37:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19426:5:37"},{"name":"_11","nodeType":"YulIdentifier","src":"19433:3:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19422:3:37"},"nodeType":"YulFunctionCall","src":"19422:15:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"19472:2:37"},{"name":"offset_10","nodeType":"YulIdentifier","src":"19476:9:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19468:3:37"},"nodeType":"YulFunctionCall","src":"19468:18:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19488:7:37"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"19439:28:37"},"nodeType":"YulFunctionCall","src":"19439:57:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19415:6:37"},"nodeType":"YulFunctionCall","src":"19415:82:37"},"nodeType":"YulExpressionStatement","src":"19415:82:37"},{"nodeType":"YulVariableDeclaration","src":"19506:14:37","value":{"kind":"number","nodeType":"YulLiteral","src":"19517:3:37","type":"","value":"544"},"variables":[{"name":"_12","nodeType":"YulTypedName","src":"19510:3:37","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19529:36:37","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"19556:2:37"},{"name":"_12","nodeType":"YulIdentifier","src":"19560:3:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19552:3:37"},"nodeType":"YulFunctionCall","src":"19552:12:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19546:5:37"},"nodeType":"YulFunctionCall","src":"19546:19:37"},"variables":[{"name":"offset_11","nodeType":"YulTypedName","src":"19533:9:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"19595:16:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19604:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19607:1:37","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19597:6:37"},"nodeType":"YulFunctionCall","src":"19597:12:37"},"nodeType":"YulExpressionStatement","src":"19597:12:37"}]},"condition":{"arguments":[{"name":"offset_11","nodeType":"YulIdentifier","src":"19580:9:37"},{"name":"_1","nodeType":"YulIdentifier","src":"19591:2:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19577:2:37"},"nodeType":"YulFunctionCall","src":"19577:17:37"},"nodeType":"YulIf","src":"19574:37:37"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19631:5:37"},{"name":"_12","nodeType":"YulIdentifier","src":"19638:3:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19627:3:37"},"nodeType":"YulFunctionCall","src":"19627:15:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"19688:2:37"},{"name":"offset_11","nodeType":"YulIdentifier","src":"19692:9:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19684:3:37"},"nodeType":"YulFunctionCall","src":"19684:18:37"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19704:7:37"}],"functionName":{"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulIdentifier","src":"19644:39:37"},"nodeType":"YulFunctionCall","src":"19644:68:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19620:6:37"},"nodeType":"YulFunctionCall","src":"19620:93:37"},"nodeType":"YulExpressionStatement","src":"19620:93:37"},{"nodeType":"YulVariableDeclaration","src":"19722:14:37","value":{"kind":"number","nodeType":"YulLiteral","src":"19733:3:37","type":"","value":"576"},"variables":[{"name":"_13","nodeType":"YulTypedName","src":"19726:3:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19756:5:37"},{"name":"_13","nodeType":"YulIdentifier","src":"19763:3:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19752:3:37"},"nodeType":"YulFunctionCall","src":"19752:15:37"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"19779:2:37"},{"name":"_13","nodeType":"YulIdentifier","src":"19783:3:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19775:3:37"},"nodeType":"YulFunctionCall","src":"19775:12:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19769:5:37"},"nodeType":"YulFunctionCall","src":"19769:19:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19745:6:37"},"nodeType":"YulFunctionCall","src":"19745:44:37"},"nodeType":"YulExpressionStatement","src":"19745:44:37"},{"nodeType":"YulAssignment","src":"19798:15:37","value":{"name":"value","nodeType":"YulIdentifier","src":"19808:5:37"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19798:6:37"}]}]},"name":"abi_decode_tuple_t_struct$_Project_$8077_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16663:9:37","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16674:7:37","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16686:6:37","type":""}],"src":"16591:3228:37"},{"body":{"nodeType":"YulBlock","src":"19953:145:37","statements":[{"nodeType":"YulAssignment","src":"19963:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19975:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"19986:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19971:3:37"},"nodeType":"YulFunctionCall","src":"19971:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19963:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20005:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20020:6:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20036:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"20041:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20032:3:37"},"nodeType":"YulFunctionCall","src":"20032:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"20045:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20028:3:37"},"nodeType":"YulFunctionCall","src":"20028:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20016:3:37"},"nodeType":"YulFunctionCall","src":"20016:32:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19998:6:37"},"nodeType":"YulFunctionCall","src":"19998:51:37"},"nodeType":"YulExpressionStatement","src":"19998:51:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20069:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"20080:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20065:3:37"},"nodeType":"YulFunctionCall","src":"20065:18:37"},{"name":"value1","nodeType":"YulIdentifier","src":"20085:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20058:6:37"},"nodeType":"YulFunctionCall","src":"20058:34:37"},"nodeType":"YulExpressionStatement","src":"20058:34:37"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19914:9:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19925:6:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19933:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19944:4:37","type":""}],"src":"19824:274:37"},{"body":{"nodeType":"YulBlock","src":"20277:179:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20294:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"20305:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20287:6:37"},"nodeType":"YulFunctionCall","src":"20287:21:37"},"nodeType":"YulExpressionStatement","src":"20287:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20328:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"20339:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20324:3:37"},"nodeType":"YulFunctionCall","src":"20324:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"20344:2:37","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20317:6:37"},"nodeType":"YulFunctionCall","src":"20317:30:37"},"nodeType":"YulExpressionStatement","src":"20317:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20367:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"20378:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20363:3:37"},"nodeType":"YulFunctionCall","src":"20363:18:37"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"20383:31:37","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20356:6:37"},"nodeType":"YulFunctionCall","src":"20356:59:37"},"nodeType":"YulExpressionStatement","src":"20356:59:37"},{"nodeType":"YulAssignment","src":"20424:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20436:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"20447:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20432:3:37"},"nodeType":"YulFunctionCall","src":"20432:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20424:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20254:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20268:4:37","type":""}],"src":"20103:353:37"},{"body":{"nodeType":"YulBlock","src":"20646:232:37","statements":[{"nodeType":"YulAssignment","src":"20656:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20668:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"20679:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20664:3:37"},"nodeType":"YulFunctionCall","src":"20664:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20656:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20699:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"20710:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20692:6:37"},"nodeType":"YulFunctionCall","src":"20692:25:37"},"nodeType":"YulExpressionStatement","src":"20692:25:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20737:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"20748:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20733:3:37"},"nodeType":"YulFunctionCall","src":"20733:18:37"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20757:6:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20773:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"20778:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20769:3:37"},"nodeType":"YulFunctionCall","src":"20769:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"20782:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20765:3:37"},"nodeType":"YulFunctionCall","src":"20765:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20753:3:37"},"nodeType":"YulFunctionCall","src":"20753:32:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20726:6:37"},"nodeType":"YulFunctionCall","src":"20726:60:37"},"nodeType":"YulExpressionStatement","src":"20726:60:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20806:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"20817:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20802:3:37"},"nodeType":"YulFunctionCall","src":"20802:18:37"},{"name":"value2","nodeType":"YulIdentifier","src":"20822:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20795:6:37"},"nodeType":"YulFunctionCall","src":"20795:34:37"},"nodeType":"YulExpressionStatement","src":"20795:34:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20849:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"20860:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20845:3:37"},"nodeType":"YulFunctionCall","src":"20845:18:37"},{"name":"value3","nodeType":"YulIdentifier","src":"20865:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20838:6:37"},"nodeType":"YulFunctionCall","src":"20838:34:37"},"nodeType":"YulExpressionStatement","src":"20838:34:37"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20591:9:37","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20602:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20610:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20618:6:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20626:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20637:4:37","type":""}],"src":"20461:417:37"},{"body":{"nodeType":"YulBlock","src":"21057:175:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21074:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21085:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21067:6:37"},"nodeType":"YulFunctionCall","src":"21067:21:37"},"nodeType":"YulExpressionStatement","src":"21067:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21108:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21119:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21104:3:37"},"nodeType":"YulFunctionCall","src":"21104:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"21124:2:37","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21097:6:37"},"nodeType":"YulFunctionCall","src":"21097:30:37"},"nodeType":"YulExpressionStatement","src":"21097:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21147:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21158:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21143:3:37"},"nodeType":"YulFunctionCall","src":"21143:18:37"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"21163:27:37","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21136:6:37"},"nodeType":"YulFunctionCall","src":"21136:55:37"},"nodeType":"YulExpressionStatement","src":"21136:55:37"},{"nodeType":"YulAssignment","src":"21200:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21212:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21223:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21208:3:37"},"nodeType":"YulFunctionCall","src":"21208:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21200:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21034:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21048:4:37","type":""}],"src":"20883:349:37"},{"body":{"nodeType":"YulBlock","src":"21411:179:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21428:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21439:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21421:6:37"},"nodeType":"YulFunctionCall","src":"21421:21:37"},"nodeType":"YulExpressionStatement","src":"21421:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21462:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21473:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21458:3:37"},"nodeType":"YulFunctionCall","src":"21458:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"21478:2:37","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21451:6:37"},"nodeType":"YulFunctionCall","src":"21451:30:37"},"nodeType":"YulExpressionStatement","src":"21451:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21501:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21512:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21497:3:37"},"nodeType":"YulFunctionCall","src":"21497:18:37"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"21517:31:37","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21490:6:37"},"nodeType":"YulFunctionCall","src":"21490:59:37"},"nodeType":"YulExpressionStatement","src":"21490:59:37"},{"nodeType":"YulAssignment","src":"21558:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21570:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21581:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21566:3:37"},"nodeType":"YulFunctionCall","src":"21566:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21558:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21388:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21402:4:37","type":""}],"src":"21237:353:37"},{"body":{"nodeType":"YulBlock","src":"21836:350:37","statements":[{"nodeType":"YulAssignment","src":"21846:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21858:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21869:3:37","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21854:3:37"},"nodeType":"YulFunctionCall","src":"21854:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21846:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21889:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"21900:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21882:6:37"},"nodeType":"YulFunctionCall","src":"21882:25:37"},"nodeType":"YulExpressionStatement","src":"21882:25:37"},{"nodeType":"YulVariableDeclaration","src":"21916:29:37","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21934:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"21939:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21930:3:37"},"nodeType":"YulFunctionCall","src":"21930:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"21943:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21926:3:37"},"nodeType":"YulFunctionCall","src":"21926:19:37"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21920:2:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21965:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"21976:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21961:3:37"},"nodeType":"YulFunctionCall","src":"21961:18:37"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21985:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"21993:2:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21981:3:37"},"nodeType":"YulFunctionCall","src":"21981:15:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21954:6:37"},"nodeType":"YulFunctionCall","src":"21954:43:37"},"nodeType":"YulExpressionStatement","src":"21954:43:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22017:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22028:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22013:3:37"},"nodeType":"YulFunctionCall","src":"22013:18:37"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22037:6:37"},{"name":"_1","nodeType":"YulIdentifier","src":"22045:2:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22033:3:37"},"nodeType":"YulFunctionCall","src":"22033:15:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22006:6:37"},"nodeType":"YulFunctionCall","src":"22006:43:37"},"nodeType":"YulExpressionStatement","src":"22006:43:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22069:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22080:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22065:3:37"},"nodeType":"YulFunctionCall","src":"22065:18:37"},{"name":"value3","nodeType":"YulIdentifier","src":"22085:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22058:6:37"},"nodeType":"YulFunctionCall","src":"22058:34:37"},"nodeType":"YulExpressionStatement","src":"22058:34:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22112:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22123:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22108:3:37"},"nodeType":"YulFunctionCall","src":"22108:19:37"},{"name":"value4","nodeType":"YulIdentifier","src":"22129:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22101:6:37"},"nodeType":"YulFunctionCall","src":"22101:35:37"},"nodeType":"YulExpressionStatement","src":"22101:35:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22156:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22167:3:37","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22152:3:37"},"nodeType":"YulFunctionCall","src":"22152:19:37"},{"name":"value5","nodeType":"YulIdentifier","src":"22173:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22145:6:37"},"nodeType":"YulFunctionCall","src":"22145:35:37"},"nodeType":"YulExpressionStatement","src":"22145:35:37"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21765:9:37","type":""},{"name":"value5","nodeType":"YulTypedName","src":"21776:6:37","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21784:6:37","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21792:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21800:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21808:6:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21816:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21827:4:37","type":""}],"src":"21595:591:37"},{"body":{"nodeType":"YulBlock","src":"22365:180:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22382:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22393:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22375:6:37"},"nodeType":"YulFunctionCall","src":"22375:21:37"},"nodeType":"YulExpressionStatement","src":"22375:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22416:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22427:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22412:3:37"},"nodeType":"YulFunctionCall","src":"22412:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"22432:2:37","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22405:6:37"},"nodeType":"YulFunctionCall","src":"22405:30:37"},"nodeType":"YulExpressionStatement","src":"22405:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22455:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22466:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22451:3:37"},"nodeType":"YulFunctionCall","src":"22451:18:37"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"22471:32:37","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22444:6:37"},"nodeType":"YulFunctionCall","src":"22444:60:37"},"nodeType":"YulExpressionStatement","src":"22444:60:37"},{"nodeType":"YulAssignment","src":"22513:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22525:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22536:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22521:3:37"},"nodeType":"YulFunctionCall","src":"22521:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22513:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22342:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22356:4:37","type":""}],"src":"22191:354:37"},{"body":{"nodeType":"YulBlock","src":"22724:228:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22741:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22752:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22734:6:37"},"nodeType":"YulFunctionCall","src":"22734:21:37"},"nodeType":"YulExpressionStatement","src":"22734:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22775:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22786:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22771:3:37"},"nodeType":"YulFunctionCall","src":"22771:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"22791:2:37","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22764:6:37"},"nodeType":"YulFunctionCall","src":"22764:30:37"},"nodeType":"YulExpressionStatement","src":"22764:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22814:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22825:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22810:3:37"},"nodeType":"YulFunctionCall","src":"22810:18:37"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"22830:34:37","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22803:6:37"},"nodeType":"YulFunctionCall","src":"22803:62:37"},"nodeType":"YulExpressionStatement","src":"22803:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22885:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22896:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22881:3:37"},"nodeType":"YulFunctionCall","src":"22881:18:37"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"22901:8:37","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22874:6:37"},"nodeType":"YulFunctionCall","src":"22874:36:37"},"nodeType":"YulExpressionStatement","src":"22874:36:37"},{"nodeType":"YulAssignment","src":"22919:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22931:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"22942:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22927:3:37"},"nodeType":"YulFunctionCall","src":"22927:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22919:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22701:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22715:4:37","type":""}],"src":"22550:402:37"},{"body":{"nodeType":"YulBlock","src":"23131:226:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23148:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23159:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23141:6:37"},"nodeType":"YulFunctionCall","src":"23141:21:37"},"nodeType":"YulExpressionStatement","src":"23141:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23182:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23193:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23178:3:37"},"nodeType":"YulFunctionCall","src":"23178:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"23198:2:37","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23171:6:37"},"nodeType":"YulFunctionCall","src":"23171:30:37"},"nodeType":"YulExpressionStatement","src":"23171:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23221:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23232:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23217:3:37"},"nodeType":"YulFunctionCall","src":"23217:18:37"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"23237:34:37","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23210:6:37"},"nodeType":"YulFunctionCall","src":"23210:62:37"},"nodeType":"YulExpressionStatement","src":"23210:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23292:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23303:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23288:3:37"},"nodeType":"YulFunctionCall","src":"23288:18:37"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"23308:6:37","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23281:6:37"},"nodeType":"YulFunctionCall","src":"23281:34:37"},"nodeType":"YulExpressionStatement","src":"23281:34:37"},{"nodeType":"YulAssignment","src":"23324:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23336:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23347:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23332:3:37"},"nodeType":"YulFunctionCall","src":"23332:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23324:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23108:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23122:4:37","type":""}],"src":"22957:400:37"},{"body":{"nodeType":"YulBlock","src":"23536:224:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23553:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23564:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23546:6:37"},"nodeType":"YulFunctionCall","src":"23546:21:37"},"nodeType":"YulExpressionStatement","src":"23546:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23587:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23598:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23583:3:37"},"nodeType":"YulFunctionCall","src":"23583:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"23603:2:37","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23576:6:37"},"nodeType":"YulFunctionCall","src":"23576:30:37"},"nodeType":"YulExpressionStatement","src":"23576:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23626:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23637:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23622:3:37"},"nodeType":"YulFunctionCall","src":"23622:18:37"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"23642:34:37","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23615:6:37"},"nodeType":"YulFunctionCall","src":"23615:62:37"},"nodeType":"YulExpressionStatement","src":"23615:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23697:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23708:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23693:3:37"},"nodeType":"YulFunctionCall","src":"23693:18:37"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"23713:4:37","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23686:6:37"},"nodeType":"YulFunctionCall","src":"23686:32:37"},"nodeType":"YulExpressionStatement","src":"23686:32:37"},{"nodeType":"YulAssignment","src":"23727:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23739:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23750:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23735:3:37"},"nodeType":"YulFunctionCall","src":"23735:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23727:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23513:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23527:4:37","type":""}],"src":"23362:398:37"},{"body":{"nodeType":"YulBlock","src":"23939:179:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23956:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"23967:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23949:6:37"},"nodeType":"YulFunctionCall","src":"23949:21:37"},"nodeType":"YulExpressionStatement","src":"23949:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23990:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24001:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23986:3:37"},"nodeType":"YulFunctionCall","src":"23986:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"24006:2:37","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23979:6:37"},"nodeType":"YulFunctionCall","src":"23979:30:37"},"nodeType":"YulExpressionStatement","src":"23979:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24029:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24040:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24025:3:37"},"nodeType":"YulFunctionCall","src":"24025:18:37"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"24045:31:37","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24018:6:37"},"nodeType":"YulFunctionCall","src":"24018:59:37"},"nodeType":"YulExpressionStatement","src":"24018:59:37"},{"nodeType":"YulAssignment","src":"24086:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24098:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24109:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24094:3:37"},"nodeType":"YulFunctionCall","src":"24094:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24086:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23916:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23930:4:37","type":""}],"src":"23765:353:37"},{"body":{"nodeType":"YulBlock","src":"24297:227:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24314:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24325:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24307:6:37"},"nodeType":"YulFunctionCall","src":"24307:21:37"},"nodeType":"YulExpressionStatement","src":"24307:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24348:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24359:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24344:3:37"},"nodeType":"YulFunctionCall","src":"24344:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"24364:2:37","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24337:6:37"},"nodeType":"YulFunctionCall","src":"24337:30:37"},"nodeType":"YulExpressionStatement","src":"24337:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24387:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24398:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24383:3:37"},"nodeType":"YulFunctionCall","src":"24383:18:37"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"24403:34:37","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24376:6:37"},"nodeType":"YulFunctionCall","src":"24376:62:37"},"nodeType":"YulExpressionStatement","src":"24376:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24458:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24469:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24454:3:37"},"nodeType":"YulFunctionCall","src":"24454:18:37"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"24474:7:37","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24447:6:37"},"nodeType":"YulFunctionCall","src":"24447:35:37"},"nodeType":"YulExpressionStatement","src":"24447:35:37"},{"nodeType":"YulAssignment","src":"24491:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24503:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24514:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24499:3:37"},"nodeType":"YulFunctionCall","src":"24499:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24491:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24274:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24288:4:37","type":""}],"src":"24123:401:37"},{"body":{"nodeType":"YulBlock","src":"24703:225:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24720:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24731:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24713:6:37"},"nodeType":"YulFunctionCall","src":"24713:21:37"},"nodeType":"YulExpressionStatement","src":"24713:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24754:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24765:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24750:3:37"},"nodeType":"YulFunctionCall","src":"24750:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"24770:2:37","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24743:6:37"},"nodeType":"YulFunctionCall","src":"24743:30:37"},"nodeType":"YulExpressionStatement","src":"24743:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24793:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24804:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24789:3:37"},"nodeType":"YulFunctionCall","src":"24789:18:37"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"24809:34:37","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24782:6:37"},"nodeType":"YulFunctionCall","src":"24782:62:37"},"nodeType":"YulExpressionStatement","src":"24782:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24864:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24875:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24860:3:37"},"nodeType":"YulFunctionCall","src":"24860:18:37"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"24880:5:37","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24853:6:37"},"nodeType":"YulFunctionCall","src":"24853:33:37"},"nodeType":"YulExpressionStatement","src":"24853:33:37"},{"nodeType":"YulAssignment","src":"24895:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24907:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"24918:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24903:3:37"},"nodeType":"YulFunctionCall","src":"24903:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24895:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24680:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24694:4:37","type":""}],"src":"24529:399:37"},{"body":{"nodeType":"YulBlock","src":"25107:228:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25124:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25135:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25117:6:37"},"nodeType":"YulFunctionCall","src":"25117:21:37"},"nodeType":"YulExpressionStatement","src":"25117:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25158:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25169:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25154:3:37"},"nodeType":"YulFunctionCall","src":"25154:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"25174:2:37","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25147:6:37"},"nodeType":"YulFunctionCall","src":"25147:30:37"},"nodeType":"YulExpressionStatement","src":"25147:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25197:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25208:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25193:3:37"},"nodeType":"YulFunctionCall","src":"25193:18:37"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"25213:34:37","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25186:6:37"},"nodeType":"YulFunctionCall","src":"25186:62:37"},"nodeType":"YulExpressionStatement","src":"25186:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25268:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25279:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25264:3:37"},"nodeType":"YulFunctionCall","src":"25264:18:37"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"25284:8:37","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25257:6:37"},"nodeType":"YulFunctionCall","src":"25257:36:37"},"nodeType":"YulExpressionStatement","src":"25257:36:37"},{"nodeType":"YulAssignment","src":"25302:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25314:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25325:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25310:3:37"},"nodeType":"YulFunctionCall","src":"25310:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25302:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25084:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25098:4:37","type":""}],"src":"24933:402:37"},{"body":{"nodeType":"YulBlock","src":"25514:228:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25531:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25542:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25524:6:37"},"nodeType":"YulFunctionCall","src":"25524:21:37"},"nodeType":"YulExpressionStatement","src":"25524:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25565:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25576:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25561:3:37"},"nodeType":"YulFunctionCall","src":"25561:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"25581:2:37","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25554:6:37"},"nodeType":"YulFunctionCall","src":"25554:30:37"},"nodeType":"YulExpressionStatement","src":"25554:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25604:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25615:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25600:3:37"},"nodeType":"YulFunctionCall","src":"25600:18:37"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"25620:34:37","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25593:6:37"},"nodeType":"YulFunctionCall","src":"25593:62:37"},"nodeType":"YulExpressionStatement","src":"25593:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25675:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25686:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25671:3:37"},"nodeType":"YulFunctionCall","src":"25671:18:37"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"25691:8:37","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25664:6:37"},"nodeType":"YulFunctionCall","src":"25664:36:37"},"nodeType":"YulExpressionStatement","src":"25664:36:37"},{"nodeType":"YulAssignment","src":"25709:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25721:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25732:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25717:3:37"},"nodeType":"YulFunctionCall","src":"25717:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25709:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25491:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25505:4:37","type":""}],"src":"25340:402:37"},{"body":{"nodeType":"YulBlock","src":"25921:182:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25938:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25949:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25931:6:37"},"nodeType":"YulFunctionCall","src":"25931:21:37"},"nodeType":"YulExpressionStatement","src":"25931:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25972:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"25983:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25968:3:37"},"nodeType":"YulFunctionCall","src":"25968:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"25988:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25961:6:37"},"nodeType":"YulFunctionCall","src":"25961:30:37"},"nodeType":"YulExpressionStatement","src":"25961:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26011:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26022:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26007:3:37"},"nodeType":"YulFunctionCall","src":"26007:18:37"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"26027:34:37","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26000:6:37"},"nodeType":"YulFunctionCall","src":"26000:62:37"},"nodeType":"YulExpressionStatement","src":"26000:62:37"},{"nodeType":"YulAssignment","src":"26071:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26083:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26094:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26079:3:37"},"nodeType":"YulFunctionCall","src":"26079:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26071:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25898:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25912:4:37","type":""}],"src":"25747:356:37"},{"body":{"nodeType":"YulBlock","src":"26282:228:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26299:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26310:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26292:6:37"},"nodeType":"YulFunctionCall","src":"26292:21:37"},"nodeType":"YulExpressionStatement","src":"26292:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26333:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26344:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26329:3:37"},"nodeType":"YulFunctionCall","src":"26329:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"26349:2:37","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26322:6:37"},"nodeType":"YulFunctionCall","src":"26322:30:37"},"nodeType":"YulExpressionStatement","src":"26322:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26372:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26383:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26368:3:37"},"nodeType":"YulFunctionCall","src":"26368:18:37"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039","kind":"string","nodeType":"YulLiteral","src":"26388:34:37","type":"","value":"SafeCast: value doesn't fit in 9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26361:6:37"},"nodeType":"YulFunctionCall","src":"26361:62:37"},"nodeType":"YulExpressionStatement","src":"26361:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26443:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26454:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26439:3:37"},"nodeType":"YulFunctionCall","src":"26439:18:37"},{"hexValue":"362062697473","kind":"string","nodeType":"YulLiteral","src":"26459:8:37","type":"","value":"6 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26432:6:37"},"nodeType":"YulFunctionCall","src":"26432:36:37"},"nodeType":"YulExpressionStatement","src":"26432:36:37"},{"nodeType":"YulAssignment","src":"26477:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26489:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26500:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26485:3:37"},"nodeType":"YulFunctionCall","src":"26485:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26477:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26259:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26273:4:37","type":""}],"src":"26108:402:37"},{"body":{"nodeType":"YulBlock","src":"26689:233:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26706:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26717:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26699:6:37"},"nodeType":"YulFunctionCall","src":"26699:21:37"},"nodeType":"YulExpressionStatement","src":"26699:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26740:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26751:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26736:3:37"},"nodeType":"YulFunctionCall","src":"26736:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"26756:2:37","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26729:6:37"},"nodeType":"YulFunctionCall","src":"26729:30:37"},"nodeType":"YulExpressionStatement","src":"26729:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26779:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26790:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26775:3:37"},"nodeType":"YulFunctionCall","src":"26775:18:37"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"26795:34:37","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26768:6:37"},"nodeType":"YulFunctionCall","src":"26768:62:37"},"nodeType":"YulExpressionStatement","src":"26768:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26850:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26861:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26846:3:37"},"nodeType":"YulFunctionCall","src":"26846:18:37"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"26866:13:37","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26839:6:37"},"nodeType":"YulFunctionCall","src":"26839:41:37"},"nodeType":"YulExpressionStatement","src":"26839:41:37"},{"nodeType":"YulAssignment","src":"26889:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26901:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"26912:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26897:3:37"},"nodeType":"YulFunctionCall","src":"26897:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26889:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26666:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26680:4:37","type":""}],"src":"26515:407:37"},{"body":{"nodeType":"YulBlock","src":"27101:166:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27118:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27129:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27111:6:37"},"nodeType":"YulFunctionCall","src":"27111:21:37"},"nodeType":"YulExpressionStatement","src":"27111:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27152:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27163:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27148:3:37"},"nodeType":"YulFunctionCall","src":"27148:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"27168:2:37","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27141:6:37"},"nodeType":"YulFunctionCall","src":"27141:30:37"},"nodeType":"YulExpressionStatement","src":"27141:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27191:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27202:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27187:3:37"},"nodeType":"YulFunctionCall","src":"27187:18:37"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"27207:18:37","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27180:6:37"},"nodeType":"YulFunctionCall","src":"27180:46:37"},"nodeType":"YulExpressionStatement","src":"27180:46:37"},{"nodeType":"YulAssignment","src":"27235:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27247:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27258:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27243:3:37"},"nodeType":"YulFunctionCall","src":"27243:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27235:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27078:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27092:4:37","type":""}],"src":"26927:340:37"},{"body":{"nodeType":"YulBlock","src":"27485:276:37","statements":[{"nodeType":"YulAssignment","src":"27495:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27507:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27518:3:37","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27503:3:37"},"nodeType":"YulFunctionCall","src":"27503:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27495:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27538:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"27549:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27531:6:37"},"nodeType":"YulFunctionCall","src":"27531:25:37"},"nodeType":"YulExpressionStatement","src":"27531:25:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27576:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27587:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27572:3:37"},"nodeType":"YulFunctionCall","src":"27572:18:37"},{"name":"value1","nodeType":"YulIdentifier","src":"27592:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27565:6:37"},"nodeType":"YulFunctionCall","src":"27565:34:37"},"nodeType":"YulExpressionStatement","src":"27565:34:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27619:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27630:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27615:3:37"},"nodeType":"YulFunctionCall","src":"27615:18:37"},{"name":"value2","nodeType":"YulIdentifier","src":"27635:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27608:6:37"},"nodeType":"YulFunctionCall","src":"27608:34:37"},"nodeType":"YulExpressionStatement","src":"27608:34:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27662:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27673:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27658:3:37"},"nodeType":"YulFunctionCall","src":"27658:18:37"},{"name":"value3","nodeType":"YulIdentifier","src":"27678:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27651:6:37"},"nodeType":"YulFunctionCall","src":"27651:34:37"},"nodeType":"YulExpressionStatement","src":"27651:34:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27705:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27716:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27701:3:37"},"nodeType":"YulFunctionCall","src":"27701:19:37"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"27726:6:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27742:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"27747:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27738:3:37"},"nodeType":"YulFunctionCall","src":"27738:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"27751:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27734:3:37"},"nodeType":"YulFunctionCall","src":"27734:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27722:3:37"},"nodeType":"YulFunctionCall","src":"27722:32:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27694:6:37"},"nodeType":"YulFunctionCall","src":"27694:61:37"},"nodeType":"YulExpressionStatement","src":"27694:61:37"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27422:9:37","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27433:6:37","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27441:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27449:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27457:6:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27465:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27476:4:37","type":""}],"src":"27272:489:37"},{"body":{"nodeType":"YulBlock","src":"27895:119:37","statements":[{"nodeType":"YulAssignment","src":"27905:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27917:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27928:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27913:3:37"},"nodeType":"YulFunctionCall","src":"27913:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27905:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27947:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"27958:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27940:6:37"},"nodeType":"YulFunctionCall","src":"27940:25:37"},"nodeType":"YulExpressionStatement","src":"27940:25:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27985:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"27996:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27981:3:37"},"nodeType":"YulFunctionCall","src":"27981:18:37"},{"name":"value1","nodeType":"YulIdentifier","src":"28001:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27974:6:37"},"nodeType":"YulFunctionCall","src":"27974:34:37"},"nodeType":"YulExpressionStatement","src":"27974:34:37"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27856:9:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27867:6:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27875:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27886:4:37","type":""}],"src":"27766:248:37"},{"body":{"nodeType":"YulBlock","src":"28193:238:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28210:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"28221:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28203:6:37"},"nodeType":"YulFunctionCall","src":"28203:21:37"},"nodeType":"YulExpressionStatement","src":"28203:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28244:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"28255:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28240:3:37"},"nodeType":"YulFunctionCall","src":"28240:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"28260:2:37","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28233:6:37"},"nodeType":"YulFunctionCall","src":"28233:30:37"},"nodeType":"YulExpressionStatement","src":"28233:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28283:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"28294:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28279:3:37"},"nodeType":"YulFunctionCall","src":"28279:18:37"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"28299:34:37","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28272:6:37"},"nodeType":"YulFunctionCall","src":"28272:62:37"},"nodeType":"YulExpressionStatement","src":"28272:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28354:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"28365:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28350:3:37"},"nodeType":"YulFunctionCall","src":"28350:18:37"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"28370:18:37","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28343:6:37"},"nodeType":"YulFunctionCall","src":"28343:46:37"},"nodeType":"YulExpressionStatement","src":"28343:46:37"},{"nodeType":"YulAssignment","src":"28398:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28410:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"28421:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28406:3:37"},"nodeType":"YulFunctionCall","src":"28406:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28398:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28170:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28184:4:37","type":""}],"src":"28019:412:37"},{"body":{"nodeType":"YulBlock","src":"28684:144:37","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28701:3:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28710:3:37","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"28715:4:37","type":"","value":"6401"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28706:3:37"},"nodeType":"YulFunctionCall","src":"28706:14:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28694:6:37"},"nodeType":"YulFunctionCall","src":"28694:27:37"},"nodeType":"YulExpressionStatement","src":"28694:27:37"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28741:3:37"},{"kind":"number","nodeType":"YulLiteral","src":"28746:1:37","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28737:3:37"},"nodeType":"YulFunctionCall","src":"28737:11:37"},{"name":"value0","nodeType":"YulIdentifier","src":"28750:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28730:6:37"},"nodeType":"YulFunctionCall","src":"28730:27:37"},"nodeType":"YulExpressionStatement","src":"28730:27:37"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28777:3:37"},{"kind":"number","nodeType":"YulLiteral","src":"28782:2:37","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28773:3:37"},"nodeType":"YulFunctionCall","src":"28773:12:37"},{"name":"value1","nodeType":"YulIdentifier","src":"28787:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28766:6:37"},"nodeType":"YulFunctionCall","src":"28766:28:37"},"nodeType":"YulExpressionStatement","src":"28766:28:37"},{"nodeType":"YulAssignment","src":"28803:19:37","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28814:3:37"},{"kind":"number","nodeType":"YulLiteral","src":"28819:2:37","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28810:3:37"},"nodeType":"YulFunctionCall","src":"28810:12:37"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28803:3:37"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28652:3:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28657:6:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28665:6:37","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28676:3:37","type":""}],"src":"28436:392:37"},{"body":{"nodeType":"YulBlock","src":"29014:217:37","statements":[{"nodeType":"YulAssignment","src":"29024:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29036:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29047:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29032:3:37"},"nodeType":"YulFunctionCall","src":"29032:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29024:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29067:9:37"},{"name":"value0","nodeType":"YulIdentifier","src":"29078:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29060:6:37"},"nodeType":"YulFunctionCall","src":"29060:25:37"},"nodeType":"YulExpressionStatement","src":"29060:25:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29105:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29116:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29101:3:37"},"nodeType":"YulFunctionCall","src":"29101:18:37"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29125:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"29133:4:37","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29121:3:37"},"nodeType":"YulFunctionCall","src":"29121:17:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29094:6:37"},"nodeType":"YulFunctionCall","src":"29094:45:37"},"nodeType":"YulExpressionStatement","src":"29094:45:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29159:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29170:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29155:3:37"},"nodeType":"YulFunctionCall","src":"29155:18:37"},{"name":"value2","nodeType":"YulIdentifier","src":"29175:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29148:6:37"},"nodeType":"YulFunctionCall","src":"29148:34:37"},"nodeType":"YulExpressionStatement","src":"29148:34:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29202:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29213:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29198:3:37"},"nodeType":"YulFunctionCall","src":"29198:18:37"},{"name":"value3","nodeType":"YulIdentifier","src":"29218:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29191:6:37"},"nodeType":"YulFunctionCall","src":"29191:34:37"},"nodeType":"YulExpressionStatement","src":"29191:34:37"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28959:9:37","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28970:6:37","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28978:6:37","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28986:6:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28994:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29005:4:37","type":""}],"src":"28833:398:37"},{"body":{"nodeType":"YulBlock","src":"29268:95:37","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29285:1:37","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29292:3:37","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"29297:10:37","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29288:3:37"},"nodeType":"YulFunctionCall","src":"29288:20:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29278:6:37"},"nodeType":"YulFunctionCall","src":"29278:31:37"},"nodeType":"YulExpressionStatement","src":"29278:31:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29325:1:37","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29328:4:37","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29318:6:37"},"nodeType":"YulFunctionCall","src":"29318:15:37"},"nodeType":"YulExpressionStatement","src":"29318:15:37"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29349:1:37","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29352:4:37","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29342:6:37"},"nodeType":"YulFunctionCall","src":"29342:15:37"},"nodeType":"YulExpressionStatement","src":"29342:15:37"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"29236:127:37"},{"body":{"nodeType":"YulBlock","src":"29542:174:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29559:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29570:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29552:6:37"},"nodeType":"YulFunctionCall","src":"29552:21:37"},"nodeType":"YulExpressionStatement","src":"29552:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29593:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29604:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29589:3:37"},"nodeType":"YulFunctionCall","src":"29589:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"29609:2:37","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29582:6:37"},"nodeType":"YulFunctionCall","src":"29582:30:37"},"nodeType":"YulExpressionStatement","src":"29582:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29632:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29643:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29628:3:37"},"nodeType":"YulFunctionCall","src":"29628:18:37"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"29648:26:37","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29621:6:37"},"nodeType":"YulFunctionCall","src":"29621:54:37"},"nodeType":"YulExpressionStatement","src":"29621:54:37"},{"nodeType":"YulAssignment","src":"29684:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29696:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29707:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29692:3:37"},"nodeType":"YulFunctionCall","src":"29692:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29684:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29519:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29533:4:37","type":""}],"src":"29368:348:37"},{"body":{"nodeType":"YulBlock","src":"29895:181:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29912:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29923:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29905:6:37"},"nodeType":"YulFunctionCall","src":"29905:21:37"},"nodeType":"YulExpressionStatement","src":"29905:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29946:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29957:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29942:3:37"},"nodeType":"YulFunctionCall","src":"29942:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"29962:2:37","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29935:6:37"},"nodeType":"YulFunctionCall","src":"29935:30:37"},"nodeType":"YulExpressionStatement","src":"29935:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29985:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"29996:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29981:3:37"},"nodeType":"YulFunctionCall","src":"29981:18:37"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"30001:33:37","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29974:6:37"},"nodeType":"YulFunctionCall","src":"29974:61:37"},"nodeType":"YulExpressionStatement","src":"29974:61:37"},{"nodeType":"YulAssignment","src":"30044:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30056:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30067:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30052:3:37"},"nodeType":"YulFunctionCall","src":"30052:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30044:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29872:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29886:4:37","type":""}],"src":"29721:355:37"},{"body":{"nodeType":"YulBlock","src":"30255:224:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30272:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30283:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30265:6:37"},"nodeType":"YulFunctionCall","src":"30265:21:37"},"nodeType":"YulExpressionStatement","src":"30265:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30306:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30317:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30302:3:37"},"nodeType":"YulFunctionCall","src":"30302:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"30322:2:37","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30295:6:37"},"nodeType":"YulFunctionCall","src":"30295:30:37"},"nodeType":"YulExpressionStatement","src":"30295:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30345:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30356:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30341:3:37"},"nodeType":"YulFunctionCall","src":"30341:18:37"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"30361:34:37","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30334:6:37"},"nodeType":"YulFunctionCall","src":"30334:62:37"},"nodeType":"YulExpressionStatement","src":"30334:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30416:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30427:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30412:3:37"},"nodeType":"YulFunctionCall","src":"30412:18:37"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"30432:4:37","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30405:6:37"},"nodeType":"YulFunctionCall","src":"30405:32:37"},"nodeType":"YulExpressionStatement","src":"30405:32:37"},{"nodeType":"YulAssignment","src":"30446:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30458:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30469:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30454:3:37"},"nodeType":"YulFunctionCall","src":"30454:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30446:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30232:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30246:4:37","type":""}],"src":"30081:398:37"},{"body":{"nodeType":"YulBlock","src":"30658:232:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30675:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30686:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30668:6:37"},"nodeType":"YulFunctionCall","src":"30668:21:37"},"nodeType":"YulExpressionStatement","src":"30668:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30709:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30720:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30705:3:37"},"nodeType":"YulFunctionCall","src":"30705:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"30725:2:37","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30698:6:37"},"nodeType":"YulFunctionCall","src":"30698:30:37"},"nodeType":"YulExpressionStatement","src":"30698:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30748:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30759:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30744:3:37"},"nodeType":"YulFunctionCall","src":"30744:18:37"},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768","kind":"string","nodeType":"YulLiteral","src":"30764:34:37","type":"","value":"ERC20Pausable: token transfer wh"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30737:6:37"},"nodeType":"YulFunctionCall","src":"30737:62:37"},"nodeType":"YulExpressionStatement","src":"30737:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30819:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30830:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30815:3:37"},"nodeType":"YulFunctionCall","src":"30815:18:37"},{"hexValue":"696c6520706175736564","kind":"string","nodeType":"YulLiteral","src":"30835:12:37","type":"","value":"ile paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30808:6:37"},"nodeType":"YulFunctionCall","src":"30808:40:37"},"nodeType":"YulExpressionStatement","src":"30808:40:37"},{"nodeType":"YulAssignment","src":"30857:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30869:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"30880:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30865:3:37"},"nodeType":"YulFunctionCall","src":"30865:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30857:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30635:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30649:4:37","type":""}],"src":"30484:406:37"},{"body":{"nodeType":"YulBlock","src":"31069:223:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31086:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31097:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31079:6:37"},"nodeType":"YulFunctionCall","src":"31079:21:37"},"nodeType":"YulExpressionStatement","src":"31079:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31120:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31131:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31116:3:37"},"nodeType":"YulFunctionCall","src":"31116:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"31136:2:37","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31109:6:37"},"nodeType":"YulFunctionCall","src":"31109:30:37"},"nodeType":"YulExpressionStatement","src":"31109:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31159:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31170:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31155:3:37"},"nodeType":"YulFunctionCall","src":"31155:18:37"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"31175:34:37","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31148:6:37"},"nodeType":"YulFunctionCall","src":"31148:62:37"},"nodeType":"YulExpressionStatement","src":"31148:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31230:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31241:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31226:3:37"},"nodeType":"YulFunctionCall","src":"31226:18:37"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"31246:3:37","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31219:6:37"},"nodeType":"YulFunctionCall","src":"31219:31:37"},"nodeType":"YulExpressionStatement","src":"31219:31:37"},{"nodeType":"YulAssignment","src":"31259:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31271:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31282:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31267:3:37"},"nodeType":"YulFunctionCall","src":"31267:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31259:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31046:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31060:4:37","type":""}],"src":"30895:397:37"},{"body":{"nodeType":"YulBlock","src":"31471:224:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31488:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31499:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31481:6:37"},"nodeType":"YulFunctionCall","src":"31481:21:37"},"nodeType":"YulExpressionStatement","src":"31481:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31522:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31533:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31518:3:37"},"nodeType":"YulFunctionCall","src":"31518:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"31538:2:37","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31511:6:37"},"nodeType":"YulFunctionCall","src":"31511:30:37"},"nodeType":"YulExpressionStatement","src":"31511:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31561:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31572:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31557:3:37"},"nodeType":"YulFunctionCall","src":"31557:18:37"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"31577:34:37","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31550:6:37"},"nodeType":"YulFunctionCall","src":"31550:62:37"},"nodeType":"YulExpressionStatement","src":"31550:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31632:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31643:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31628:3:37"},"nodeType":"YulFunctionCall","src":"31628:18:37"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"31648:4:37","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31621:6:37"},"nodeType":"YulFunctionCall","src":"31621:32:37"},"nodeType":"YulExpressionStatement","src":"31621:32:37"},{"nodeType":"YulAssignment","src":"31662:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31674:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31685:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31670:3:37"},"nodeType":"YulFunctionCall","src":"31670:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31662:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31448:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31462:4:37","type":""}],"src":"31297:398:37"},{"body":{"nodeType":"YulBlock","src":"31874:181:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31891:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31902:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31884:6:37"},"nodeType":"YulFunctionCall","src":"31884:21:37"},"nodeType":"YulExpressionStatement","src":"31884:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31925:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31936:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31921:3:37"},"nodeType":"YulFunctionCall","src":"31921:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"31941:2:37","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31914:6:37"},"nodeType":"YulFunctionCall","src":"31914:30:37"},"nodeType":"YulExpressionStatement","src":"31914:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31964:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"31975:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31960:3:37"},"nodeType":"YulFunctionCall","src":"31960:18:37"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"31980:33:37","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31953:6:37"},"nodeType":"YulFunctionCall","src":"31953:61:37"},"nodeType":"YulExpressionStatement","src":"31953:61:37"},{"nodeType":"YulAssignment","src":"32023:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32035:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"32046:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32031:3:37"},"nodeType":"YulFunctionCall","src":"32031:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32023:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31851:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31865:4:37","type":""}],"src":"31700:355:37"},{"body":{"nodeType":"YulBlock","src":"32234:229:37","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32251:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"32262:2:37","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32244:6:37"},"nodeType":"YulFunctionCall","src":"32244:21:37"},"nodeType":"YulExpressionStatement","src":"32244:21:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32285:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"32296:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32281:3:37"},"nodeType":"YulFunctionCall","src":"32281:18:37"},{"kind":"number","nodeType":"YulLiteral","src":"32301:2:37","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32274:6:37"},"nodeType":"YulFunctionCall","src":"32274:30:37"},"nodeType":"YulExpressionStatement","src":"32274:30:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32324:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"32335:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32320:3:37"},"nodeType":"YulFunctionCall","src":"32320:18:37"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"32340:34:37","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32313:6:37"},"nodeType":"YulFunctionCall","src":"32313:62:37"},"nodeType":"YulExpressionStatement","src":"32313:62:37"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32395:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"32406:2:37","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32391:3:37"},"nodeType":"YulFunctionCall","src":"32391:18:37"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"32411:9:37","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32384:6:37"},"nodeType":"YulFunctionCall","src":"32384:37:37"},"nodeType":"YulExpressionStatement","src":"32384:37:37"},{"nodeType":"YulAssignment","src":"32430:27:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32442:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"32453:3:37","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32438:3:37"},"nodeType":"YulFunctionCall","src":"32438:19:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32430:4:37"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32211:9:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32225:4:37","type":""}],"src":"32060:403:37"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_4196() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xa0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory_4198() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0260)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_string(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let array_1 := allocate_memory(array_allocation_size_string(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_struct$_Checkpoint_$2006_memory_ptr__to_t_struct$_Checkpoint_$2006_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), 0xffffffff))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(224, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_uint24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint24_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint24_fromMemory(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20Votes: block not yet mined\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let array_1 := allocate_memory(array_allocation_size_string(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory(add(offset, 0x20), add(array_1, 0x20), _1)\n        array := array_1\n    }\n    function abi_decode_struct_ProjectSocial_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n        value := allocate_memory_4196()\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        mstore(value, abi_decode_string_fromMemory(add(headStart, offset), end))\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string_fromMemory(add(headStart, offset_1), end))\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_string_fromMemory(add(headStart, offset_2), end))\n        let offset_3 := mload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_string_fromMemory(add(headStart, offset_3), end))\n        let offset_4 := mload(add(headStart, 128))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_string_fromMemory(add(headStart, offset_4), end))\n    }\n    function array_allocation_size_array_string_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_string_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_string_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, abi_decode_string_fromMemory(add(add(offset, innerOffset), _2), end))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_address_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_string_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_struct$_Project_$8077_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x0260) { revert(0, 0) }\n        let value := allocate_memory_4198()\n        mstore(value, abi_decode_uint24_fromMemory(_2))\n        mstore(add(value, 32), abi_decode_uint24_fromMemory(add(_2, 32)))\n        mstore(add(value, 64), mload(add(_2, 64)))\n        mstore(add(value, 96), abi_decode_address_fromMemory(add(_2, 96)))\n        let offset_1 := mload(add(_2, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_string_fromMemory(add(_2, offset_1), dataEnd))\n        let offset_2 := mload(add(_2, 160))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 160), abi_decode_string_fromMemory(add(_2, offset_2), dataEnd))\n        mstore(add(value, 192), abi_decode_address_fromMemory(add(_2, 192)))\n        let offset_3 := mload(add(_2, 224))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 224), abi_decode_string_fromMemory(add(_2, offset_3), dataEnd))\n        let _3 := 256\n        let offset_4 := mload(add(_2, _3))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, _3), abi_decode_string_fromMemory(add(_2, offset_4), dataEnd))\n        let _4 := 288\n        let offset_5 := mload(add(_2, _4))\n        if gt(offset_5, _1) { revert(0, 0) }\n        mstore(add(value, _4), abi_decode_string_fromMemory(add(_2, offset_5), dataEnd))\n        let _5 := 320\n        let offset_6 := mload(add(_2, _5))\n        if gt(offset_6, _1) { revert(0, 0) }\n        mstore(add(value, _5), abi_decode_struct_ProjectSocial_fromMemory(add(_2, offset_6), dataEnd))\n        let _6 := 352\n        let offset_7 := mload(add(_2, _6))\n        if gt(offset_7, _1) { revert(0, 0) }\n        mstore(add(value, _6), abi_decode_array_string_dyn_fromMemory(add(_2, offset_7), dataEnd))\n        let _7 := 384\n        let offset_8 := mload(add(_2, _7))\n        if gt(offset_8, _1) { revert(0, 0) }\n        mstore(add(value, _7), abi_decode_array_string_dyn_fromMemory(add(_2, offset_8), dataEnd))\n        let _8 := 416\n        let offset_9 := mload(add(_2, _8))\n        if gt(offset_9, _1) { revert(0, 0) }\n        mstore(add(value, _8), abi_decode_string_fromMemory(add(_2, offset_9), dataEnd))\n        let _9 := 448\n        mstore(add(value, _9), mload(add(_2, _9)))\n        let _10 := 480\n        mstore(add(value, _10), abi_decode_address_fromMemory(add(_2, _10)))\n        let _11 := 512\n        let offset_10 := mload(add(_2, _11))\n        if gt(offset_10, _1) { revert(0, 0) }\n        mstore(add(value, _11), abi_decode_string_fromMemory(add(_2, offset_10), dataEnd))\n        let _12 := 544\n        let offset_11 := mload(add(_2, _12))\n        if gt(offset_11, _1) { revert(0, 0) }\n        mstore(add(value, _12), abi_decode_array_address_dyn_fromMemory(add(_2, offset_11), dataEnd))\n        let _13 := 576\n        mstore(add(value, _13), mload(add(_2, _13)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Votes: signature expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Votes: invalid nonce\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Permit: expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ERC20Permit: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 3\")\n        mstore(add(headStart, 96), \"2 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 9\")\n        mstore(add(headStart, 96), \"6 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC20Votes: total supply risks o\")\n        mstore(add(headStart, 96), \"verflowing votes\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 2\")\n        mstore(add(headStart, 96), \"24 bits\")\n        tail := add(headStart, 128)\n    }\n}","id":37,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061023d5760003560e01c806379cc67901161013b578063a9059cbb116100b8578063d505accf1161007c578063d505accf1461053b578063dd62ed3e1461054e578063f1127ed814610561578063f2fde38b1461059e578063f4a290f7146105b157600080fd5b8063a9059cbb146104e5578063aad3ec96146104f8578063b4b5ea571461050b578063c3678f351461051e578063c3cda5201461052857600080fd5b80638f283970116100ff5780638f28397014610478578063945277291461048b57806395d89b41146104b75780639ab24eb0146104bf578063a457c2d7146104d257600080fd5b806379cc67901461041b5780637ecebe001461042e5780638da5cb5b146104415780638e539e8c146104525780638f15b4141461046557600080fd5b806339509351116101c95780635c975abb1161018d5780635c975abb1461038c5780636fcfff451461039757806370a08231146103bf578063715018a6146103e8578063782d6fe1146103f057600080fd5b806339509351146103135780633a46b1a81461032657806342966c6814610339578063587cde1e1461034c5780635c19a95c1461037957600080fd5b806318160ddd1161021057806318160ddd146102c057806323b872dd146102d6578063313ce567146102e957806332974838146102f85780633644e5151461030b57600080fd5b806301bc45c91461024257806306fdde0314610273578063095ea7b31461028857806316a5041f146102ab575b600080fd5b6101f854610256906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61027b6105c5565b60405161026a919061274b565b61029b610296366004612793565b610657565b604051901515815260200161026a565b6102be6102b93660046127bf565b610671565b005b6102c861070e565b60405190815260200161026a565b61029b6102e43660046127dc565b61071e565b6040516012815260200161026a565b6102c8610306366004612793565b610742565b6102c8610838565b61029b610321366004612793565b610842565b6102c8610334366004612793565b610864565b6102be61034736600461281d565b6108df565b61025661035a3660046127bf565b6001600160a01b03908116600090815261019460205260409020541690565b6102be6103873660046127bf565b6108e9565b60655460ff1661029b565b6103aa6103a53660046127bf565b6108f3565b60405163ffffffff909116815260200161026a565b6102c86103cd3660046127bf565b6001600160a01b031660009081526033602052604090205490565b6102be610916565b6104036103fe366004612793565b61092a565b6040516001600160601b03909116815260200161026a565b6102be610429366004612793565b61093e565b6102c861043c3660046127bf565b610957565b60fb546001600160a01b0316610256565b6102c861046036600461281d565b610976565b6102be610473366004612948565b6109d3565b6102be6104863660046127bf565b610bfd565b6102c86104993660046129d1565b6101fa60209081526000928352604080842090915290825290205481565b61027b610c92565b6102c86104cd3660046127bf565b610ca1565b61029b6104e0366004612793565b610d2a565b61029b6104f3366004612793565b610da5565b6102be610506366004612793565b610db3565b6104036105193660046127bf565b610f79565b6102c86101fb5481565b6102be610536366004612a20565b610f87565b6102be610549366004612a7a565b6110bd565b6102c861055c3660046129d1565b611221565b61057461056f366004612ae8565b61124c565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161026a565b6102be6105ac3660046127bf565b6112d1565b6101f954610256906001600160a01b031681565b6060603680546105d490612b1f565b80601f016020809104026020016040519081016040528092919081815260200182805461060090612b1f565b801561064d5780601f106106225761010080835404028352916020019161064d565b820191906000526020600020905b81548152906001019060200180831161063057829003601f168201915b5050505050905090565b600033610665818585611347565b60019150505b92915050565b6101f8546001600160a01b03163314801561069457506001600160a01b03811615155b6040518060400160405280600381526020016231303160e81b815250906106d75760405162461bcd60e51b81526004016106ce919061274b565b60405180910390fd5b506101f9546001600160a01b0382811691161461070b576101f880546001600160a01b0319166001600160a01b0383161790555b50565b600061071960355490565b905090565b60003361072c85828561146b565b6107378585856114e5565b506001949350505050565b600080839050806001600160a01b031663631847266040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107a2575060408051601f3d908101601f1916820190925261079f91810190612b67565b60015b6107e7576040516001600160a01b03851681527fa2d47e5e61369d0bde38a716e62f1ea16d8124813f8ea55b832c218216e91dfc9060200160405180910390a161082e565b3360009081526101fa602090815260408083206001600160a01b038916845290915290205461081b8562ffffff8416612b98565b6108259190612bb7565b9250505061066b565b5060009392505050565b60006107196116a1565b6000336106658185856108558383611221565b61085f9190612bce565b611347565b60004382106108b55760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016106ce565b6001600160a01b0383166000908152610195602052604090206108d8908361171e565b9392505050565b61070b3382611815565b61070b338261181f565b6001600160a01b0381166000908152610195602052604081205461066b9061189a565b61091e611903565b610928600061195d565b565b60006108d86109398484610864565b6119af565b61094982338361146b565b6109538282611815565b5050565b6001600160a01b0381166000908152610161602052604081205461066b565b60004382106109c75760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016106ce565b61066b6101968361171e565b600054610100900460ff16158080156109f35750600054600160ff909116105b80610a0d5750303b158015610a0d575060005460ff166001145b610a705760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106ce565b6000805460ff191660011790558015610a93576000805461ff0019166101001790555b6001600160a01b03831615801590610ab357506001600160a01b03821615155b6040518060400160405280600381526020016203130360ec1b81525090610aed5760405162461bcd60e51b81526004016106ce919061274b565b506101f880546001600160a01b038086166001600160a01b0319928316179092556101f98054928516929091169190911790556000610b2a601290565b610b3590600a612cca565b610b43906305f5e100612b98565b90506064610b52826046612b98565b610b5c9190612cef565b6101fb5560006064610b6f836014612b98565b610b799190612cef565b6101f854909150610b93906001600160a01b031682611a17565b610b9b611a21565b610ba58787611a50565b610bad611a81565b50508015610bf6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050505050565b6101f8546001600160a01b031633148015610c2057506001600160a01b03811615155b6040518060400160405280600381526020016231303160e81b81525090610c5a5760405162461bcd60e51b81526004016106ce919061274b565b506101f8546001600160a01b0382811691161461070b576101f880546001600160a01b0383166001600160a01b031990911617905550565b6060603780546105d490612b1f565b6001600160a01b038116600090815261019560205260408120548015610d17576001600160a01b038316600090815261019560205260409020610ce5600183612bb7565b81548110610cf557610cf5612d11565b60009182526020909120015464010000000090046001600160e01b0316610d1a565b60005b6001600160e01b03169392505050565b60003381610d388286611221565b905083811015610d985760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106ce565b6107378286868403611347565b6000336106658185856114e5565b610dbb611ab0565b60006101fb54116040518060400160405280600381526020016232303360e81b81525090610dfc5760405162461bcd60e51b81526004016106ce919061274b565b506040516346ec8d2b60e11b81526004810182905282906000906001600160a01b03831690638dd91a5690602401600060405180830381865afa158015610e47573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e6f9190810190612f70565b60c081015160408051808201909152600381526203130360ec1b60208201529192506001600160a01b03163314610eb95760405162461bcd60e51b81526004016106ce919061274b565b506000610ecf826101e001518360400151610742565b90506101fb54811115610ee257506101fb545b3360009081526101fa602090815260408083206101e08601516001600160a01b0316845290915281208054839290610f1b908490612bce565b90915550610f2b90503382611a17565b806101fb6000828254610f3e9190612bb7565b909155505060408051338152602081018390527f5d425a3a6a3d5a60fbf147dc6659ce3dfeb701fc44fe90058c32783b8807c5749101610bed565b600061066b61093983610ca1565b83421115610fd75760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016106ce565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090611051906110499060a00160405160208183030381529060405280519060200120611af6565b858585611b44565b905061105c81611b6c565b86146110aa5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016106ce565b6110b4818861181f565b50505050505050565b8342111561110d5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106ce565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861113c8c611b6c565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061119782611af6565b905060006111a782878787611b44565b9050896001600160a01b0316816001600160a01b03161461120a5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106ce565b6112158a8a8a611347565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b038316600090815261019560205260409020805463ffffffff841690811061129157611291612d11565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6112d9611903565b6001600160a01b03811661133e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ce565b61070b8161195d565b6001600160a01b0383166113a95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106ce565b6001600160a01b03821661140a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106ce565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006114778484611221565b905060001981146114df57818110156114d25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106ce565b6114df8484848403611347565b50505050565b6001600160a01b0383166115495760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106ce565b6001600160a01b0382166115ab5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106ce565b6115b6838383611b95565b6001600160a01b0383166000908152603360205260409020548181101561162e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106ce565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061168e9086815260200190565b60405180910390a36114df848484611ba5565b60006107197f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6116d161012d5490565b61012e546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b81546000908181600581111561177857600061173984611bb0565b6117439085612bb7565b600088815260209020909150869082015463ffffffff16111561176857809150611776565b611773816001612bce565b92505b505b808210156117c557600061178c8383611c95565b600088815260209020909150869082015463ffffffff1611156117b1578091506117bf565b6117bc816001612bce565b92505b50611778565b80156117ff576117e8866117da600184612bb7565b600091825260209091200190565b5464010000000090046001600160e01b0316611802565b60005b6001600160e01b03169695505050505050565b6109538282611cb0565b6001600160a01b0382811660008181526101946020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46114df828483611cc9565b600063ffffffff8211156118ff5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016106ce565b5090565b60fb546001600160a01b031633146109285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ce565b60fb80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160601b038211156118ff5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084016106ce565b6109538282611e08565b600054610100900460ff16611a485760405162461bcd60e51b81526004016106ce906131d1565b610928611e98565b600054610100900460ff16611a775760405162461bcd60e51b81526004016106ce906131d1565b6109538282611ecb565b600054610100900460ff16611aa85760405162461bcd60e51b81526004016106ce906131d1565b610928611f19565b60655460ff16156109285760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106ce565b600061066b611b036116a1565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611b5587878787611f49565b91509150611b628161200d565b5095945050505050565b6001600160a01b0381166000908152610161602052604090208054600181018255905b50919050565b611ba083838361215b565b505050565b611ba08383836121c1565b600081611bbf57506000919050565b60006001611bcc846121f4565b901c6001901b90506001818481611be557611be5612cd9565b048201901c90506001818481611bfd57611bfd612cd9565b048201901c90506001818481611c1557611c15612cd9565b048201901c90506001818481611c2d57611c2d612cd9565b048201901c90506001818481611c4557611c45612cd9565b048201901c90506001818481611c5d57611c5d612cd9565b048201901c90506001818481611c7557611c75612cd9565b048201901c90506108d881828581611c8f57611c8f612cd9565b04612288565b6000611ca46002848418612cef565b6108d890848416612bce565b611cba828261229e565b6114df6101966123e5836123f1565b816001600160a01b0316836001600160a01b031614158015611ceb5750600081115b15611ba0576001600160a01b03831615611d7a576001600160a01b0383166000908152610195602052604081208190611d27906123e5856123f1565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611d6f929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611ba0576001600160a01b0382166000908152610195602052604081208190611db190612545856123f1565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611df9929190918252602082015260400190565b60405180910390a25050505050565b611e128282612551565b6001600160601b03611e2261070e565b1115611e895760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016106ce565b6114df610196612545836123f1565b600054610100900460ff16611ebf5760405162461bcd60e51b81526004016106ce906131d1565b6065805460ff19169055565b600054610100900460ff16611ef25760405162461bcd60e51b81526004016106ce906131d1565b8151611f0590603690602085019061268f565b508051611ba090603790602084019061268f565b600054610100900460ff16611f405760405162461bcd60e51b81526004016106ce906131d1565b6109283361195d565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611f805750600090506003612004565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611fd4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ffd57600060019250925050612004565b9150600090505b94509492505050565b60008160048111156120215761202161321c565b141561202a5750565b600181600481111561203e5761203e61321c565b141561208c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106ce565b60028160048111156120a0576120a061321c565b14156120ee5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106ce565b60038160048111156121025761210261321c565b141561070b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106ce565b60655460ff1615611ba05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016106ce565b6001600160a01b0383811660009081526101946020526040808220548584168352912054611ba092918216911683611cc9565b600080608083901c1561220957608092831c92015b604083901c1561221b57604092831c92015b602083901c1561222d57602092831c92015b601083901c1561223f57601092831c92015b600883901c1561225157600892831c92015b600483901c1561226357600492831c92015b600283901c1561227557600292831c92015b600183901c1561066b5760010192915050565b600081831061229757816108d8565b5090919050565b6001600160a01b0382166122fe5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106ce565b61230a82600083611b95565b6001600160a01b0382166000908152603360205260409020548181101561237e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106ce565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611ba083600084611ba5565b60006108d88284612bb7565b8254600090819081811561243e5761240e876117da600185612bb7565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152612453565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061247384868863ffffffff16565b925060008211801561248b5750805163ffffffff1643145b156124d05761249983612626565b6124a8886117da600186612bb7565b80546001600160e01b03929092166401000000000263ffffffff90921691909117905561253b565b8660405180604001604052806124e54361189a565b63ffffffff1681526020016124f986612626565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b60006108d88284612bce565b6001600160a01b0382166125a75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106ce565b6125b360008383611b95565b80603560008282546125c59190612bce565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361095360008383611ba5565b60006001600160e01b038211156118ff5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016106ce565b82805461269b90612b1f565b90600052602060002090601f0160209004810192826126bd5760008555612703565b82601f106126d657805160ff1916838001178555612703565b82800160010185558215612703579182015b828111156127035782518255916020019190600101906126e8565b506118ff9291505b808211156118ff576000815560010161270b565b60005b8381101561273a578181015183820152602001612722565b838111156114df5750506000910152565b602081526000825180602084015261276a81604085016020870161271f565b601f01601f19169190910160400192915050565b6001600160a01b038116811461070b57600080fd5b600080604083850312156127a657600080fd5b82356127b18161277e565b946020939093013593505050565b6000602082840312156127d157600080fd5b81356108d88161277e565b6000806000606084860312156127f157600080fd5b83356127fc8161277e565b9250602084013561280c8161277e565b929592945050506040919091013590565b60006020828403121561282f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561286f5761286f612836565b60405290565b604051610260810167ffffffffffffffff8111828210171561286f5761286f612836565b604051601f8201601f1916810167ffffffffffffffff811182821017156128c2576128c2612836565b604052919050565b600067ffffffffffffffff8211156128e4576128e4612836565b50601f01601f191660200190565b600082601f83011261290357600080fd5b8135612916612911826128ca565b612899565b81815284602083860101111561292b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561295e57600080fd5b843567ffffffffffffffff8082111561297657600080fd5b612982888389016128f2565b9550602087013591508082111561299857600080fd5b506129a5878288016128f2565b93505060408501356129b68161277e565b915060608501356129c68161277e565b939692955090935050565b600080604083850312156129e457600080fd5b82356129ef8161277e565b915060208301356129ff8161277e565b809150509250929050565b803560ff81168114612a1b57600080fd5b919050565b60008060008060008060c08789031215612a3957600080fd5b8635612a448161277e565b95506020870135945060408701359350612a6060608801612a0a565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215612a9557600080fd5b8735612aa08161277e565b96506020880135612ab08161277e565b95506040880135945060608801359350612acc60808901612a0a565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215612afb57600080fd5b8235612b068161277e565b9150602083013563ffffffff811681146129ff57600080fd5b600181811c90821680612b3357607f821691505b60208210811415611b8f57634e487b7160e01b600052602260045260246000fd5b805162ffffff81168114612a1b57600080fd5b600060208284031215612b7957600080fd5b6108d882612b54565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612bb257612bb2612b82565b500290565b600082821015612bc957612bc9612b82565b500390565b60008219821115612be157612be1612b82565b500190565b600181815b80851115612c21578160001904821115612c0757612c07612b82565b80851615612c1457918102915b93841c9390800290612beb565b509250929050565b600082612c385750600161066b565b81612c455750600061066b565b8160018114612c5b5760028114612c6557612c81565b600191505061066b565b60ff841115612c7657612c76612b82565b50506001821b61066b565b5060208310610133831016604e8410600b8410161715612ca4575081810a61066b565b612cae8383612be6565b8060001904821115612cc257612cc2612b82565b029392505050565b60006108d860ff841683612c29565b634e487b7160e01b600052601260045260246000fd5b600082612d0c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b8051612a1b8161277e565b600082601f830112612d4357600080fd5b8151612d51612911826128ca565b818152846020838601011115612d6657600080fd5b612d7782602083016020870161271f565b949350505050565b600060a08284031215612d9157600080fd5b612d9961284c565b9050815167ffffffffffffffff80821115612db357600080fd5b612dbf85838601612d32565b83526020840151915080821115612dd557600080fd5b612de185838601612d32565b60208401526040840151915080821115612dfa57600080fd5b612e0685838601612d32565b60408401526060840151915080821115612e1f57600080fd5b612e2b85838601612d32565b60608401526080840151915080821115612e4457600080fd5b50612e5184828501612d32565b60808301525092915050565b600067ffffffffffffffff821115612e7757612e77612836565b5060051b60200190565b600082601f830112612e9257600080fd5b81516020612ea261291183612e5d565b82815260059290921b84018101918181019086841115612ec157600080fd5b8286015b84811015612f0157805167ffffffffffffffff811115612ee55760008081fd5b612ef38986838b0101612d32565b845250918301918301612ec5565b509695505050505050565b600082601f830112612f1d57600080fd5b81516020612f2d61291183612e5d565b82815260059290921b84018101918181019086841115612f4c57600080fd5b8286015b84811015612f01578051612f638161277e565b8352918301918301612f50565b600060208284031215612f8257600080fd5b815167ffffffffffffffff80821115612f9a57600080fd5b908301906102608286031215612faf57600080fd5b612fb7612875565b612fc083612b54565b8152612fce60208401612b54565b602082015260408301516040820152612fe960608401612d27565b606082015260808301518281111561300057600080fd5b61300c87828601612d32565b60808301525060a08301518281111561302457600080fd5b61303087828601612d32565b60a08301525061304260c08401612d27565b60c082015260e08301518281111561305957600080fd5b61306587828601612d32565b60e083015250610100808401518381111561307f57600080fd5b61308b88828701612d32565b82840152505061012080840151838111156130a557600080fd5b6130b188828701612d32565b82840152505061014080840151838111156130cb57600080fd5b6130d788828701612d7f565b82840152505061016080840151838111156130f157600080fd5b6130fd88828701612e81565b828401525050610180808401518381111561311757600080fd5b61312388828701612e81565b8284015250506101a0808401518381111561313d57600080fd5b61314988828701612d32565b8284015250506101c08084015181830152506101e0613169818501612d27565b90820152610200838101518381111561318157600080fd5b61318d88828701612d32565b82840152505061022080840151838111156131a757600080fd5b6131b388828701612f0c565b91830191909152506102409283015192810192909252509392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220762485e01e1eaa4d010e2a4e94b49f10301c765602e81042b3a49b58da4b8bdc64736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xF4A290F7 EQ PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0xAAD3EC96 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xC3678F35 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F283970 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x94527729 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x32974838 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BC45C9 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x16A5041F EQ PUSH2 0x2AB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 SLOAD PUSH2 0x256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x29B PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x281D JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x256 PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x194 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x29B JUMP JUMPDEST PUSH2 0x3AA PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x916 JUMP JUMPDEST PUSH2 0x403 PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x256 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x281D JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x2948 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x486 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D1 JUMP JUMPDEST PUSH2 0x1FA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27B PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x4E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST PUSH2 0x29B PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0xDA5 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x506 CALLDATASIZE PUSH1 0x4 PUSH2 0x2793 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x403 PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x1FB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x536 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0xF87 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7A JUMP JUMPDEST PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x29D1 JUMP JUMPDEST PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x574 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE8 JUMP JUMPDEST PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x5AC CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0x1F9 SLOAD PUSH2 0x256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x5D4 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x600 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x64D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x622 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x630 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x665 DUP2 DUP6 DUP6 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x694 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x313031 PUSH1 0xE8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1F9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x70B JUMPI PUSH2 0x1F8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x72C DUP6 DUP3 DUP6 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x737 DUP6 DUP6 DUP6 PUSH2 0x14E5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x63184726 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x7A2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x79F SWAP2 DUP2 ADD SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH32 0xA2D47E5E61369D0BDE38A716E62F1EA16D8124813F8EA55B832C218216E91DFC SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x82E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x1FA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x81B DUP6 PUSH3 0xFFFFFF DUP5 AND PUSH2 0x2B98 JUMP JUMPDEST PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x2BB7 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x66B JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x665 DUP2 DUP6 DUP6 PUSH2 0x855 DUP4 DUP4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8D8 SWAP1 DUP4 PUSH2 0x171E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x70B CALLER DUP3 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x70B CALLER DUP3 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x66B SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x91E PUSH2 0x1903 JUMP JUMPDEST PUSH2 0x928 PUSH1 0x0 PUSH2 0x195D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 PUSH2 0x939 DUP5 DUP5 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x949 DUP3 CALLER DUP4 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x953 DUP3 DUP3 PUSH2 0x1815 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x161 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x66B PUSH2 0x196 DUP4 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x9F3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xA0D JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA0D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xA93 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xAB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x31303 PUSH1 0xEC SHL DUP2 MSTORE POP SWAP1 PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST POP PUSH2 0x1F8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH2 0x1F9 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0xB2A PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 PUSH1 0xA PUSH2 0x2CCA JUMP JUMPDEST PUSH2 0xB43 SWAP1 PUSH4 0x5F5E100 PUSH2 0x2B98 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0xB52 DUP3 PUSH1 0x46 PUSH2 0x2B98 JUMP JUMPDEST PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x1FB SSTORE PUSH1 0x0 PUSH1 0x64 PUSH2 0xB6F DUP4 PUSH1 0x14 PUSH2 0x2B98 JUMP JUMPDEST PUSH2 0xB79 SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x1F8 SLOAD SWAP1 SWAP2 POP PUSH2 0xB93 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0xB9B PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0xBA5 DUP8 DUP8 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0xBAD PUSH2 0x1A81 JUMP JUMPDEST POP POP DUP1 ISZERO PUSH2 0xBF6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0xC20 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x313031 PUSH1 0xE8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST POP PUSH2 0x1F8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x70B JUMPI PUSH2 0x1F8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x5D4 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD17 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xCE5 PUSH1 0x1 DUP4 PUSH2 0x2BB7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCF5 JUMPI PUSH2 0xCF5 PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xD38 DUP3 DUP7 PUSH2 0x1221 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x737 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x665 DUP2 DUP6 DUP6 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0xDBB PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB SLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323033 PUSH1 0xE8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xDFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x46EC8D2B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x8DD91A56 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xE6F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2F70 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x31303 PUSH1 0xEC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xECF DUP3 PUSH2 0x1E0 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x742 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB SLOAD DUP2 GT ISZERO PUSH2 0xEE2 JUMPI POP PUSH2 0x1FB SLOAD JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x1FA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0x1E0 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF1B SWAP1 DUP5 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF2B SWAP1 POP CALLER DUP3 PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH2 0x1FB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x2BB7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x5D425A3A6A3D5A60FBF147DC6659CE3DFEB701FC44FE90058C32783B8807C574 SWAP2 ADD PUSH2 0xBED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B PUSH2 0x939 DUP4 PUSH2 0xCA1 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xFD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1051 SWAP1 PUSH2 0x1049 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1AF6 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH2 0x105C DUP2 PUSH2 0x1B6C JUMP JUMPDEST DUP7 EQ PUSH2 0x10AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x10B4 DUP2 DUP9 PUSH2 0x181F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x113C DUP13 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1197 DUP3 PUSH2 0x1AF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11A7 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x120A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x1215 DUP11 DUP11 DUP11 PUSH2 0x1347 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x1291 JUMPI PUSH2 0x1291 PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12D9 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x133E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x70B DUP2 PUSH2 0x195D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x140A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1477 DUP5 DUP5 PUSH2 0x1221 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x14DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x14DF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1347 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x15B6 DUP4 DUP4 DUP4 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x162E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x168E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x14DF DUP5 DUP5 DUP5 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x16D1 PUSH2 0x12D SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1778 JUMPI PUSH1 0x0 PUSH2 0x1739 DUP5 PUSH2 0x1BB0 JUMP JUMPDEST PUSH2 0x1743 SWAP1 DUP6 PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1768 JUMPI DUP1 SWAP2 POP PUSH2 0x1776 JUMP JUMPDEST PUSH2 0x1773 DUP2 PUSH1 0x1 PUSH2 0x2BCE JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x0 PUSH2 0x178C DUP4 DUP4 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x17B1 JUMPI DUP1 SWAP2 POP PUSH2 0x17BF JUMP JUMPDEST PUSH2 0x17BC DUP2 PUSH1 0x1 PUSH2 0x2BCE JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1778 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17FF JUMPI PUSH2 0x17E8 DUP7 PUSH2 0x17DA PUSH1 0x1 DUP5 PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x953 DUP3 DUP3 PUSH2 0x1CB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x194 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x33 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x14DF DUP3 DUP5 DUP4 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0xFB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2039 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x362062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x953 DUP3 DUP3 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH2 0x928 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH2 0x953 DUP3 DUP3 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH2 0x928 PUSH2 0x1F19 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B PUSH2 0x1B03 PUSH2 0x16A1 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1B55 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1B62 DUP2 PUSH2 0x200D JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x161 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA0 DUP4 DUP4 DUP4 PUSH2 0x215B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1BA0 DUP4 DUP4 DUP4 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1BBF JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1BCC DUP5 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BE5 JUMPI PUSH2 0x1BE5 PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BFD JUMPI PUSH2 0x1BFD PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C15 JUMPI PUSH2 0x1C15 PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C2D JUMPI PUSH2 0x1C2D PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C45 JUMPI PUSH2 0x1C45 PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C5D JUMPI PUSH2 0x1C5D PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C75 JUMPI PUSH2 0x1C75 PUSH2 0x2CD9 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x8D8 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1C8F JUMPI PUSH2 0x1C8F PUSH2 0x2CD9 JUMP JUMPDEST DIV PUSH2 0x2288 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x8D8 SWAP1 DUP5 DUP5 AND PUSH2 0x2BCE JUMP JUMPDEST PUSH2 0x1CBA DUP3 DUP3 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x14DF PUSH2 0x196 PUSH2 0x23E5 DUP4 PUSH2 0x23F1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1CEB JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1D27 SWAP1 PUSH2 0x23E5 DUP6 PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D6F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x195 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1DB1 SWAP1 PUSH2 0x2545 DUP6 PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DF9 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E12 DUP3 DUP3 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x1E22 PUSH2 0x70E JUMP JUMPDEST GT ISZERO PUSH2 0x1E89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x766572666C6F77696E6720766F746573 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x14DF PUSH2 0x196 PUSH2 0x2545 DUP4 PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1F05 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x268F JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1BA0 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP1 PUSH2 0x31D1 JUMP JUMPDEST PUSH2 0x928 CALLER PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1F80 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x2004 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FFD JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2004 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2021 JUMPI PUSH2 0x2021 PUSH2 0x321C JUMP JUMPDEST EQ ISZERO PUSH2 0x202A JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x203E JUMPI PUSH2 0x203E PUSH2 0x321C JUMP JUMPDEST EQ ISZERO PUSH2 0x208C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x20A0 PUSH2 0x321C JUMP JUMPDEST EQ ISZERO PUSH2 0x20EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2102 JUMPI PUSH2 0x2102 PUSH2 0x321C JUMP JUMPDEST EQ ISZERO PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x194 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1BA0 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x2209 JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x221B JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x222D JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x223F JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x2251 JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x2263 JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x2275 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0x66B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2297 JUMPI DUP2 PUSH2 0x8D8 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x22FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x230A DUP3 PUSH1 0x0 DUP4 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1BA0 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 DUP3 DUP5 PUSH2 0x2BB7 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 DUP2 ISZERO PUSH2 0x243E JUMPI PUSH2 0x240E DUP8 PUSH2 0x17DA PUSH1 0x1 DUP6 PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 POP PUSH2 0x2473 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x248B JUMPI POP DUP1 MLOAD PUSH4 0xFFFFFFFF AND NUMBER EQ JUMPDEST ISZERO PUSH2 0x24D0 JUMPI PUSH2 0x2499 DUP4 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x24A8 DUP9 PUSH2 0x17DA PUSH1 0x1 DUP7 PUSH2 0x2BB7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x253B JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x24E5 NUMBER PUSH2 0x189A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24F9 DUP7 PUSH2 0x2626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 DUP3 DUP5 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x25B3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B95 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x25C5 SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x953 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6CE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x269B SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x26BD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2703 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x26D6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2703 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2703 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2703 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x26E8 JUMP JUMPDEST POP PUSH2 0x18FF SWAP3 SWAP2 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x270B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2722 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14DF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x276A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x271F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x27B1 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D8 DUP2 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x27FC DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x280C DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x282F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x286F JUMPI PUSH2 0x286F PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x286F JUMPI PUSH2 0x286F PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28C2 JUMPI PUSH2 0x28C2 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28E4 JUMPI PUSH2 0x28E4 PUSH2 0x2836 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2916 PUSH2 0x2911 DUP3 PUSH2 0x28CA JUMP JUMPDEST PUSH2 0x2899 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x292B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x295E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2982 DUP9 DUP4 DUP10 ADD PUSH2 0x28F2 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A5 DUP8 DUP3 DUP9 ADD PUSH2 0x28F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x29B6 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x29C6 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x29EF DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x29FF DUP2 PUSH2 0x277E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2A44 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2A60 PUSH1 0x60 DUP9 ADD PUSH2 0x2A0A JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2AA0 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x2AB0 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2ACC PUSH1 0x80 DUP10 ADD PUSH2 0x2A0A JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B06 DUP2 PUSH2 0x277E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x29FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2B33 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D8 DUP3 PUSH2 0x2B54 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2BB2 JUMPI PUSH2 0x2BB2 PUSH2 0x2B82 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2BC9 JUMPI PUSH2 0x2BC9 PUSH2 0x2B82 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2BE1 JUMPI PUSH2 0x2BE1 PUSH2 0x2B82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2C21 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2C07 JUMPI PUSH2 0x2C07 PUSH2 0x2B82 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2C14 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2BEB JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C38 JUMPI POP PUSH1 0x1 PUSH2 0x66B JUMP JUMPDEST DUP2 PUSH2 0x2C45 JUMPI POP PUSH1 0x0 PUSH2 0x66B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2C5B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2C65 JUMPI PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x66B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2C76 JUMPI PUSH2 0x2C76 PUSH2 0x2B82 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x66B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2CA4 JUMPI POP DUP2 DUP2 EXP PUSH2 0x66B JUMP JUMPDEST PUSH2 0x2CAE DUP4 DUP4 PUSH2 0x2BE6 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2CC2 JUMPI PUSH2 0x2CC2 PUSH2 0x2B82 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2C29 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2D0C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2A1B DUP2 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2D51 PUSH2 0x2911 DUP3 PUSH2 0x28CA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D77 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x271F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D99 PUSH2 0x284C JUMP JUMPDEST SWAP1 POP DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DBF DUP6 DUP4 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DE1 DUP6 DUP4 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E06 DUP6 DUP4 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E2B DUP6 DUP4 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E51 DUP5 DUP3 DUP6 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E77 JUMPI PUSH2 0x2E77 PUSH2 0x2836 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x2EA2 PUSH2 0x2911 DUP4 PUSH2 0x2E5D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F01 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EE5 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2EF3 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x2D32 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2EC5 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x2F2D PUSH2 0x2911 DUP4 PUSH2 0x2E5D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2F4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F01 JUMPI DUP1 MLOAD PUSH2 0x2F63 DUP2 PUSH2 0x277E JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2F50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x260 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x2FAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FB7 PUSH2 0x2875 JUMP JUMPDEST PUSH2 0x2FC0 DUP4 PUSH2 0x2B54 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2FCE PUSH1 0x20 DUP5 ADD PUSH2 0x2B54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x2FE9 PUSH1 0x60 DUP5 ADD PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x3000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x300C DUP8 DUP3 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x3024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3030 DUP8 DUP3 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x3042 PUSH1 0xC0 DUP5 ADD PUSH2 0x2D27 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x3059 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3065 DUP8 DUP3 DUP7 ADD PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x307F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x308B DUP9 DUP3 DUP8 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x30A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30B1 DUP9 DUP3 DUP8 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x30CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30D7 DUP9 DUP3 DUP8 ADD PUSH2 0x2D7F JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x30F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30FD DUP9 DUP3 DUP8 ADD PUSH2 0x2E81 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x180 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x3117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3123 DUP9 DUP3 DUP8 ADD PUSH2 0x2E81 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x1A0 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x313D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3149 DUP9 DUP3 DUP8 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x1C0 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x1E0 PUSH2 0x3169 DUP2 DUP6 ADD PUSH2 0x2D27 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x200 DUP4 DUP2 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x3181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318D DUP9 DUP3 DUP8 ADD PUSH2 0x2D32 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x220 DUP1 DUP5 ADD MLOAD DUP4 DUP2 GT ISZERO PUSH2 0x31A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B3 DUP9 DUP3 DUP8 ADD PUSH2 0x2F0C JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x240 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x2485E01E1EAA4D010E2A4E94B49F10301C765602E81042 0xB3 LOG4 SWAP12 PC 0xDA 0x4B DUP12 0xDC PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"636:3821:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;787:21;;;;;-1:-1:-1;;;;;787:21:30;;;;;;-1:-1:-1;;;;;178:32:37;;;160:51;;148:2;133:18;787:21:30;;;;;;;;2491:98:8;;;:::i;:::-;;;;;;;:::i;4768:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1494:14:37;;1487:22;1469:41;;1457:2;1442:18;4768:197:8;1329:187:37;1926:261:30;;;;;;:::i;:::-;;:::i;:::-;;2282:142;;;:::i;:::-;;;1919:25:37;;;1907:2;1892:18;2282:142:30;1773:177:37;5527:286:8;;;;;;:::i;:::-;;:::i;2193:83:30:-;;;2267:2;2558:36:37;;2546:2;2531:18;2193:83:30;2416:184:37;3210:386:30;;;;;;:::i;:::-;;:::i;3276:113:15:-;;;:::i;6208:234:8:-;;;;;;:::i;:::-;;:::i;3133:265:13:-;;;;;;:::i;:::-;;:::i;848:89:10:-;;;;;;:::i;:::-;;:::i;2526:126:13:-;;;;;;:::i;:::-;-1:-1:-1;;;;;2626:19:13;;;2600:7;2626:19;;;:10;:19;;;;;;;;2526:126;5978:112;;;;;;:::i;:::-;;:::i;1858:84:7:-;1928:7;;;;1858:84;;2278:160:13;;;;;;:::i;:::-;;:::i;:::-;;;3146:10:37;3134:23;;;3116:42;;3104:2;3089:18;2278:160:13;2972:192:37;3743:125:8;;;;;;:::i;:::-;-1:-1:-1;;;;;3843:18:8;3817:7;3843:18;;;:9;:18;;;;;;;3743:125;2071:101:4;;;:::i;1899:188:12:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3331:39:37;;;3313:58;;3301:2;3286:18;1899:188:12;3169:208:37;1243:161:10;;;;;;:::i;:::-;;:::i;3026:126:15:-;;;;;;:::i;:::-;;:::i;1441:85:4:-;1513:6;;-1:-1:-1;;;;;1513:6:4;1441:85;;3677:256:13;;;;;;:::i;:::-;;:::i;987:689:30:-;;;;;;:::i;:::-;;:::i;1682:238::-;;;;;;:::i;:::-;;:::i;845:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2702:102:8;;;:::i;2731:209:13:-;;;;;;:::i;:::-;;:::i;6929:427:8:-;;;;;;:::i;:::-;;:::i;4064:189::-;;;;;;:::i;:::-;;:::i;3675:780:30:-;;;;;;:::i;:::-;;:::i;1641:152:12:-;;;;;;:::i;:::-;;:::i;946:33:30:-;;;;;;6167:585:13;;;;;;:::i;:::-;;:::i;2328:637:15:-;;;;;;:::i;:::-;;:::i;4311:149:8:-;;;;;;:::i;:::-;;:::i;2055:148:13:-;;;;;;:::i;:::-;;:::i;:::-;;;;8336:13:37;;8351:10;8332:30;8314:49;;8423:4;8411:17;;;8405:24;-1:-1:-1;;;;;8401:50:37;8379:20;;;8372:80;;;;8287:18;2055:148:13;8112:346:37;2321:198:4;;;;;;:::i;:::-;;:::i;814:25:30:-;;;;;-1:-1:-1;;;;;814:25:30;;;2491:98:8;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;929:10:20;4905:32:8;929:10:20;4921:7:8;4930:6;4905:8;:32::i;:::-;4954:4;4947:11;;;4768:197;;;;;:::o;1926:261:30:-;2012:6;;-1:-1:-1;;;;;2012:6:30;1998:10;:20;:45;;;;-1:-1:-1;;;;;;2022:21:30;;;;1998:45;2045:25;;;;;;;;;;;;;-1:-1:-1;;;2045:25:30;;;1990:81;;;;;-1:-1:-1;;;1990:81:30;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2117:10:30;;-1:-1:-1;;;;;2117:21:30;;;:10;;:21;2113:68;;2154:6;:16;;-1:-1:-1;;;;;;2154:16:30;-1:-1:-1;;;;;2154:16:30;;;;;2113:68;1926:261;:::o;2282:142::-;2372:7;2398:19;3666:12:8;;;3579:106;2398:19:30;2391:26;;2282:142;:::o;5527:286:8:-;5654:4;929:10:20;5710:38:8;5726:4;929:10:20;5741:6:8;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;-1:-1:-1;5802:4:8;;5527:286;-1:-1:-1;;;;5527:286:8:o;3210:386:30:-;3295:7;3314:18;3350:10;3314:47;;3375:3;-1:-1:-1;;;;;3375:16:30;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3375:18:30;;;;;;;;-1:-1:-1;;3375:18:30;;;;;;;;;;;;:::i;:::-;;;3371:201;;3527:34;;-1:-1:-1;;;;;178:32:37;;160:51;;3527:34:30;;148:2:37;133:18;3527:34:30;;;;;;;3371:201;;;3467:10;3458:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3458:32:30;;;;;;;;;;3438:17;3446:9;3438:17;;;;:::i;:::-;:52;;;;:::i;:::-;3431:59;;;;;;3371:201;-1:-1:-1;3588:1:30;;3210:386;-1:-1:-1;;;3210:386:30:o;3276:113:15:-;3336:7;3362:20;:18;:20::i;6208:234:8:-;6296:4;929:10:20;6350:64:8;929:10:20;6366:7:8;6403:10;6375:25;929:10:20;6366:7:8;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;3133:265:13:-;3231:7;3272:12;3258:11;:26;3250:70;;;;-1:-1:-1;;;3250:70:13;;9999:2:37;3250:70:13;;;9981:21:37;10038:2;10018:18;;;10011:30;10077:33;10057:18;;;10050:61;10128:18;;3250:70:13;9797:355:37;3250:70:13;-1:-1:-1;;;;;3356:21:13;;;;;;:12;:21;;;;;3337:54;;3379:11;3337:18;:54::i;:::-;3330:61;3133:265;-1:-1:-1;;;3133:265:13:o;848:89:10:-;903:27;929:10:20;923:6:10;903:5;:27::i;5978:112:13:-;6049:34;929:10:20;6073:9:13;6049;:34::i;2278:160::-;-1:-1:-1;;;;;2402:21:13;;2348:6;2402:21;;;:12;:21;;;;;:28;2373:58;;:28;:58::i;2071:101:4:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1899:188:12:-;1991:6;2016:64;2045:34;2058:7;2067:11;2045:12;:34::i;:::-;2016:28;:64::i;1243:161:10:-;1319:46;1335:7;929:10:20;1358:6:10;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;:::-;1243:161;;:::o;3026:126:15:-;-1:-1:-1;;;;;3121:14:15;;3095:7;3121:14;;;:7;:14;;;;;929::21;3121:24:15;838:112:21;3677:256:13;3764:7;3805:12;3791:11;:26;3783:70;;;;-1:-1:-1;;;3783:70:13;;9999:2:37;3783:70:13;;;9981:21:37;10038:2;10018:18;;;10011:30;10077:33;10057:18;;;10050:61;10128:18;;3783:70:13;9797:355:37;3783:70:13;3870:56;3889:23;3914:11;3870:18;:56::i;987:689:30:-;3268:19:6;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:6;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:6;1476:19:19;:23;;;3376:66:6;;-1:-1:-1;3425:12:6;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:6;;10359:2:37;3314:201:6;;;10341:21:37;10398:2;10378:18;;;10371:30;10437:34;10417:18;;;10410:62;-1:-1:-1;;;10488:18:37;;;10481:44;10542:19;;3314:201:6;10157:410:37;3314:201:6;3525:12;:16;;-1:-1:-1;;3525:16:6;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:6;;;;;3551:65;-1:-1:-1;;;;;1158:25:30;::::1;::::0;;::::1;::::0;:58:::1;;-1:-1:-1::0;;;;;;1187:29:30;::::1;::::0;::::1;1158:58;1218:14;;;;;;;;;;;;;-1:-1:-1::0;;;1218:14:30::1;;::::0;1150:83:::1;;;;;-1:-1:-1::0;;;1150:83:30::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1243:6:30::1;:14:::0;;-1:-1:-1;;;;;1243:14:30;;::::1;-1:-1:-1::0;;;;;;1243:14:30;;::::1;;::::0;;;1267:10:::1;:22:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1243:6:::1;1347:10;2267:2:::0;;2193:83;1347:10:::1;1341:16;::::0;:2:::1;:16;:::i;:::-;1322:36;::::0;:15:::1;:36;:::i;:::-;1300:58:::0;-1:-1:-1;1434:3:30::1;1415:16;1300:58:::0;1429:2:::1;1415:16;:::i;:::-;:22;;;;:::i;:::-;1394:18;:43:::0;1471:17:::1;1510:3;1491:16;:11:::0;1505:2:::1;1491:16;:::i;:::-;:22;;;;:::i;:::-;1529:6;::::0;1471:42;;-1:-1:-1;1523:24:30::1;::::0;-1:-1:-1;;;;;1529:6:30::1;1471:42:::0;1523:5:::1;:24::i;:::-;1585:22;:20;:22::i;:::-;1617:26;1630:4;1636:6;1617:12;:26::i;:::-;1653:16;:14;:16::i;:::-;1140:536;;3640:14:6::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:6;;;3710:14;;-1:-1:-1;2558:36:37;;3710:14:6;;2546:2:37;2531:18;3710:14:6;;;;;;;;3636:99;3258:483;987:689:30;;;;:::o;1682:238::-;1760:6;;-1:-1:-1;;;;;1760:6:30;1746:10;:20;:44;;;;-1:-1:-1;;;;;;1770:20:30;;;;1746:44;1792:25;;;;;;;;;;;;;-1:-1:-1;;;1792:25:30;;;1738:80;;;;;-1:-1:-1;;;1738:80:30;;;;;;;;:::i;:::-;-1:-1:-1;1856:6:30;;-1:-1:-1;;;;;1856:16:30;;;:6;;:16;1852:62;;1888:6;:15;;-1:-1:-1;;;;;1888:15:30;;-1:-1:-1;;;;;;1888:15:30;;;;;;1682:238;:::o;2702:102:8:-;2758:13;2790:7;2783:14;;;;;:::i;2731:209:13:-;-1:-1:-1;;;;;2837:21:13;;2804:7;2837:21;;;:12;:21;;;;;:28;2882:8;;:51;;-1:-1:-1;;;;;2897:21:13;;;;;;:12;:21;;;;;2919:7;2925:1;2919:3;:7;:::i;:::-;2897:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;;;;-1:-1:-1;;;;;2897:36:13;2882:51;;;2893:1;2882:51;-1:-1:-1;;;;;2875:58:13;;2731:209;-1:-1:-1;;;2731:209:13:o;6929:427:8:-;7022:4;929:10:20;7022:4:8;7103:25;929:10:20;7120:7:8;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;-1:-1:-1;;;7138:85:8;;12842:2:37;7138:85:8;;;12824:21:37;12881:2;12861:18;;;12854:30;12920:34;12900:18;;;12893:62;-1:-1:-1;;;12971:18:37;;;12964:35;13016:19;;7138:85:8;12640:401:37;7138:85:8;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;4064:189::-;4143:4;929:10:20;4197:28:8;929:10:20;4214:2:8;4218:6;4197:9;:28::i;3675:780:30:-;1482:19:7;:17;:19::i;:::-;3810:1:30::1;3789:18;;:22;3813:16;;;;;;;;;;;;;-1:-1:-1::0;;;3813:16:30::1;;::::0;3781:49:::1;;;;;-1:-1:-1::0;;;3781:49:30::1;;;;;;;;:::i;:::-;-1:-1:-1::0;3965:41:30::1;::::0;-1:-1:-1;;;3965:41:30;;::::1;::::0;::::1;1919:25:37::0;;;3897:21:30;;3841:34:::1;::::0;-1:-1:-1;;;;;3965:30:30;::::1;::::0;::::1;::::0;1892:18:37;;3965:41:30::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3965:41:30::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;4024:20;::::0;::::1;::::0;4060:14:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4060:14:30::1;::::0;::::1;::::0;3929:77;;-1:-1:-1;;;;;;4024:34:30::1;4048:10;4024:34;4016:59;;;;-1:-1:-1::0;;;4016:59:30::1;;;;;;;;:::i;:::-;;4086:14;4103:61;4124:7;:19;;;4145:7;:18;;;4103:20;:61::i;:::-;4086:78;;4187:18;;4178:6;:27;4174:85;;;-1:-1:-1::0;4230:18:30::1;::::0;4174:85:::1;4277:10;4268:20;::::0;;;:8:::1;:20;::::0;;;;;;;4289:19:::1;::::0;::::1;::::0;-1:-1:-1;;;;;4268:41:30::1;::::0;;;;;;;:51;;4313:6;;4268:20;:51:::1;::::0;4313:6;;4268:51:::1;:::i;:::-;::::0;;;-1:-1:-1;4329:25:30::1;::::0;-1:-1:-1;4335:10:30::1;4347:6:::0;4329:5:::1;:25::i;:::-;4386:6;4364:18;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4408:40:30::1;::::0;;4429:10:::1;19998:51:37::0;;20080:2;20065:18;;20058:34;;;4408:40:30::1;::::0;19971:18:37;4408:40:30::1;19824:274:37::0;1641:152:12;1714:6;1739:47;1768:17;1777:7;1768:8;:17::i;6167:585:13:-;6386:6;6367:15;:25;;6359:67;;;;-1:-1:-1;;;6359:67:13;;20305:2:37;6359:67:13;;;20287:21:37;20344:2;20324:18;;;20317:30;20383:31;20363:18;;;20356:59;20432:18;;6359:67:13;20103:353:37;6359:67:13;6518:58;;;1744:71;6518:58;;;20692:25:37;-1:-1:-1;;;;;20753:32:37;;20733:18;;;20726:60;;;;20802:18;;;20795:34;;;20845:18;;;20838:34;;;6436:14:13;;6453:180;;6491:87;;20664:19:37;;6518:58:13;;;;;;;;;;;;6508:69;;;;;;6491:16;:87::i;:::-;6592:1;6607;6622;6453:24;:180::i;:::-;6436:197;;6660:17;6670:6;6660:9;:17::i;:::-;6651:5;:26;6643:64;;;;-1:-1:-1;;;6643:64:13;;21085:2:37;6643:64:13;;;21067:21:37;21124:2;21104:18;;;21097:30;21163:27;21143:18;;;21136:55;21208:18;;6643:64:13;20883:349:37;6643:64:13;6717:28;6727:6;6735:9;6717;:28::i;:::-;6349:403;6167:585;;;;;;:::o;2328:637:15:-;2563:8;2544:15;:27;;2536:69;;;;-1:-1:-1;;;2536:69:15;;21439:2:37;2536:69:15;;;21421:21:37;21478:2;21458:18;;;21451:30;21517:31;21497:18;;;21490:59;21566:18;;2536:69:15;21237:353:37;2536:69:15;2616:18;1363:95;2676:5;2683:7;2692:5;2699:16;2709:5;2699:9;:16::i;:::-;2647:79;;;;;;21882:25:37;;;;-1:-1:-1;;;;;21981:15:37;;;21961:18;;;21954:43;22033:15;;;;22013:18;;;22006:43;22065:18;;;22058:34;22108:19;;;22101:35;22152:19;;;22145:35;;;21854:19;;2647:79:15;;;;;;;;;;;;2637:90;;;;;;2616:111;;2738:12;2753:28;2770:10;2753:16;:28::i;:::-;2738:43;;2792:14;2809:39;2834:4;2840:1;2843;2846;2809:24;:39::i;:::-;2792:56;;2876:5;-1:-1:-1;;;;;2866:15:15;:6;-1:-1:-1;;;;;2866:15:15;;2858:58;;;;-1:-1:-1;;;2858:58:15;;22393:2:37;2858:58:15;;;22375:21:37;22432:2;22412:18;;;22405:30;22471:32;22451:18;;;22444:60;22521:18;;2858:58:15;22191:354:37;2858:58:15;2927:31;2936:5;2943:7;2952:5;2927:8;:31::i;:::-;2526:439;;;2328:637;;;;;;;:::o;4311:149:8:-;-1:-1:-1;;;;;4426:18:8;;;4400:7;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4311:149::o;2055:148:13:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2170:21:13;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2163:33;;;;;;;;;2170:26;;2163:33;;;;;;;;;-1:-1:-1;;;;;2163:33:13;;;;;;;;;2055:148;-1:-1:-1;;;2055:148:13:o;2321:198:4:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:4;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:4;;22752:2:37;2401:73:4::1;::::0;::::1;22734:21:37::0;22791:2;22771:18;;;22764:30;22830:34;22810:18;;;22803:62;-1:-1:-1;;;22881:18:37;;;22874:36;22927:19;;2401:73:4::1;22550:402:37::0;2401:73:4::1;2484:28;2503:8;2484:18;:28::i;10841:370:8:-:0;-1:-1:-1;;;;;10972:19:8;;10964:68;;;;-1:-1:-1;;;10964:68:8;;23159:2:37;10964:68:8;;;23141:21:37;23198:2;23178:18;;;23171:30;23237:34;23217:18;;;23210:62;-1:-1:-1;;;23288:18:37;;;23281:34;23332:19;;10964:68:8;22957:400:37;10964:68:8;-1:-1:-1;;;;;11050:21:8;;11042:68;;;;-1:-1:-1;;;11042:68:8;;23564:2:37;11042:68:8;;;23546:21:37;23603:2;23583:18;;;23576:30;23642:34;23622:18;;;23615:62;-1:-1:-1;;;23693:18:37;;;23686:32;23735:19;;11042:68:8;23362:398:37;11042:68:8;-1:-1:-1;;;;;11121:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11172:32;;1919:25:37;;;11172:32:8;;1892:18:37;11172:32:8;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;-1:-1:-1;;11688:16:8;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;-1:-1:-1;;;11741:68:8;;23967:2:37;11741:68:8;;;23949:21:37;24006:2;23986:18;;;23979:30;24045:31;24025:18;;;24018:59;24094:18;;11741:68:8;23765:353:37;11741:68:8;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11612:321;11492:441;;;:::o;7810:818::-;-1:-1:-1;;;;;7936:18:8;;7928:68;;;;-1:-1:-1;;;7928:68:8;;24325:2:37;7928:68:8;;;24307:21:37;24364:2;24344:18;;;24337:30;24403:34;24383:18;;;24376:62;-1:-1:-1;;;24454:18:37;;;24447:35;24499:19;;7928:68:8;24123:401:37;7928:68:8;-1:-1:-1;;;;;8014:16:8;;8006:64;;;;-1:-1:-1;;;8006:64:8;;24731:2:37;8006:64:8;;;24713:21:37;24770:2;24750:18;;;24743:30;24809:34;24789:18;;;24782:62;-1:-1:-1;;;24860:18:37;;;24853:33;24903:19;;8006:64:8;24529:399:37;8006:64:8;8081:38;8102:4;8108:2;8112:6;8081:20;:38::i;:::-;-1:-1:-1;;;;;8152:15:8;;8130:19;8152:15;;;:9;:15;;;;;;8185:21;;;;8177:72;;;;-1:-1:-1;;;8177:72:8;;25135:2:37;8177:72:8;;;25117:21:37;25174:2;25154:18;;;25147:30;25213:34;25193:18;;;25186:62;-1:-1:-1;;;25264:18:37;;;25257:36;25310:19;;8177:72:8;24933:402:37;8177:72:8;-1:-1:-1;;;;;8283:15:8;;;;;;;:9;:15;;;;;;8301:20;;;8283:38;;8498:13;;;;;;;;;;:23;;;;;;8547:26;;;;;;8315:6;1919:25:37;;1907:2;1892:18;;1773:177;8547:26:8;;;;;;;;8584:37;8604:4;8610:2;8614:6;8584:19;:37::i;2851:160:24:-;2904:7;2930:74;1604:95;2964:17;4395:12;;;4311:103;2964:17;4740:15;;3193:73;;;;;;27531:25:37;;;27572:18;;;27565:34;;;27615:18;;;27608:34;;;3237:13:24;27658:18:37;;;27651:34;3260:4:24;27701:19:37;;;27694:61;3157:7:24;;27503:19:37;;3193:73:24;;;;;;;;;;;;3183:84;;;;;;3176:91;;3017:257;;;;;;4017:1880:13;5221:12;;4116:7;;;5221:12;5314:1;5305:10;;5301:255;;;5331:11;5354:28;5375:6;5354:20;:28::i;:::-;5345:37;;:6;:37;:::i;:::-;10244:25;10304:21;;;10370:4;10357:18;;5331:51;;-1:-1:-1;5438:11:13;;10353:28;;5400:35;;;:49;5396:150;;;5476:3;5469:10;;5396:150;;;5524:7;:3;5530:1;5524:7;:::i;:::-;5518:13;;5396:150;5317:239;5301:255;5579:4;5573:3;:10;5566:255;;;5599:11;5613:34;5637:3;5642:4;5613:23;:34::i;:::-;10244:25;10304:21;;;10370:4;10357:18;;5599:48;;-1:-1:-1;5703:11:13;;10353:28;;5665:35;;;:49;5661:150;;;5741:3;5734:10;;5661:150;;;5789:7;:3;5795:1;5789:7;:::i;:::-;5783:13;;5661:150;5585:236;5566:255;;;5838:9;;:52;;5854:30;5868:5;5875:8;5882:1;5875:4;:8;:::i;:::-;10244:25;10304:21;;;10370:4;10357:18;;;10353:28;;10158:239;5854:30;:36;;;;-1:-1:-1;;;;;5854:36:13;5838:52;;;5850:1;5838:52;-1:-1:-1;;;;;5831:59:13;;4017:1880;-1:-1:-1;;;;;;4017:1880:13:o;3011:164:30:-;3140:28;3152:7;3161:6;3140:11;:28::i;8175:380:13:-;-1:-1:-1;;;;;2626:19:13;;;8259:23;2626:19;;;:10;:19;;;;;;;;;;3843:9:8;:18;;;;;;8372:21:13;;;;:33;;;-1:-1:-1;;;;;;8372:33:13;;;;;;;8421:54;;2626:19;;;;;3843:18:8;;8372:33:13;;2626:19;;;8421:54;;8259:23;8421:54;8486:62;8503:15;8520:9;8531:16;8486;:62::i;15275:187:28:-;15331:6;15366:16;15357:25;;;15349:76;;;;-1:-1:-1;;;15349:76:28;;25542:2:37;15349:76:28;;;25524:21:37;25581:2;25561:18;;;25554:30;25620:34;25600:18;;;25593:62;-1:-1:-1;;;25671:18:37;;;25664:36;25717:19;;15349:76:28;25340:402:37;15349:76:28;-1:-1:-1;15449:5:28;15275:187::o;1599:130:4:-;1513:6;;-1:-1:-1;;;;;1513:6:4;929:10:20;1662:23:4;1654:68;;;;-1:-1:-1;;;1654:68:4;;25949:2:37;1654:68:4;;;25931:21:37;;;25968:18;;;25961:30;26027:34;26007:18;;;26000:62;26079:18;;1654:68:4;25747:356:37;2673:187:4;2765:6;;;-1:-1:-1;;;;;2781:17:4;;;-1:-1:-1;;;;;;2781:17:4;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;11179::28:-;11235:6;-1:-1:-1;;;;;11261:25:28;;;11253:76;;;;-1:-1:-1;;;11253:76:28;;26310:2:37;11253:76:28;;;26292:21:37;26349:2;26329:18;;;26322:30;26388:34;26368:18;;;26361:62;-1:-1:-1;;;26439:18:37;;;26432:36;26485:19;;11253:76:28;26108:402:37;2851:154:30;2975:23;2987:2;2991:6;2975:11;:23::i;645:102:11:-;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;713:27:11::1;:25;:27::i;2114:147:8:-:0;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;2216:38:8::1;2239:5;2246:7;2216:22;:38::i;1003:95:4:-:0;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;1065:26:4::1;:24;:26::i;2010:106:7:-:0;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:7;;27129:2:37;2071:38:7;;;27111:21:37;27168:2;27148:18;;;27141:30;-1:-1:-1;;;27187:18:37;;;27180:46;27243:18;;2071:38:7;26927:340:37;3899:176:24;3976:7;4002:66;4035:20;:18;:20::i;:::-;4057:10;8503:57:23;;-1:-1:-1;;;8503:57:23;;;28694:27:37;28737:11;;;28730:27;;;28773:12;;;28766:28;;;8467:7:23;;28810:12:37;;8503:57:23;;;;;;;;;;;;8493:68;;;;;;8486:75;;8374:194;;;;;6718:270;6841:7;6861:17;6880:18;6902:25;6913:4;6919:1;6922;6925;6902:10;:25::i;:::-;6860:67;;;;6937:18;6949:5;6937:11;:18::i;:::-;-1:-1:-1;6972:9:23;6718:270;-1:-1:-1;;;;;6718:270:23:o;3520:214:15:-;-1:-1:-1;;;;;3651:14:15;;3580:15;3651:14;;;:7;:14;;;;;929::21;;1061:1;1043:19;;;;929:14;3710:17:15;3597:137;3520:214;;;:::o;2430:207:30:-;2586:44;2613:4;2619:2;2623:6;2586:26;:44::i;:::-;2430:207;;;:::o;2643:202::-;2795:43;2821:4;2827:2;2831:6;2795:25;:43::i;6291:1642:27:-;6339:7;6362:6;6358:45;;-1:-1:-1;6391:1:27;;6291:1642;-1:-1:-1;6291:1642:27:o;6358:45::-;7082:14;7116:1;7105:7;7110:1;7105:4;:7::i;:::-;:12;;7099:1;:19;;7082:36;;7577:1;7566:6;7562:1;:10;;;;;:::i;:::-;;7553:6;:19;7552:26;;7543:35;;7626:1;7615:6;7611:1;:10;;;;;:::i;:::-;;7602:6;:19;7601:26;;7592:35;;7675:1;7664:6;7660:1;:10;;;;;:::i;:::-;;7651:6;:19;7650:26;;7641:35;;7724:1;7713:6;7709:1;:10;;;;;:::i;:::-;;7700:6;:19;7699:26;;7690:35;;7773:1;7762:6;7758:1;:10;;;;;:::i;:::-;;7749:6;:19;7748:26;;7739:35;;7822:1;7811:6;7807:1;:10;;;;;:::i;:::-;;7798:6;:19;7797:26;;7788:35;;7871:1;7860:6;7856:1;:10;;;;;:::i;:::-;;7847:6;:19;7846:26;;7837:35;;7893:23;7897:6;7909;7905:1;:10;;;;;:::i;:::-;;7893:3;:23::i;816:153::-;878:7;951:11;961:1;952:5;;;951:11;:::i;:::-;941:21;;942:5;;;941:21;:::i;7420:190:13:-;7504:28;7516:7;7525:6;7504:11;:28::i;:::-;7543:60;7560:23;7585:9;7596:6;7543:16;:60::i;8561:627::-;8688:3;-1:-1:-1;;;;;8681:10:13;:3;-1:-1:-1;;;;;8681:10:13;;;:24;;;;;8704:1;8695:6;:10;8681:24;8677:505;;;-1:-1:-1;;;;;8725:17:13;;;8721:221;;-1:-1:-1;;;;;8820:17:13;;8763;8820;;;:12;:17;;;;;8763;;8803:54;;8839:9;8850:6;8803:16;:54::i;:::-;8762:95;;;;8901:3;-1:-1:-1;;;;;8880:47:13;;8906:9;8917;8880:47;;;;;;27940:25:37;;;27996:2;27981:18;;27974:34;27928:2;27913:18;;27766:248;8880:47:13;;;;;;;;8744:198;;8721:221;-1:-1:-1;;;;;8960:17:13;;;8956:216;;-1:-1:-1;;;;;9055:17:13;;8998;9055;;;:12;:17;;;;;8998;;9038:49;;9074:4;9080:6;9038:16;:49::i;:::-;8997:90;;;;9131:3;-1:-1:-1;;;;;9110:47:13;;9136:9;9147;9110:47;;;;;;27940:25:37;;;27996:2;27981:18;;27974:34;27928:2;27913:18;;27766:248;9110:47:13;;;;;;;;8979:193;;8561:627;;;:::o;7046:285::-;7130:28;7142:7;7151:6;7130:11;:28::i;:::-;-1:-1:-1;;;;;7176:13:13;:11;:13::i;:::-;:29;;7168:90;;;;-1:-1:-1;;;7168:90:13;;28221:2:37;7168:90:13;;;28203:21:37;28260:2;28240:18;;;28233:30;28299:34;28279:18;;;28272:62;-1:-1:-1;;;28350:18:37;;;28343:46;28406:19;;7168:90:13;28019:412:37;7168:90:13;7269:55;7286:23;7311:4;7317:6;7269:16;:55::i;1166:95:7:-;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;1239:7:7::1;:15:::0;;-1:-1:-1;;1239:15:7::1;::::0;;1166:95::o;2267:159:8:-;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;2379:13:8;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2402:17:8;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;1104:111:4:-:0;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;1176:32:4::1;929:10:20::0;1176:18:4::1;:32::i;5091:1494:23:-:0;5217:7;;6141:66;6128:79;;6124:161;;;-1:-1:-1;6239:1:23;;-1:-1:-1;6243:30:23;6223:51;;6124:161;6396:24;;;6379:14;6396:24;;;;;;;;;29060:25:37;;;29133:4;29121:17;;29101:18;;;29094:45;;;;29155:18;;;29148:34;;;29198:18;;;29191:34;;;6396:24:23;;29032:19:37;;6396:24:23;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6396:24:23;;-1:-1:-1;;6396:24:23;;;-1:-1:-1;;;;;;;6434:20:23;;6430:101;;6486:1;6490:29;6470:50;;;;;;;6430:101;6549:6;-1:-1:-1;6557:20:23;;-1:-1:-1;5091:1494:23;;;;;;;;:::o;592:511::-;669:20;660:5;:29;;;;;;;;:::i;:::-;;656:441;;;592:511;:::o;656:441::-;765:29;756:5;:38;;;;;;;;:::i;:::-;;752:345;;;810:34;;-1:-1:-1;;;810:34:23;;29570:2:37;810:34:23;;;29552:21:37;29609:2;29589:18;;;29582:30;29648:26;29628:18;;;29621:54;29692:18;;810:34:23;29368:348:37;752:345:23;874:35;865:5;:44;;;;;;;;:::i;:::-;;861:236;;;925:41;;-1:-1:-1;;;925:41:23;;29923:2:37;925:41:23;;;29905:21:37;29962:2;29942:18;;;29935:30;30001:33;29981:18;;;29974:61;30052:18;;925:41:23;29721:355:37;861:236:23;996:30;987:5;:39;;;;;;;;:::i;:::-;;983:114;;;1042:44;;-1:-1:-1;;;1042:44:23;;30283:2:37;1042:44:23;;;30265:21:37;30322:2;30302:18;;;30295:30;30361:34;30341:18;;;30334:62;-1:-1:-1;;;30412:18:37;;;30405:32;30454:19;;1042:44:23;30081:398:37;972:264:11;1928:7:7;;;;1173:9:11;1165:64;;;;-1:-1:-1;;;1165:64:11;;30686:2:37;1165:64:11;;;30668:21:37;30725:2;30705:18;;;30698:30;30764:34;30744:18;;;30737:62;-1:-1:-1;;;30815:18:37;;;30808:40;30865:19;;1165:64:11;30484:406:37;7750:254:13;-1:-1:-1;;;;;2626:19:13;;;2600:7;2626:19;;;:10;:19;;;;;;;;;;;;;;;7941:56;;2626:19;;;;;7990:6;7941:16;:56::i;8394:983:27:-;8446:7;;8530:3;8521:12;;;:16;8517:99;;8567:3;8557:13;;;;8588;8517:99;8642:2;8633:11;;;:15;8629:96;;8678:2;8668:12;;;;8698;8629:96;8751:2;8742:11;;;:15;8738:96;;8787:2;8777:12;;;;8807;8738:96;8860:2;8851:11;;;:15;8847:96;;8896:2;8886:12;;;;8916;8847:96;8969:1;8960:10;;;:14;8956:93;;9004:1;8994:11;;;;9023;8956:93;9075:1;9066:10;;;:14;9062:93;;9110:1;9100:11;;;;9129;9062:93;9181:1;9172:10;;;:14;9168:93;;9216:1;9206:11;;;;9235;9168:93;9287:1;9278:10;;;:14;9274:64;;9322:1;9312:11;9364:6;8394:983;-1:-1:-1;;8394:983:27:o;599:104::-;657:7;687:1;683;:5;:13;;695:1;683:13;;;-1:-1:-1;691:1:27;;599:104;-1:-1:-1;599:104:27:o;9759:659:8:-;-1:-1:-1;;;;;9842:21:8;;9834:67;;;;-1:-1:-1;;;9834:67:8;;31097:2:37;9834:67:8;;;31079:21:37;31136:2;31116:18;;;31109:30;31175:34;31155:18;;;31148:62;-1:-1:-1;;;31226:18:37;;;31219:31;31267:19;;9834:67:8;30895:397:37;9834:67:8;9912:49;9933:7;9950:1;9954:6;9912:20;:49::i;:::-;-1:-1:-1;;;;;9997:18:8;;9972:22;9997:18;;;:9;:18;;;;;;10033:24;;;;10025:71;;;;-1:-1:-1;;;10025:71:8;;31499:2:37;10025:71:8;;;31481:21:37;31538:2;31518:18;;;31511:30;31577:34;31557:18;;;31550:62;-1:-1:-1;;;31628:18:37;;;31621:32;31670:19;;10025:71:8;31297:398:37;10025:71:8;-1:-1:-1;;;;;10130:18:8;;;;;;:9;:18;;;;;;;;10151:23;;;10130:44;;10267:12;:22;;;;;;;10315:37;1919:25:37;;;10130:18:8;;;10315:37;;1892:18:37;10315:37:8;;;;;;;10363:48;10383:7;10400:1;10404:6;10363:19;:48::i;10051:101:13:-;10114:7;10140:5;10144:1;10140;:5;:::i;9194:749::-;9426:12;;9364:17;;;;;9477:8;;:59;;9507:29;9521:5;9528:7;9534:1;9528:3;:7;:::i;9507:29::-;9477:59;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9477:59:13;;;;;;;;9488:16;;;;;;;;;-1:-1:-1;9488:16:13;;;;;;;9477:59;9449:87;;9559:7;:13;;;-1:-1:-1;;;;;9547:25:13;;;9594:20;9597:9;9608:5;9594:2;:20;;:::i;:::-;9582:32;;9635:1;9629:3;:7;:44;;;;-1:-1:-1;9640:17:13;;:33;;9661:12;9640:33;9629:44;9625:312;;;9727:40;9757:9;9727:29;:40::i;:::-;9689:29;9703:5;9710:7;9716:1;9710:3;:7;:::i;9689:29::-;:78;;-1:-1:-1;;;;;9689:78:13;;;;;;;;;;;;;;;;9625:312;;;9798:5;9809:116;;;;;;;;9832:42;9861:12;9832:28;:42::i;:::-;9809:116;;;;;;9883:40;9913:9;9883:29;:40::i;:::-;-1:-1:-1;;;;;9809:116:13;;;;;;9798:128;;;;;;;-1:-1:-1;9798:128:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9625:312;9402:541;;9194:749;;;;;;:::o;9949:96::-;10007:7;10033:5;10037:1;10033;:5;:::i;8904:535:8:-;-1:-1:-1;;;;;8987:21:8;;8979:65;;;;-1:-1:-1;;;8979:65:8;;31902:2:37;8979:65:8;;;31884:21:37;31941:2;31921:18;;;31914:30;31980:33;31960:18;;;31953:61;32031:18;;8979:65:8;31700:355:37;8979:65:8;9055:49;9084:1;9088:7;9097:6;9055:20;:49::i;:::-;9131:6;9115:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9283:18:8;;;;;;:9;:18;;;;;;;;:28;;;;;;9336:37;1919:25:37;;;9336:37:8;;1892:18:37;9336:37:8;;;;;;;9384:48;9412:1;9416:7;9425:6;9384:19;:48::i;2847:192:28:-;2904:7;-1:-1:-1;;;;;2931:26:28;;;2923:78;;;;-1:-1:-1;;;2923:78:28;;32262:2:37;2923:78:28;;;32244:21:37;32301:2;32281:18;;;32274:30;32340:34;32320:18;;;32313:62;-1:-1:-1;;;32391:18:37;;;32384:37;32438:19;;2923:78:28;32060:403:37;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;222:258:37;294:1;304:113;318:6;315:1;312:13;304:113;;;394:11;;;388:18;375:11;;;368:39;340:2;333:10;304:113;;;435:6;432:1;429:13;426:48;;;-1:-1:-1;;470:1:37;452:16;;445:27;222:258::o;485:383::-;634:2;623:9;616:21;597:4;666:6;660:13;709:6;704:2;693:9;689:18;682:34;725:66;784:6;779:2;768:9;764:18;759:2;751:6;747:15;725:66;:::i;:::-;852:2;831:15;-1:-1:-1;;827:29:37;812:45;;;;859:2;808:54;;485:383;-1:-1:-1;;485:383:37:o;873:131::-;-1:-1:-1;;;;;948:31:37;;938:42;;928:70;;994:1;991;984:12;1009:315;1077:6;1085;1138:2;1126:9;1117:7;1113:23;1109:32;1106:52;;;1154:1;1151;1144:12;1106:52;1193:9;1180:23;1212:31;1237:5;1212:31;:::i;:::-;1262:5;1314:2;1299:18;;;;1286:32;;-1:-1:-1;;;1009:315:37:o;1521:247::-;1580:6;1633:2;1621:9;1612:7;1608:23;1604:32;1601:52;;;1649:1;1646;1639:12;1601:52;1688:9;1675:23;1707:31;1732:5;1707:31;:::i;1955:456::-;2032:6;2040;2048;2101:2;2089:9;2080:7;2076:23;2072:32;2069:52;;;2117:1;2114;2107:12;2069:52;2156:9;2143:23;2175:31;2200:5;2175:31;:::i;:::-;2225:5;-1:-1:-1;2282:2:37;2267:18;;2254:32;2295:33;2254:32;2295:33;:::i;:::-;1955:456;;2347:7;;-1:-1:-1;;;2401:2:37;2386:18;;;;2373:32;;1955:456::o;2787:180::-;2846:6;2899:2;2887:9;2878:7;2874:23;2870:32;2867:52;;;2915:1;2912;2905:12;2867:52;-1:-1:-1;2938:23:37;;2787:180;-1:-1:-1;2787:180:37:o;3382:127::-;3443:10;3438:3;3434:20;3431:1;3424:31;3474:4;3471:1;3464:15;3498:4;3495:1;3488:15;3514:253;3586:2;3580:9;3628:4;3616:17;;3663:18;3648:34;;3684:22;;;3645:62;3642:88;;;3710:18;;:::i;:::-;3746:2;3739:22;3514:253;:::o;3772:255::-;3844:2;3838:9;3886:6;3874:19;;3923:18;3908:34;;3944:22;;;3905:62;3902:88;;;3970:18;;:::i;4032:275::-;4103:2;4097:9;4168:2;4149:13;;-1:-1:-1;;4145:27:37;4133:40;;4203:18;4188:34;;4224:22;;;4185:62;4182:88;;;4250:18;;:::i;:::-;4286:2;4279:22;4032:275;;-1:-1:-1;4032:275:37:o;4312:187::-;4361:4;4394:18;4386:6;4383:30;4380:56;;;4416:18;;:::i;:::-;-1:-1:-1;4482:2:37;4461:15;-1:-1:-1;;4457:29:37;4488:4;4453:40;;4312:187::o;4504:464::-;4547:5;4600:3;4593:4;4585:6;4581:17;4577:27;4567:55;;4618:1;4615;4608:12;4567:55;4654:6;4641:20;4685:49;4701:32;4730:2;4701:32;:::i;:::-;4685:49;:::i;:::-;4759:2;4750:7;4743:19;4805:3;4798:4;4793:2;4785:6;4781:15;4777:26;4774:35;4771:55;;;4822:1;4819;4812:12;4771:55;4887:2;4880:4;4872:6;4868:17;4861:4;4852:7;4848:18;4835:55;4935:1;4910:16;;;4928:4;4906:27;4899:38;;;;4914:7;4504:464;-1:-1:-1;;;4504:464:37:o;4973:820::-;5079:6;5087;5095;5103;5156:3;5144:9;5135:7;5131:23;5127:33;5124:53;;;5173:1;5170;5163:12;5124:53;5213:9;5200:23;5242:18;5283:2;5275:6;5272:14;5269:34;;;5299:1;5296;5289:12;5269:34;5322:50;5364:7;5355:6;5344:9;5340:22;5322:50;:::i;:::-;5312:60;;5425:2;5414:9;5410:18;5397:32;5381:48;;5454:2;5444:8;5441:16;5438:36;;;5470:1;5467;5460:12;5438:36;;5493:52;5537:7;5526:8;5515:9;5511:24;5493:52;:::i;:::-;5483:62;;;5595:2;5584:9;5580:18;5567:32;5608:31;5633:5;5608:31;:::i;:::-;5658:5;-1:-1:-1;5715:2:37;5700:18;;5687:32;5728:33;5687:32;5728:33;:::i;:::-;4973:820;;;;-1:-1:-1;4973:820:37;;-1:-1:-1;;4973:820:37:o;5798:388::-;5866:6;5874;5927:2;5915:9;5906:7;5902:23;5898:32;5895:52;;;5943:1;5940;5933:12;5895:52;5982:9;5969:23;6001:31;6026:5;6001:31;:::i;:::-;6051:5;-1:-1:-1;6108:2:37;6093:18;;6080:32;6121:33;6080:32;6121:33;:::i;:::-;6173:7;6163:17;;;5798:388;;;;;:::o;6191:156::-;6257:20;;6317:4;6306:16;;6296:27;;6286:55;;6337:1;6334;6327:12;6286:55;6191:156;;;:::o;6352:592::-;6454:6;6462;6470;6478;6486;6494;6547:3;6535:9;6526:7;6522:23;6518:33;6515:53;;;6564:1;6561;6554:12;6515:53;6603:9;6590:23;6622:31;6647:5;6622:31;:::i;:::-;6672:5;-1:-1:-1;6724:2:37;6709:18;;6696:32;;-1:-1:-1;6775:2:37;6760:18;;6747:32;;-1:-1:-1;6798:36:37;6830:2;6815:18;;6798:36;:::i;:::-;6788:46;;6881:3;6870:9;6866:19;6853:33;6843:43;;6933:3;6922:9;6918:19;6905:33;6895:43;;6352:592;;;;;;;;:::o;6949:734::-;7060:6;7068;7076;7084;7092;7100;7108;7161:3;7149:9;7140:7;7136:23;7132:33;7129:53;;;7178:1;7175;7168:12;7129:53;7217:9;7204:23;7236:31;7261:5;7236:31;:::i;:::-;7286:5;-1:-1:-1;7343:2:37;7328:18;;7315:32;7356:33;7315:32;7356:33;:::i;:::-;7408:7;-1:-1:-1;7462:2:37;7447:18;;7434:32;;-1:-1:-1;7513:2:37;7498:18;;7485:32;;-1:-1:-1;7536:37:37;7568:3;7553:19;;7536:37;:::i;:::-;7526:47;;7620:3;7609:9;7605:19;7592:33;7582:43;;7672:3;7661:9;7657:19;7644:33;7634:43;;6949:734;;;;;;;;;;:::o;7688:419::-;7755:6;7763;7816:2;7804:9;7795:7;7791:23;7787:32;7784:52;;;7832:1;7829;7822:12;7784:52;7871:9;7858:23;7890:31;7915:5;7890:31;:::i;:::-;7940:5;-1:-1:-1;7997:2:37;7982:18;;7969:32;8045:10;8032:24;;8020:37;;8010:65;;8071:1;8068;8061:12;8463:380;8542:1;8538:12;;;;8585;;;8606:61;;8660:4;8652:6;8648:17;8638:27;;8606:61;8713:2;8705:6;8702:14;8682:18;8679:38;8676:161;;;8759:10;8754:3;8750:20;8747:1;8740:31;8794:4;8791:1;8784:15;8822:4;8819:1;8812:15;8848:165;8926:13;;8979:8;8968:20;;8958:31;;8948:59;;9003:1;9000;8993:12;9018:206;9087:6;9140:2;9128:9;9119:7;9115:23;9111:32;9108:52;;;9156:1;9153;9146:12;9108:52;9179:39;9208:9;9179:39;:::i;9229:127::-;9290:10;9285:3;9281:20;9278:1;9271:31;9321:4;9318:1;9311:15;9345:4;9342:1;9335:15;9361:168;9401:7;9467:1;9463;9459:6;9455:14;9452:1;9449:21;9444:1;9437:9;9430:17;9426:45;9423:71;;;9474:18;;:::i;:::-;-1:-1:-1;9514:9:37;;9361:168::o;9534:125::-;9574:4;9602:1;9599;9596:8;9593:34;;;9607:18;;:::i;:::-;-1:-1:-1;9644:9:37;;9534:125::o;9664:128::-;9704:3;9735:1;9731:6;9728:1;9725:13;9722:39;;;9741:18;;:::i;:::-;-1:-1:-1;9777:9:37;;9664:128::o;10572:422::-;10661:1;10704:5;10661:1;10718:270;10739:7;10729:8;10726:21;10718:270;;;10798:4;10794:1;10790:6;10786:17;10780:4;10777:27;10774:53;;;10807:18;;:::i;:::-;10857:7;10847:8;10843:22;10840:55;;;10877:16;;;;10840:55;10956:22;;;;10916:15;;;;10718:270;;;10722:3;10572:422;;;;;:::o;10999:806::-;11048:5;11078:8;11068:80;;-1:-1:-1;11119:1:37;11133:5;;11068:80;11167:4;11157:76;;-1:-1:-1;11204:1:37;11218:5;;11157:76;11249:4;11267:1;11262:59;;;;11335:1;11330:130;;;;11242:218;;11262:59;11292:1;11283:10;;11306:5;;;11330:130;11367:3;11357:8;11354:17;11351:43;;;11374:18;;:::i;:::-;-1:-1:-1;;11430:1:37;11416:16;;11445:5;;11242:218;;11544:2;11534:8;11531:16;11525:3;11519:4;11516:13;11512:36;11506:2;11496:8;11493:16;11488:2;11482:4;11479:12;11475:35;11472:77;11469:159;;;-1:-1:-1;11581:19:37;;;11613:5;;11469:159;11660:34;11685:8;11679:4;11660:34;:::i;:::-;11730:6;11726:1;11722:6;11718:19;11709:7;11706:32;11703:58;;;11741:18;;:::i;:::-;11779:20;;10999:806;-1:-1:-1;;;10999:806:37:o;11810:140::-;11868:5;11897:47;11938:4;11928:8;11924:19;11918:4;11897:47;:::i;11955:127::-;12016:10;12011:3;12007:20;12004:1;11997:31;12047:4;12044:1;12037:15;12071:4;12068:1;12061:15;12087:217;12127:1;12153;12143:132;;12197:10;12192:3;12188:20;12185:1;12178:31;12232:4;12229:1;12222:15;12260:4;12257:1;12250:15;12143:132;-1:-1:-1;12289:9:37;;12087:217::o;12508:127::-;12569:10;12564:3;12560:20;12557:1;12550:31;12600:4;12597:1;12590:15;12624:4;12621:1;12614:15;13046:138;13125:13;;13147:31;13125:13;13147:31;:::i;13189:430::-;13243:5;13296:3;13289:4;13281:6;13277:17;13273:27;13263:55;;13314:1;13311;13304:12;13263:55;13343:6;13337:13;13374:49;13390:32;13419:2;13390:32;:::i;13374:49::-;13448:2;13439:7;13432:19;13494:3;13487:4;13482:2;13474:6;13470:15;13466:26;13463:35;13460:55;;;13511:1;13508;13501:12;13460:55;13524:64;13585:2;13578:4;13569:7;13565:18;13558:4;13550:6;13546:17;13524:64;:::i;:::-;13606:7;13189:430;-1:-1:-1;;;;13189:430:37:o;13624:1137::-;13695:5;13743:4;13731:9;13726:3;13722:19;13718:30;13715:50;;;13761:1;13758;13751:12;13715:50;13783:22;;:::i;:::-;13774:31;;13834:9;13828:16;13863:18;13904:2;13896:6;13893:14;13890:34;;;13920:1;13917;13910:12;13890:34;13947:57;14000:3;13991:6;13980:9;13976:22;13947:57;:::i;:::-;13940:5;13933:72;14051:2;14040:9;14036:18;14030:25;14014:41;;14080:2;14070:8;14067:16;14064:36;;;14096:1;14093;14086:12;14064:36;14132:59;14187:3;14176:8;14165:9;14161:24;14132:59;:::i;:::-;14127:2;14120:5;14116:14;14109:83;14238:2;14227:9;14223:18;14217:25;14201:41;;14267:2;14257:8;14254:16;14251:36;;;14283:1;14280;14273:12;14251:36;14319:59;14374:3;14363:8;14352:9;14348:24;14319:59;:::i;:::-;14314:2;14307:5;14303:14;14296:83;14425:2;14414:9;14410:18;14404:25;14388:41;;14454:2;14444:8;14441:16;14438:36;;;14470:1;14467;14460:12;14438:36;14506:59;14561:3;14550:8;14539:9;14535:24;14506:59;:::i;:::-;14501:2;14494:5;14490:14;14483:83;14612:3;14601:9;14597:19;14591:26;14575:42;;14642:2;14632:8;14629:16;14626:36;;;14658:1;14655;14648:12;14626:36;;14695:59;14750:3;14739:8;14728:9;14724:24;14695:59;:::i;:::-;14689:3;14682:5;14678:15;14671:84;;13624:1137;;;;:::o;14766:182::-;14825:4;14858:18;14850:6;14847:30;14844:56;;;14880:18;;:::i;:::-;-1:-1:-1;14925:1:37;14921:14;14937:4;14917:25;;14766:182::o;14953:895::-;15017:5;15070:3;15063:4;15055:6;15051:17;15047:27;15037:55;;15088:1;15085;15078:12;15037:55;15117:6;15111:13;15143:4;15167:59;15183:42;15222:2;15183:42;:::i;15167:59::-;15260:15;;;15346:1;15342:10;;;;15330:23;;15326:32;;;15291:12;;;;15370:15;;;15367:35;;;15398:1;15395;15388:12;15367:35;15434:2;15426:6;15422:15;15446:373;15462:6;15457:3;15454:15;15446:373;;;15541:3;15535:10;15577:18;15564:11;15561:35;15558:125;;;15637:1;15666:2;15662;15655:14;15558:125;15708:68;15772:3;15767:2;15753:11;15745:6;15741:24;15737:33;15708:68;:::i;:::-;15696:81;;-1:-1:-1;15797:12:37;;;;15479;;15446:373;;;-1:-1:-1;15837:5:37;14953:895;-1:-1:-1;;;;;;14953:895:37:o;15853:733::-;15918:5;15971:3;15964:4;15956:6;15952:17;15948:27;15938:55;;15989:1;15986;15979:12;15938:55;16018:6;16012:13;16044:4;16068:59;16084:42;16123:2;16084:42;:::i;16068:59::-;16161:15;;;16247:1;16243:10;;;;16231:23;;16227:32;;;16192:12;;;;16271:15;;;16268:35;;;16299:1;16296;16289:12;16268:35;16335:2;16327:6;16323:15;16347:210;16363:6;16358:3;16355:15;16347:210;;;16436:3;16430:10;16453:31;16478:5;16453:31;:::i;:::-;16497:18;;16535:12;;;;16380;;16347:210;;16591:3228;16686:6;16739:2;16727:9;16718:7;16714:23;16710:32;16707:52;;;16755:1;16752;16745:12;16707:52;16788:9;16782:16;16817:18;16858:2;16850:6;16847:14;16844:34;;;16874:1;16871;16864:12;16844:34;16897:22;;;;16953:6;16935:16;;;16931:29;16928:49;;;16973:1;16970;16963:12;16928:49;16999:22;;:::i;:::-;17044:32;17073:2;17044:32;:::i;:::-;17037:5;17030:47;17109:41;17146:2;17142;17138:11;17109:41;:::i;:::-;17104:2;17097:5;17093:14;17086:65;17197:2;17193;17189:11;17183:18;17178:2;17171:5;17167:14;17160:42;17234;17272:2;17268;17264:11;17234:42;:::i;:::-;17229:2;17222:5;17218:14;17211:66;17316:3;17312:2;17308:12;17302:19;17346:2;17336:8;17333:16;17330:36;;;17362:1;17359;17352:12;17330:36;17399:56;17447:7;17436:8;17432:2;17428:17;17399:56;:::i;:::-;17393:3;17386:5;17382:15;17375:81;;17495:3;17491:2;17487:12;17481:19;17525:2;17515:8;17512:16;17509:36;;;17541:1;17538;17531:12;17509:36;17578:56;17626:7;17615:8;17611:2;17607:17;17578:56;:::i;:::-;17572:3;17565:5;17561:15;17554:81;;17668:43;17706:3;17702:2;17698:12;17668:43;:::i;:::-;17662:3;17655:5;17651:15;17644:68;17751:3;17747:2;17743:12;17737:19;17781:2;17771:8;17768:16;17765:36;;;17797:1;17794;17787:12;17765:36;17834:56;17882:7;17871:8;17867:2;17863:17;17834:56;:::i;:::-;17828:3;17821:5;17817:15;17810:81;;17910:3;17952:2;17948;17944:11;17938:18;17981:2;17971:8;17968:16;17965:36;;;17997:1;17994;17987:12;17965:36;18033:56;18081:7;18070:8;18066:2;18062:17;18033:56;:::i;:::-;18028:2;18021:5;18017:14;18010:80;;;18109:3;18151:2;18147;18143:11;18137:18;18180:2;18170:8;18167:16;18164:36;;;18196:1;18193;18186:12;18164:36;18232:56;18280:7;18269:8;18265:2;18261:17;18232:56;:::i;:::-;18227:2;18220:5;18216:14;18209:80;;;18308:3;18350:2;18346;18342:11;18336:18;18379:2;18369:8;18366:16;18363:36;;;18395:1;18392;18385:12;18363:36;18431:70;18493:7;18482:8;18478:2;18474:17;18431:70;:::i;:::-;18426:2;18419:5;18415:14;18408:94;;;18521:3;18563:2;18559;18555:11;18549:18;18592:2;18582:8;18579:16;18576:36;;;18608:1;18605;18598:12;18576:36;18644:66;18702:7;18691:8;18687:2;18683:17;18644:66;:::i;:::-;18639:2;18632:5;18628:14;18621:90;;;18730:3;18772:2;18768;18764:11;18758:18;18801:2;18791:8;18788:16;18785:36;;;18817:1;18814;18807:12;18785:36;18853:66;18911:7;18900:8;18896:2;18892:17;18853:66;:::i;:::-;18848:2;18841:5;18837:14;18830:90;;;18939:3;18981:2;18977;18973:11;18967:18;19010:2;19000:8;18997:16;18994:36;;;19026:1;19023;19016:12;18994:36;19062:56;19110:7;19099:8;19095:2;19091:17;19062:56;:::i;:::-;19057:2;19050:5;19046:14;19039:80;;;19138:3;19187:2;19183;19179:11;19173:18;19168:2;19161:5;19157:14;19150:42;;19212:3;19248:43;19286:3;19282:2;19278:12;19248:43;:::i;:::-;19231:15;;;19224:68;19312:3;19347:12;;;19341:19;19372:17;;;19369:37;;;19402:1;19399;19392:12;19369:37;19439:57;19488:7;19476:9;19472:2;19468:18;19439:57;:::i;:::-;19433:3;19426:5;19422:15;19415:82;;;19517:3;19560;19556:2;19552:12;19546:19;19591:2;19580:9;19577:17;19574:37;;;19607:1;19604;19597:12;19574:37;19644:68;19704:7;19692:9;19688:2;19684:18;19644:68;:::i;:::-;19627:15;;;19620:93;;;;-1:-1:-1;19733:3:37;19775:12;;;19769:19;19752:15;;;19745:44;;;;-1:-1:-1;19631:5:37;16591:3228;-1:-1:-1;;;16591:3228:37:o;26515:407::-;26717:2;26699:21;;;26756:2;26736:18;;;26729:30;26795:34;26790:2;26775:18;;26768:62;-1:-1:-1;;;26861:2:37;26846:18;;26839:41;26912:3;26897:19;;26515:407::o;29236:127::-;29297:10;29292:3;29288:20;29285:1;29278:31;29328:4;29325:1;29318:15;29352:4;29349:1;29342:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","_admin()":"01bc45c9","_claimed(address,address)":"94527729","_paramAddr()":"f4a290f7","_remainClaimSupply()":"c3678f35","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","calculateAmountClaim(address,uint256)":"32974838","changeAdmin(address)":"8f283970","changeParamAddress(address)":"16a5041f","checkpoints(address,uint32)":"f1127ed8","claim(address,uint256)":"aad3ec96","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getCurrentVotes(address)":"b4b5ea57","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getPriorVotes(address,uint256)":"782d6fe1","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","initialize(string,string,address,address)":"8f15b414","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"genNFT\",\"type\":\"address\"}],\"name\":\"NotSupportProjectIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_paramAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_remainClaimSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"genNFTAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintPrice\",\"type\":\"uint256\"}],\"name\":\"calculateAmountClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdm\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"changeParamAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"generativeProjectAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paramAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getCurrentVotes(address)\":{\"details\":\"Comp version of the {getVotes} accessor, with `uint96` return type.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Comp version of the {getPastVotes} accessor, with `uint96` return type.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/erc20/GENToken.sol\":\"GENToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626\",\"dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x5bba367c6c5b9bc3ffb2a87f6aa7437955f0697ab8fcd8e38d2a4985be6469fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5cebfffc457ba7de28368a4e36d0543d0ba6247ab4deff8cc6e04654aacf089\",\"dweb:/ipfs/Qmc5rymHyZeMhnJyCf4egyX2nSJwPzFYAgUtcWea4wrQrC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesCompUpgradeable.sol\":{\"keccak256\":\"0x7597cac938c3b70d6f513e0c9ab1e4ab0bfeeef46f181f80309744d0705ecd80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfa9a838560dbfc44ca52cf03cc1ffd1e40ba5b7e8032a560572d680a1449566\",\"dweb:/ipfs/QmdQ7AfXfLvi4QCQZqTAjHCgjU69XAmMsg3rB5bfA98U21\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x8a6e600bfbdd5a549f0e6f1411ed4153a2a13152d02f245854bc9b42da514581\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e205acf7a1580ac0a319862d08b326d5cc70a24a55e2eec3d85e17aa25ad5798\",\"dweb:/ipfs/QmQs9rpawoUQXB9aCZvDg9u8FgTh4PvWCzv5igd4Sr8HvH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/presets/ERC20PresetMinterPauserUpgradeable.sol\":{\"keccak256\":\"0x68f6d4e1626a003cac2d4b0a91b1c78788b592a02e39432854b1d66ca3991455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e550ef6832c1293b071422f6bc20ef2891bf2e8235ef66b6409c12c18d2d6ef5\",\"dweb:/ipfs/QmcwMFSt8oUa5GV7Mz4TzwcRCkXiXre1qic8RkjWjbS89p\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x4807db844a856813048b5af81a764fdd25a0ae8876a3132593e8d21ddc6b607c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca2fce75b1b20047a41f6f67d2d1be3d24308bf34668a22c2f971689e319a70\",\"dweb:/ipfs/QmQ8hxhdkDmwK9CBURbV2eaEeFTBYb3bB3ByWw1GmjvEWo\"]},\"contracts/erc20/GENToken.sol\":{\"keccak256\":\"0x6597db373c79cbc50be76570c9e633da4ff0e7bdf0ada75398234ff01099e8e2\",\"urls\":[\"bzz-raw://78ea22bbc7886d0725f0d40e23b0b6215c3b47fcf38ab98e58e2b069d32ca008\",\"dweb:/ipfs/QmP76WcW11qpZ9HUxSrUWYZtpJCVX4f8RMPjjf9dDA1efR\"]},\"contracts/interfaces/IBaseERC721OwnerSeed.sol\":{\"keccak256\":\"0x9280e0d0402529e74d76080ab413044b6f236edf0a7949a81ab651eff508ad55\",\"urls\":[\"bzz-raw://6589dafa49b0f9f7c257c52d5817c481ad7ee5ef3ecea443c68b2da9d79f2c56\",\"dweb:/ipfs/Qma74GAvYkbhQQXV2aHTiRD8FCk4jcYViAJ3uPUtAF3ips\"]},\"contracts/interfaces/IGENToken.sol\":{\"keccak256\":\"0xc43e2bf4eb640d85a9b2d8f444b4821a3dd0902e7aecb1f9085048bfd869d02f\",\"urls\":[\"bzz-raw://96d1780393c9c04a0bb483f67c27d072032e7e2ec7528d703b8cc100bbd84187\",\"dweb:/ipfs/QmQGcLmJDSQBfrqBuQo22W2FU4DDtdzNmjbPDwtQ4scR6E\"]},\"contracts/interfaces/IGenerativeNFT.sol\":{\"keccak256\":\"0xf1f27d4b9b9ac74539d17b322e2b6ff177ea0c5cc2b2c52bfd57339a062cf354\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328ba12be0c5905c19da99e21a00f471e82f2cc1026f5aef8b4553307612e0be\",\"dweb:/ipfs/QmeyEEBKEJT4iKzMypjpsDpo8Zee9HZEdWoKWZk8tMVX4X\"]},\"contracts/interfaces/IGenerativeProject.sol\":{\"keccak256\":\"0x72860043ea73e513741715f50d4e67f48737475cf86f7b44114a0d2d5f237d22\",\"urls\":[\"bzz-raw://9feaa284e0ca8fc6e83fb4dd816256abbc1dc847402bd19cc490891aad1339d2\",\"dweb:/ipfs/Qmb4PyRctxwni3ubWARhnH5fsfxxEBDAxqT7NFnHCMRqEp\"]},\"contracts/libs/helpers/Errors.sol\":{\"keccak256\":\"0xa1b320b53ca3c39089f901d1670d902e1191c7b6ac3c2c0c22678dd35c1d487f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ec968ebe161a138e6041026f13db727cb4f9e8ea178d52580b48ff92f1abf8fc\",\"dweb:/ipfs/QmXmjcC4xvCLkf4mUcFaYrWDkjCtBd3UtQqHHqe25Sg3zn\"]},\"contracts/libs/structs/NFTProject.sol\":{\"keccak256\":\"0x63525514527536062cadf5faf2913f4fc2862691ba4b1a5474e30baff68b54ef\",\"urls\":[\"bzz-raw://6badddd7bc4f2c0bee86b9f87cfa2033bf950660d3e00438a91b9c26c0b2d9f8\",\"dweb:/ipfs/QmcYyHHCEnJevQNRFbqqwoRnQrHA4kzxm5o8P5N1JbJR7S\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":795,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":798,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3564,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1103,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1109,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1111,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1113,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1115,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1695,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":978,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_paused","offset":0,"slot":"101","type":"t_bool"},{"astId":1083,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":1897,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":1837,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"201","type":"t_array(t_uint256)50_storage"},{"astId":589,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_owner","offset":0,"slot":"251","type":"t_address"},{"astId":709,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"252","type":"t_array(t_uint256)49_storage"},{"astId":4184,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_HASHED_NAME","offset":0,"slot":"301","type":"t_bytes32"},{"astId":4186,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_HASHED_VERSION","offset":0,"slot":"302","type":"t_bytes32"},{"astId":4324,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"303","type":"t_array(t_uint256)50_storage"},{"astId":2742,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_nonces","offset":0,"slot":"353","type":"t_mapping(t_address,t_struct(Counter)3571_storage)"},{"astId":2750,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"354","type":"t_bytes32"},{"astId":2906,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"355","type":"t_array(t_uint256)49_storage"},{"astId":2015,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_delegates","offset":0,"slot":"404","type":"t_mapping(t_address,t_address)"},{"astId":2021,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_checkpoints","offset":0,"slot":"405","type":"t_mapping(t_address,t_array(t_struct(Checkpoint)2006_storage)dyn_storage)"},{"astId":2025,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_totalSupplyCheckpoints","offset":0,"slot":"406","type":"t_array(t_struct(Checkpoint)2006_storage)dyn_storage"},{"astId":2690,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"407","type":"t_array(t_uint256)47_storage"},{"astId":1973,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"__gap","offset":0,"slot":"454","type":"t_array(t_uint256)50_storage"},{"astId":7425,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_admin","offset":0,"slot":"504","type":"t_address"},{"astId":7427,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_paramAddr","offset":0,"slot":"505","type":"t_address"},{"astId":7433,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_claimed","offset":0,"slot":"506","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":7435,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_remainClaimSupply","offset":0,"slot":"507","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint)2006_storage)dyn_storage":{"base":"t_struct(Checkpoint)2006_storage","encoding":"dynamic_array","label":"struct ERC20VotesUpgradeable.Checkpoint[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_struct(Checkpoint)2006_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])","numberOfBytes":"32","value":"t_array(t_struct(Checkpoint)2006_storage)dyn_storage"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)3571_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)3571_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint)2006_storage":{"encoding":"inplace","label":"struct ERC20VotesUpgradeable.Checkpoint","members":[{"astId":2003,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"fromBlock","offset":0,"slot":"0","type":"t_uint32"},{"astId":2005,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"votes","offset":4,"slot":"0","type":"t_uint224"}],"numberOfBytes":"32"},"t_struct(Counter)3571_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":3570,"contract":"contracts/erc20/GENToken.sol:GENToken","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/interfaces/IBaseERC721OwnerSeed.sol":{"IBaseERC721OwnerSeed":{"abi":[{"inputs":[],"name":"getStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStatus()":"4e69d560"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaseERC721OwnerSeed.sol\":\"IBaseERC721OwnerSeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaseERC721OwnerSeed.sol\":{\"keccak256\":\"0x9280e0d0402529e74d76080ab413044b6f236edf0a7949a81ab651eff508ad55\",\"urls\":[\"bzz-raw://6589dafa49b0f9f7c257c52d5817c481ad7ee5ef3ecea443c68b2da9d79f2c56\",\"dweb:/ipfs/Qma74GAvYkbhQQXV2aHTiRD8FCk4jcYViAJ3uPUtAF3ips\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IGENToken.sol":{"IGENToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"genNFT","type":"address"}],"name":"NotSupportProjectIndex","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"genNFT\",\"type\":\"address\"}],\"name\":\"NotSupportProjectIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGENToken.sol\":\"IGENToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xe8e2d2f70db1913260634f710cc057d669b06eccf4dca27e18b79c3bbb101da6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcc6f106f0058232420987d601f34bf004743c30806b63650a64399317c56268\",\"dweb:/ipfs/QmNYqmWHMk7ZHLkuYLPotB8bE5TVttvGL513KLGT8ayNoM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"contracts/interfaces/IGENToken.sol\":{\"keccak256\":\"0xc43e2bf4eb640d85a9b2d8f444b4821a3dd0902e7aecb1f9085048bfd869d02f\",\"urls\":[\"bzz-raw://96d1780393c9c04a0bb483f67c27d072032e7e2ec7528d703b8cc100bbd84187\",\"dweb:/ipfs/QmQGcLmJDSQBfrqBuQo22W2FU4DDtdzNmjbPDwtQ4scR6E\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IGenerativeNFT.sol":{"IGenerativeNFT":{"abi":[{"inputs":[],"name":"getStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"_projectAddr","type":"address"},{"internalType":"uint256","name":"_projectId","type":"uint256"},{"internalType":"uint24","name":"_maxSupply","type":"uint24"},{"internalType":"uint24","name":"_limit","type":"uint24"},{"internalType":"uint24","name":"_index","type":"uint24"},{"internalType":"uint24","name":"_indexReserve","type":"uint24"},{"internalType":"string","name":"_creator","type":"string"},{"internalType":"uint256","name":"_mintPrice","type":"uint256"},{"internalType":"address","name":"_mintPriceAddr","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"components":[{"internalType":"uint256","name":"_initBlockTime","type":"uint256"},{"internalType":"uint256","name":"_openingTime","type":"uint256"}],"internalType":"struct NFTProject.ProjectMintingSchedule","name":"_mintingSchedule","type":"tuple"},{"internalType":"address[]","name":"_reserves","type":"address[]"},{"internalType":"uint256","name":"_royalty","type":"uint256"}],"internalType":"struct NFTProject.ProjectMinting","name":"project","type":"tuple"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"address","name":"paramsAddr","type":"address"},{"internalType":"address","name":"randomizer","type":"address"},{"internalType":"address","name":"projectDataContextAddr","type":"address"},{"internalType":"bool","name":"disable","type":"bool"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"projectIndex","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"enable","type":"bool"}],"name":"setStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"name":"updatePrice","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getStatus()":"4e69d560","init((address,uint256,uint24,uint24,uint24,uint24,string,uint256,address,string,(uint256,uint256),address[],uint256),address,address,address,address,bool)":"fc237452","projectIndex()":"63184726","setStatus(bool)":"5c40f6f4","updatePrice(uint256)":"8d6cc56d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_projectAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"_maxSupply\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"_limit\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"_index\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"_indexReserve\",\"type\":\"uint24\"},{\"internalType\":\"string\",\"name\":\"_creator\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_mintPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_mintPriceAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"_initBlockTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_openingTime\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTProject.ProjectMintingSchedule\",\"name\":\"_mintingSchedule\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_reserves\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_royalty\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTProject.ProjectMinting\",\"name\":\"project\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paramsAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"randomizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"projectDataContextAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"disable\",\"type\":\"bool\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectIndex\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGenerativeNFT.sol\":\"IGenerativeNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaseERC721OwnerSeed.sol\":{\"keccak256\":\"0x9280e0d0402529e74d76080ab413044b6f236edf0a7949a81ab651eff508ad55\",\"urls\":[\"bzz-raw://6589dafa49b0f9f7c257c52d5817c481ad7ee5ef3ecea443c68b2da9d79f2c56\",\"dweb:/ipfs/Qma74GAvYkbhQQXV2aHTiRD8FCk4jcYViAJ3uPUtAF3ips\"]},\"contracts/interfaces/IGenerativeNFT.sol\":{\"keccak256\":\"0xf1f27d4b9b9ac74539d17b322e2b6ff177ea0c5cc2b2c52bfd57339a062cf354\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328ba12be0c5905c19da99e21a00f471e82f2cc1026f5aef8b4553307612e0be\",\"dweb:/ipfs/QmeyEEBKEJT4iKzMypjpsDpo8Zee9HZEdWoKWZk8tMVX4X\"]},\"contracts/libs/structs/NFTProject.sol\":{\"keccak256\":\"0x63525514527536062cadf5faf2913f4fc2862691ba4b1a5474e30baff68b54ef\",\"urls\":[\"bzz-raw://6badddd7bc4f2c0bee86b9f87cfa2033bf950660d3e00438a91b9c26c0b2d9f8\",\"dweb:/ipfs/QmcYyHHCEnJevQNRFbqqwoRnQrHA4kzxm5o8P5N1JbJR7S\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IGenerativeProject.sol":{"IGenerativeProject":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"projectId","type":"uint256"}],"name":"completeProject","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_projectId","type":"uint256"}],"name":"projectDetails","outputs":[{"components":[{"internalType":"uint24","name":"_maxSupply","type":"uint24"},{"internalType":"uint24","name":"_limit","type":"uint24"},{"internalType":"uint256","name":"_mintPrice","type":"uint256"},{"internalType":"address","name":"_mintPriceAddr","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_creator","type":"string"},{"internalType":"address","name":"_creatorAddr","type":"address"},{"internalType":"string","name":"_license","type":"string"},{"internalType":"string","name":"_desc","type":"string"},{"internalType":"string","name":"_image","type":"string"},{"components":[{"internalType":"string","name":"_web","type":"string"},{"internalType":"string","name":"_twitter","type":"string"},{"internalType":"string","name":"_discord","type":"string"},{"internalType":"string","name":"_medium","type":"string"},{"internalType":"string","name":"_instagram","type":"string"}],"internalType":"struct NFTProject.ProjectSocial","name":"_social","type":"tuple"},{"internalType":"string[]","name":"_scriptType","type":"string[]"},{"internalType":"string[]","name":"_scripts","type":"string[]"},{"internalType":"string","name":"_styles","type":"string"},{"internalType":"uint256","name":"_completeTime","type":"uint256"},{"internalType":"address","name":"_genNFTAddr","type":"address"},{"internalType":"string","name":"_itemDesc","type":"string"},{"internalType":"address[]","name":"_reserves","type":"address[]"},{"internalType":"uint256","name":"_royalty","type":"uint256"}],"internalType":"struct NFTProject.Project","name":"project","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","completeProject(uint256)":"2245f152","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","projectDetails(uint256)":"8dd91a56","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"completeProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"projectDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint24\",\"name\":\"_maxSupply\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"_limit\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"_mintPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_mintPriceAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_creator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creatorAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_license\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_desc\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"_web\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_discord\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_medium\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_instagram\",\"type\":\"string\"}],\"internalType\":\"struct NFTProject.ProjectSocial\",\"name\":\"_social\",\"type\":\"tuple\"},{\"internalType\":\"string[]\",\"name\":\"_scriptType\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_scripts\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"_styles\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_completeTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_genNFTAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_itemDesc\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_reserves\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_royalty\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTProject.Project\",\"name\":\"project\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGenerativeProject.sol\":\"IGenerativeProject\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"contracts/interfaces/IGenerativeProject.sol\":{\"keccak256\":\"0x72860043ea73e513741715f50d4e67f48737475cf86f7b44114a0d2d5f237d22\",\"urls\":[\"bzz-raw://9feaa284e0ca8fc6e83fb4dd816256abbc1dc847402bd19cc490891aad1339d2\",\"dweb:/ipfs/Qmb4PyRctxwni3ubWARhnH5fsfxxEBDAxqT7NFnHCMRqEp\"]},\"contracts/libs/structs/NFTProject.sol\":{\"keccak256\":\"0x63525514527536062cadf5faf2913f4fc2862691ba4b1a5474e30baff68b54ef\",\"urls\":[\"bzz-raw://6badddd7bc4f2c0bee86b9f87cfa2033bf950660d3e00438a91b9c26c0b2d9f8\",\"dweb:/ipfs/QmcYyHHCEnJevQNRFbqqwoRnQrHA4kzxm5o8P5N1JbJR7S\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/libs/helpers/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"ERC20_BALANCE_INVALID","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERC20_NOT_APPROVED","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERC_20_NOT_ALLOW","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERC_721_NOT_APPROVED","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FORBIDDEN_TRANSFER_PROJECT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INVALID_ERC721_OWNER","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INV_ADD","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INV_FEE_PROJECT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INV_PARAMS","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INV_PROJECT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INV_TOKEN","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MISSING_NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OFFERING_CLOSED","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONLY_ADMIN_ALLOWED","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONLY_CREATOR","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OPENING_SCHEDULE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REACH_MAX","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SUCCESS","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_HAS_SEED","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOO_HIGH","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSFER_FAIL","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VALUE_INVALID","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ZERO_ADDR","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ZERO_DURATION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ZERO_PRICE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ZERO_SEED","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6105ae61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101985760003560e01c806372670508116100e8578063c059011b116100a1578063e81216b51161007b578063e81216b51461049b578063ec94a577146104bd578063ef494c25146104df578063feff83c31461050157600080fd5b8063c059011b14610437578063d0a6d1a614610459578063d5bec6851461047957600080fd5b8063726705081461036b57806386f8148f1461038d5780638cb739c6146103af57806390131fab146103d15780639bf3cfe3146103f3578063b746287b1461041557600080fd5b806338abf0c9116101555780635560f1f81161012f5780635560f1f8146102e5578063585c081c146103075780636373108014610329578063652b7f311461034957600080fd5b806338abf0c91461027f5780633a13248f146102a1578063552e387c146102c357600080fd5b8063074750841461019d578063143c1c36146101d55780631557ff24146101f757806323312297146102195780632b72ddbd1461023b57806335a02d731461025d575b600080fd5b6101bf6040518060400160405280600381526020016219981b60e91b81525081565b6040516101cc9190610523565b60405180910390f35b6101bf6040518060400160405280600381526020016219181b60e91b81525081565b6101bf6040518060400160405280600381526020016206660760eb1b81525081565b6101bf6040518060400160405280600381526020016232303360e81b81525081565b6101bf6040518060400160405280600381526020016219981960e91b81525081565b6101bf6040518060400160405280600381526020016233303560e81b81525081565b6101bf6040518060400160405280600381526020016219181960e91b81525081565b6101bf6040518060400160405280600381526020016206460760eb1b81525081565b6101bf6040518060400160405280600381526020016231303160e81b81525081565b6101bf6040518060400160405280600381526020016233303360e81b81525081565b6101bf6040518060400160405280600381526020016232303560e81b81525081565b610331600081565b6040516001600160a01b0390911681526020016101cc565b6101bf6040518060400160405280600381526020016232303160e81b81525081565b6101bf6040518060400160405280600381526020016203130360ec1b81525081565b6101bf6040518060400160405280600381526020016203230360ec1b81525081565b6101bf6040518060400160405280600381526020016232303960e81b81525081565b6101bf6040518060400160405280600381526020016203330360ec1b81525081565b6101bf6040518060400160405280600381526020016232303760e81b81525081565b6101bf6040518060400160405280600381526020016218981960e91b81525081565b6101bf6040518060400160405280600381526020016233303160e81b81525081565b6101bf604051806040016040528060018152602001600360fc1b81525081565b6101bf6040518060400160405280600381526020016233303760e81b81525081565b6101bf604051806040016040528060038152602001620ccc0d60ea1b81525081565b6101bf6040518060400160405280600381526020016233303960e81b81525081565b6101bf6040518060400160405280600381526020016203231360ec1b81525081565b6101bf604051806040016040528060038152602001620c8c0d60ea1b81525081565b600060208083528351808285015260005b8181101561055057858101830151858201604001528201610534565b81811115610562576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220b2340026463f33e6995635469923172c928dbb47cc5dc3d5f7eb19be1e4dcc8064736f6c634300080c0033","opcodes":"PUSH2 0x5AE PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72670508 GT PUSH2 0xE8 JUMPI DUP1 PUSH4 0xC059011B GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0xE81216B5 GT PUSH2 0x7B JUMPI DUP1 PUSH4 0xE81216B5 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xEC94A577 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xEF494C25 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xFEFF83C3 EQ PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC059011B EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xD0A6D1A6 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xD5BEC685 EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72670508 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x86F8148F EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x8CB739C6 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x90131FAB EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x9BF3CFE3 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xB746287B EQ PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38ABF0C9 GT PUSH2 0x155 JUMPI DUP1 PUSH4 0x5560F1F8 GT PUSH2 0x12F JUMPI DUP1 PUSH4 0x5560F1F8 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x585C081C EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x63731080 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x652B7F31 EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38ABF0C9 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x3A13248F EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x552E387C EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7475084 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x143C1C36 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x1557FF24 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x23312297 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x2B72DDBD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x35A02D73 EQ PUSH2 0x25D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x19981B PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x19181B PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x66607 PUSH1 0xEB SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323033 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x199819 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333035 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x191819 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x64607 PUSH1 0xEB SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x313031 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333033 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323035 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323031 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x31303 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x32303 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323039 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x33303 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323037 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x189819 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333031 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0xFC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333037 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xCCC0D PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333039 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x32313 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xC8C0D PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x550 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x534 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALLVALUE STOP 0x26 CHAINID EXTCODEHASH CALLER 0xE6 SWAP10 JUMP CALLDATALOAD CHAINID SWAP10 0x23 OR 0x2C SWAP3 DUP14 0xBB SELFBALANCE 0xCC 0x5D 0xC3 0xD5 0xF7 0xEB NOT 0xBE 0x1E 0x4D 0xCC DUP1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"62:1481:35:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;62:1481:35;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ERC20_BALANCE_INVALID_7973":{"entryPoint":null,"id":7973,"parameterSlots":0,"returnSlots":0},"@ERC20_NOT_APPROVED_7976":{"entryPoint":null,"id":7976,"parameterSlots":0,"returnSlots":0},"@ERC_20_NOT_ALLOW_7982":{"entryPoint":null,"id":7982,"parameterSlots":0,"returnSlots":0},"@ERC_721_NOT_APPROVED_7964":{"entryPoint":null,"id":7964,"parameterSlots":0,"returnSlots":0},"@FORBIDDEN_TRANSFER_PROJECT_7958":{"entryPoint":null,"id":7958,"parameterSlots":0,"returnSlots":0},"@INVALID_ERC721_OWNER_7961":{"entryPoint":null,"id":7961,"parameterSlots":0,"returnSlots":0},"@INV_ADD_7919":{"entryPoint":null,"id":7919,"parameterSlots":0,"returnSlots":0},"@INV_FEE_PROJECT_7931":{"entryPoint":null,"id":7931,"parameterSlots":0,"returnSlots":0},"@INV_PARAMS_7940":{"entryPoint":null,"id":7940,"parameterSlots":0,"returnSlots":0},"@INV_PROJECT_7934":{"entryPoint":null,"id":7934,"parameterSlots":0,"returnSlots":0},"@INV_TOKEN_7955":{"entryPoint":null,"id":7955,"parameterSlots":0,"returnSlots":0},"@MISSING_NAME_7928":{"entryPoint":null,"id":7928,"parameterSlots":0,"returnSlots":0},"@OFFERING_CLOSED_7967":{"entryPoint":null,"id":7967,"parameterSlots":0,"returnSlots":0},"@ONLY_ADMIN_ALLOWED_7922":{"entryPoint":null,"id":7922,"parameterSlots":0,"returnSlots":0},"@ONLY_CREATOR_7925":{"entryPoint":null,"id":7925,"parameterSlots":0,"returnSlots":0},"@OPENING_SCHEDULE_7952":{"entryPoint":null,"id":7952,"parameterSlots":0,"returnSlots":0},"@REACH_MAX_7937":{"entryPoint":null,"id":7937,"parameterSlots":0,"returnSlots":0},"@SUCCESS_7910":{"entryPoint":null,"id":7910,"parameterSlots":0,"returnSlots":0},"@TOKEN_HAS_SEED_7946":{"entryPoint":null,"id":7946,"parameterSlots":0,"returnSlots":0},"@TOO_HIGH_7943":{"entryPoint":null,"id":7943,"parameterSlots":0,"returnSlots":0},"@TRANSFER_FAIL_7979":{"entryPoint":null,"id":7979,"parameterSlots":0,"returnSlots":0},"@VALUE_INVALID_7970":{"entryPoint":null,"id":7970,"parameterSlots":0,"returnSlots":0},"@ZERO_ADDR_7916":{"entryPoint":null,"id":7916,"parameterSlots":0,"returnSlots":0},"@ZERO_DURATION_7988":{"entryPoint":null,"id":7988,"parameterSlots":0,"returnSlots":0},"@ZERO_PRICE_7985":{"entryPoint":null,"id":7985,"parameterSlots":0,"returnSlots":0},"@ZERO_SEED_7949":{"entryPoint":null,"id":7949,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed":{"entryPoint":1315,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:837:37","statements":[{"nodeType":"YulBlock","src":"6:3:37","statements":[]},{"body":{"nodeType":"YulBlock","src":"143:476:37","statements":[{"nodeType":"YulVariableDeclaration","src":"153:12:37","value":{"kind":"number","nodeType":"YulLiteral","src":"163:2:37","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"157:2:37","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"181:9:37"},{"name":"_1","nodeType":"YulIdentifier","src":"192:2:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"174:6:37"},"nodeType":"YulFunctionCall","src":"174:21:37"},"nodeType":"YulExpressionStatement","src":"174:21:37"},{"nodeType":"YulVariableDeclaration","src":"204:27:37","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"224:6:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"218:5:37"},"nodeType":"YulFunctionCall","src":"218:13:37"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"208:6:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"251:9:37"},{"name":"_1","nodeType":"YulIdentifier","src":"262:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"247:3:37"},"nodeType":"YulFunctionCall","src":"247:18:37"},{"name":"length","nodeType":"YulIdentifier","src":"267:6:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"240:6:37"},"nodeType":"YulFunctionCall","src":"240:34:37"},"nodeType":"YulExpressionStatement","src":"240:34:37"},{"nodeType":"YulVariableDeclaration","src":"283:10:37","value":{"kind":"number","nodeType":"YulLiteral","src":"292:1:37","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"287:1:37","type":""}]},{"body":{"nodeType":"YulBlock","src":"352:90:37","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"381:9:37"},{"name":"i","nodeType":"YulIdentifier","src":"392:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"377:3:37"},"nodeType":"YulFunctionCall","src":"377:17:37"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"373:3:37"},"nodeType":"YulFunctionCall","src":"373:26:37"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"415:6:37"},{"name":"i","nodeType":"YulIdentifier","src":"423:1:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:37"},"nodeType":"YulFunctionCall","src":"411:14:37"},{"name":"_1","nodeType":"YulIdentifier","src":"427:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:37"},"nodeType":"YulFunctionCall","src":"407:23:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"401:5:37"},"nodeType":"YulFunctionCall","src":"401:30:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"366:6:37"},"nodeType":"YulFunctionCall","src":"366:66:37"},"nodeType":"YulExpressionStatement","src":"366:66:37"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"313:1:37"},{"name":"length","nodeType":"YulIdentifier","src":"316:6:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"310:2:37"},"nodeType":"YulFunctionCall","src":"310:13:37"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"324:19:37","statements":[{"nodeType":"YulAssignment","src":"326:15:37","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"335:1:37"},{"name":"_1","nodeType":"YulIdentifier","src":"338:2:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"331:3:37"},"nodeType":"YulFunctionCall","src":"331:10:37"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"326:1:37"}]}]},"pre":{"nodeType":"YulBlock","src":"306:3:37","statements":[]},"src":"302:140:37"},{"body":{"nodeType":"YulBlock","src":"476:66:37","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"505:9:37"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"501:3:37"},"nodeType":"YulFunctionCall","src":"501:22:37"},{"kind":"number","nodeType":"YulLiteral","src":"525:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"497:3:37"},"nodeType":"YulFunctionCall","src":"497:31:37"},{"kind":"number","nodeType":"YulLiteral","src":"530:1:37","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"490:6:37"},"nodeType":"YulFunctionCall","src":"490:42:37"},"nodeType":"YulExpressionStatement","src":"490:42:37"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"457:1:37"},{"name":"length","nodeType":"YulIdentifier","src":"460:6:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"454:2:37"},"nodeType":"YulFunctionCall","src":"454:13:37"},"nodeType":"YulIf","src":"451:91:37"},{"nodeType":"YulAssignment","src":"551:62:37","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"567:9:37"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"586:6:37"},{"kind":"number","nodeType":"YulLiteral","src":"594:2:37","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"582:3:37"},"nodeType":"YulFunctionCall","src":"582:15:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"603:2:37","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"599:3:37"},"nodeType":"YulFunctionCall","src":"599:7:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"578:3:37"},"nodeType":"YulFunctionCall","src":"578:29:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"563:3:37"},"nodeType":"YulFunctionCall","src":"563:45:37"},{"kind":"number","nodeType":"YulLiteral","src":"610:2:37","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"559:3:37"},"nodeType":"YulFunctionCall","src":"559:54:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"551:4:37"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"112:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"123:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"134:4:37","type":""}],"src":"14:605:37"},{"body":{"nodeType":"YulBlock","src":"733:102:37","statements":[{"nodeType":"YulAssignment","src":"743:26:37","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"755:9:37"},{"kind":"number","nodeType":"YulLiteral","src":"766:2:37","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"751:3:37"},"nodeType":"YulFunctionCall","src":"751:18:37"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"743:4:37"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"785:9:37"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"800:6:37"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"816:3:37","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"821:1:37","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"812:3:37"},"nodeType":"YulFunctionCall","src":"812:11:37"},{"kind":"number","nodeType":"YulLiteral","src":"825:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"808:3:37"},"nodeType":"YulFunctionCall","src":"808:19:37"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"796:3:37"},"nodeType":"YulFunctionCall","src":"796:32:37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"778:6:37"},"nodeType":"YulFunctionCall","src":"778:51:37"},"nodeType":"YulExpressionStatement","src":"778:51:37"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"702:9:37","type":""},{"name":"value0","nodeType":"YulTypedName","src":"713:6:37","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"724:4:37","type":""}],"src":"624:211:37"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":37,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600436106101985760003560e01c806372670508116100e8578063c059011b116100a1578063e81216b51161007b578063e81216b51461049b578063ec94a577146104bd578063ef494c25146104df578063feff83c31461050157600080fd5b8063c059011b14610437578063d0a6d1a614610459578063d5bec6851461047957600080fd5b8063726705081461036b57806386f8148f1461038d5780638cb739c6146103af57806390131fab146103d15780639bf3cfe3146103f3578063b746287b1461041557600080fd5b806338abf0c9116101555780635560f1f81161012f5780635560f1f8146102e5578063585c081c146103075780636373108014610329578063652b7f311461034957600080fd5b806338abf0c91461027f5780633a13248f146102a1578063552e387c146102c357600080fd5b8063074750841461019d578063143c1c36146101d55780631557ff24146101f757806323312297146102195780632b72ddbd1461023b57806335a02d731461025d575b600080fd5b6101bf6040518060400160405280600381526020016219981b60e91b81525081565b6040516101cc9190610523565b60405180910390f35b6101bf6040518060400160405280600381526020016219181b60e91b81525081565b6101bf6040518060400160405280600381526020016206660760eb1b81525081565b6101bf6040518060400160405280600381526020016232303360e81b81525081565b6101bf6040518060400160405280600381526020016219981960e91b81525081565b6101bf6040518060400160405280600381526020016233303560e81b81525081565b6101bf6040518060400160405280600381526020016219181960e91b81525081565b6101bf6040518060400160405280600381526020016206460760eb1b81525081565b6101bf6040518060400160405280600381526020016231303160e81b81525081565b6101bf6040518060400160405280600381526020016233303360e81b81525081565b6101bf6040518060400160405280600381526020016232303560e81b81525081565b610331600081565b6040516001600160a01b0390911681526020016101cc565b6101bf6040518060400160405280600381526020016232303160e81b81525081565b6101bf6040518060400160405280600381526020016203130360ec1b81525081565b6101bf6040518060400160405280600381526020016203230360ec1b81525081565b6101bf6040518060400160405280600381526020016232303960e81b81525081565b6101bf6040518060400160405280600381526020016203330360ec1b81525081565b6101bf6040518060400160405280600381526020016232303760e81b81525081565b6101bf6040518060400160405280600381526020016218981960e91b81525081565b6101bf6040518060400160405280600381526020016233303160e81b81525081565b6101bf604051806040016040528060018152602001600360fc1b81525081565b6101bf6040518060400160405280600381526020016233303760e81b81525081565b6101bf604051806040016040528060038152602001620ccc0d60ea1b81525081565b6101bf6040518060400160405280600381526020016233303960e81b81525081565b6101bf6040518060400160405280600381526020016203231360ec1b81525081565b6101bf604051806040016040528060038152602001620c8c0d60ea1b81525081565b600060208083528351808285015260005b8181101561055057858101830151858201604001528201610534565b81811115610562576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220b2340026463f33e6995635469923172c928dbb47cc5dc3d5f7eb19be1e4dcc8064736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72670508 GT PUSH2 0xE8 JUMPI DUP1 PUSH4 0xC059011B GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0xE81216B5 GT PUSH2 0x7B JUMPI DUP1 PUSH4 0xE81216B5 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xEC94A577 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xEF494C25 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xFEFF83C3 EQ PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC059011B EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xD0A6D1A6 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xD5BEC685 EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72670508 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x86F8148F EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x8CB739C6 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x90131FAB EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x9BF3CFE3 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xB746287B EQ PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38ABF0C9 GT PUSH2 0x155 JUMPI DUP1 PUSH4 0x5560F1F8 GT PUSH2 0x12F JUMPI DUP1 PUSH4 0x5560F1F8 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x585C081C EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x63731080 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x652B7F31 EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38ABF0C9 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x3A13248F EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x552E387C EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7475084 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x143C1C36 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x1557FF24 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x23312297 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x2B72DDBD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x35A02D73 EQ PUSH2 0x25D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x19981B PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x19181B PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x66607 PUSH1 0xEB SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323033 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x199819 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333035 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x191819 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x64607 PUSH1 0xEB SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x313031 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333033 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323035 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323031 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x31303 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x32303 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323039 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x33303 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x323037 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x189819 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333031 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0xFC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333037 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xCCC0D PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x333039 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x32313 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xC8C0D PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x550 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x534 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALLVALUE STOP 0x26 CHAINID EXTCODEHASH CALLER 0xE6 SWAP10 JUMP CALLDATALOAD CHAINID SWAP10 0x23 OR 0x2C SWAP3 DUP14 0xBB SELFBALANCE 0xCC 0x5D 0xC3 0xD5 0xF7 0xEB NOT 0xBE 0x1E 0x4D 0xCC DUP1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"62:1481:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1346:44;;;;;;;;;;;;;;;-1:-1:-1;;;1346:44:35;;;;;;;;;;;;:::i;:::-;;;;;;;;727:45;;;;;;;;;;;;;;;-1:-1:-1;;;727:45:35;;;;;1449:41;;;;;;;;;;;;;;;-1:-1:-1;;;1449:41:35;;;;;589:40;;;;;;;;;;;;;;;-1:-1:-1;;;589:40:35;;;;;1131:46;;;;;;;;;;;;;;;-1:-1:-1;;;1131:46:35;;;;;1291:49;;;;;;;;;;;;;;;-1:-1:-1;;;1291:49:35;;;;;541:42;;;;;;;;;;;;;;;-1:-1:-1;;;541:42:35;;;;;824:47;;;;;;;;;;;;;;;-1:-1:-1;;;824:47:35;;;;;311:49;;;;;;;;;;;;;;;-1:-1:-1;;;311:49:35;;;;;1183:44;;;;;;;;;;;;;;;-1:-1:-1;;;1183:44:35;;;;;682:39;;;;;;;;;;;;;;;-1:-1:-1;;;682:39:35;;;;;187:48;;231:3;187:48;;;;;-1:-1:-1;;;;;796:32:37;;;778:51;;766:2;751:18;187:48:35;624:211:37;489:46:35;;;;;;;;;;;;;;;-1:-1:-1;;;489:46:35;;;;;267:38;;;;;;;;;;;;;;;-1:-1:-1;;;267:38:35;;;;;440:43;;;;;;;;;;;;;;;-1:-1:-1;;;440:43:35;;;;;877:40;;;;;;;;;;;;;;;-1:-1:-1;;;877:40:35;;;;;1017:51;;;;;;;;;;;;;;;-1:-1:-1;;;1017:51:35;;;;;778:40;;;;;;;;;;;;;;;-1:-1:-1;;;778:40:35;;;;;366:43;;;;;;;;;;;;;;;-1:-1:-1;;;366:43:35;;;;;1074:51;;;;;;;;;;;;;;;-1:-1:-1;;;1074:51:35;;;;;144:36;;;;;;;;;;;;;;;-1:-1:-1;;;144:36:35;;;;;1396:47;;;;;;;;;;;;;;;-1:-1:-1;;;1396:47:35;;;;;1233:52;;;;;;;;;;;;;;;-1:-1:-1;;;1233:52:35;;;;;1496:44;;;;;;;;;;;;;;;-1:-1:-1;;;1496:44:35;;;;;923:57;;;;;;;;;;;;;;;-1:-1:-1;;;923:57:35;;;;;635:41;;;;;;;;;;;;;;;-1:-1:-1;;;635:41:35;;;;;14:605:37;134:4;163:2;192;181:9;174:21;224:6;218:13;267:6;262:2;251:9;247:18;240:34;292:1;302:140;316:6;313:1;310:13;302:140;;;411:14;;;407:23;;401:30;377:17;;;396:2;373:26;366:66;331:10;;302:140;;;460:6;457:1;454:13;451:91;;;530:1;525:2;516:6;505:9;501:22;497:31;490:42;451:91;-1:-1:-1;603:2:37;582:15;-1:-1:-1;;578:29:37;563:45;;;;610:2;559:54;;14:605;-1:-1:-1;;;14:605:37:o"},"methodIdentifiers":{"ERC20_BALANCE_INVALID()":"e81216b5","ERC20_NOT_APPROVED()":"35a02d73","ERC_20_NOT_ALLOW()":"d5bec685","ERC_721_NOT_APPROVED()":"c059011b","FORBIDDEN_TRANSFER_PROJECT()":"ef494c25","INVALID_ERC721_OWNER()":"90131fab","INV_ADD()":"72670508","INV_FEE_PROJECT()":"652b7f31","INV_PARAMS()":"feff83c3","INV_PROJECT()":"38abf0c9","INV_TOKEN()":"8cb739c6","MISSING_NAME()":"86f8148f","OFFERING_CLOSED()":"2b72ddbd","ONLY_ADMIN_ALLOWED()":"552e387c","ONLY_CREATOR()":"b746287b","OPENING_SCHEDULE()":"3a13248f","REACH_MAX()":"23312297","SUCCESS()":"d0a6d1a6","TOKEN_HAS_SEED()":"143c1c36","TOO_HIGH()":"585c081c","TRANSFER_FAIL()":"07475084","VALUE_INVALID()":"5560f1f8","ZERO_ADDR()":"63731080","ZERO_DURATION()":"ec94a577","ZERO_PRICE()":"1557ff24","ZERO_SEED()":"9bf3cfe3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC20_BALANCE_INVALID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC20_NOT_APPROVED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC_20_NOT_ALLOW\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC_721_NOT_APPROVED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORBIDDEN_TRANSFER_PROJECT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INVALID_ERC721_OWNER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INV_ADD\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INV_FEE_PROJECT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INV_PARAMS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INV_PROJECT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INV_TOKEN\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MISSING_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OFFERING_CLOSED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONLY_ADMIN_ALLOWED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONLY_CREATOR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPENING_SCHEDULE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REACH_MAX\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUCCESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_HAS_SEED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOO_HIGH\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_FAIL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALUE_INVALID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_ADDR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_DURATION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_PRICE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_SEED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/helpers/Errors.sol\":\"Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/helpers/Errors.sol\":{\"keccak256\":\"0xa1b320b53ca3c39089f901d1670d902e1191c7b6ac3c2c0c22678dd35c1d487f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ec968ebe161a138e6041026f13db727cb4f9e8ea178d52580b48ff92f1abf8fc\",\"dweb:/ipfs/QmXmjcC4xvCLkf4mUcFaYrWDkjCtBd3UtQqHHqe25Sg3zn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/libs/structs/NFTProject.sol":{"NFTProject":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"time","type":"uint256"}],"name":"CompleteProject","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":true,"internalType":"bool","name":"enable","type":"bool"}],"name":"SetProjectStatus","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":true,"internalType":"string","name":"data","type":"string"}],"name":"UpdateProjectCreatorName","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":true,"internalType":"string","name":"data","type":"string"}],"name":"UpdateProjectLicense","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":true,"internalType":"string","name":"data","type":"string"}],"name":"UpdateProjectName","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"price","type":"uint256"}],"name":"UpdateProjectPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"projectId","type":"uint256"},{"components":[{"internalType":"string","name":"_web","type":"string"},{"internalType":"string","name":"_twitter","type":"string"},{"internalType":"string","name":"_discord","type":"string"},{"internalType":"string","name":"_medium","type":"string"},{"internalType":"string","name":"_instagram","type":"string"}],"indexed":false,"internalType":"struct NFTProject.ProjectSocial","name":"data","type":"tuple"}],"name":"UpdateProjectSocial","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061e5fd076fa5025ffdc1a4cc16ebd0861b0880df17a7ea9ce63e1f9cbfd84b7e64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xE5FD SMOD PUSH16 0xA5025FFDC1A4CC16EBD0861B0880DF17 0xA7 0xEA SWAP13 0xE6 RETURNDATACOPY 0x1F SWAP13 0xBF 0xD8 0x4B PUSH31 0x64736F6C634300080C00330000000000000000000000000000000000000000 ","sourceMap":"25:2310:36:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;25:2310:36;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061e5fd076fa5025ffdc1a4cc16ebd0861b0880df17a7ea9ce63e1f9cbfd84b7e64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xE5FD SMOD PUSH16 0xA5025FFDC1A4CC16EBD0861B0880DF17 0xA7 0xEA SWAP13 0xE6 RETURNDATACOPY 0x1F SWAP13 0xBF 0xD8 0x4B PUSH31 0x64736F6C634300080C00330000000000000000000000000000000000000000 ","sourceMap":"25:2310:36:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"CompleteProject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"SetProjectStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"UpdateProjectCreatorName\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"UpdateProjectLicense\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"UpdateProjectName\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"UpdateProjectPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"_web\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_discord\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_medium\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_instagram\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct NFTProject.ProjectSocial\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"UpdateProjectSocial\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/structs/NFTProject.sol\":\"NFTProject\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/structs/NFTProject.sol\":{\"keccak256\":\"0x63525514527536062cadf5faf2913f4fc2862691ba4b1a5474e30baff68b54ef\",\"urls\":[\"bzz-raw://6badddd7bc4f2c0bee86b9f87cfa2033bf950660d3e00438a91b9c26c0b2d9f8\",\"dweb:/ipfs/QmcYyHHCEnJevQNRFbqqwoRnQrHA4kzxm5o8P5N1JbJR7S\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}